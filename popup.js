const colorswitch="color_switch";let popupClosed=!1;function LoaderScript(){var e=document.createElement("script");e.type="text/javascript",e.textContent='\n  var Module = {\n    preRun: [],\n    postRun: [],\n    print: function () {\n      console.log(Array.prototype.slice.call(arguments).join(" "));\n    },\n    printErr: function () {\n      console.warn(Array.prototype.slice.call(arguments).join(" "));\n    },\n    canvas: document.getElementById("canvas"),\n    totalDependencies: 0,\n    monitorRunDependencies: function (left) {\n      this.totalDependencies = Math.max(this.totalDependencies, left);\n    },\n  };\n  \n  window.addEventListener(\n    "keydown",\n    function (e) {\n      if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\n        e.preventDefault();\n      }\n    },\n    false\n  );\n  \n  function addEvent(elementId, evnt, funct) {\n    var element = document.getElementById(elementId);\n    if (element.attachEvent) return element.attachEvent("on" + evnt, funct);\n    else return element.addEventListener(evnt, funct, false);\n  }\n  \n  function setupCanvasTouchEvents() {\n    var canvas = document.getElementById("canvas");\n    var el = document.getElementById("canvas");\n    function adjustX(x) {\n      return (x * canvas.width) / parseInt(getComputedStyle(el).width, 10);\n    }\n    function adjustY(y) {\n      return (y * canvas.height) / parseInt(getComputedStyle(el).height, 10);\n    }\n  \n    el.addEventListener(\n      "touchstart",\n      function (evt) {\n        evt.preventDefault();\n        var touches = evt.changedTouches;\n        for (var i = 0; i < touches.length; i++) {\n          var touch = touches[i];\n          _pInput_TouchStart(\n            touch.identifier % 10,\n            adjustX(touch.clientX),\n            adjustY(touch.clientY)\n          );\n        }\n      },\n      false\n    );\n    el.addEventListener(\n      "touchend",\n      function (evt) {\n        evt.preventDefault();\n        var touches = evt.changedTouches;\n        for (var i = 0; i < touches.length; i++) {\n          var touch = touches[i];\n          _pInput_TouchEnd(touch.identifier % 10);\n        }\n      },\n      false\n    );\n    el.addEventListener(\n      "touchmove",\n      function (evt) {\n        evt.preventDefault();\n        var touches = evt.changedTouches;\n        for (var i = 0; i < touches.length; i++) {\n          var touch = touches[i];\n          _pInput_TouchMove(\n            touch.identifier % 10,\n            adjustX(touch.clientX),\n            adjustY(touch.clientY)\n          );\n        }\n      },\n      false\n    );\n  }\n  \n  var progressBar = document.getElementById("progress-bar");\n  var interval = setInterval(function () {\n    if (Module.dataFileDownloads && Module.dataFileDownloads["game.data"]) {\n      var data = Module.dataFileDownloads["game.data"];\n      var percent = Math.round((data.loaded * 100) / data.total);\n      progressBar.style.width = percent + "%";\n      progressBar.innerHTML = percent + "%";\n      if (data.loaded >= data.total) {\n        document.getElementById("progress").style.display = "none";\n        document.getElementById("canvas").className += " visible";\n        setupCanvasTouchEvents();\n        clearInterval(interval);\n      }\n    }\n  }, 100);\n  \n  var resizingCallback = function (e) {\n    var containerOuter = document.getElementById("canvas-container-outer");\n    var container = document.getElementById("canvas-container");\n  \n    var newHeight = containerOuter.offsetHeight;\n    var newWidth = newHeight * 0.75;\n    container.style.height = newHeight + "px";\n    container.style.width = newWidth + "px";\n  };\n  \n  window.addEventListener("resize", resizingCallback);\n  resizingCallback(null);\n  ',document.body.appendChild(e);var n=document.createElement("script");n.type="text/javascript",n.src="game.js",n.async=!0,document.body.appendChild(n)}function startTypingAnimation(){const e=document.getElementById("popup-title"),n=document.getElementById("popup-scrollable-content"),t="WAIT",o=["!!!","!!!Information","If u are a mobile user use desktop site mode.","!!!","Do you want to see this announcement again?"];let a=0;typeText(e,t,0,50),setTimeout((function e(){if(a<o.length){const t=document.createElement("div");n.appendChild(t);let c=o[a];/^!!!/.test(c)&&(t.classList.add("popup-content-heading"),c=c.replace(/^!!!/,""));let i=0;!function n(){i<c.length?(t.textContent+=c.charAt(i),i++,setTimeout(n,50)):(a++,setTimeout(e,50))}()}}),50*t.length)}function typeText(e,n,t,o){t<n.length&&(e.textContent+=n.charAt(t),t++,setTimeout((function(){typeText(e,n,t,o)}),o))}function closePopup(){const e=document.getElementById("popup");document.querySelector(".popup-content").style.animation="popOut 0.5s ease forwards, fadeOut 0.5s ease forwards",setTimeout((function(){e.style.display="none",popupClosed=!0,LoaderScript()}),500)}function checkLocalStorage(){if("no"!==localStorage.getItem(colorswitch)){const e=document.getElementById("popup"),n=document.querySelector(".popup-content");e.style.display="block",n.style.animation="popIn 0.5s ease forwards, fadeIn 0.5s ease forwards",startTypingAnimation()}else LoaderScript()}document.getElementById("yesButton").addEventListener("click",(function(){localStorage.setItem(colorswitch,"yes"),closePopup()})),document.getElementById("noButton").addEventListener("click",(function(){localStorage.setItem(colorswitch,"no"),closePopup()})),document.getElementById("popup").addEventListener("click",(function(e){e.target===this&&closePopup()})),window.addEventListener("load",(function(){checkLocalStorage()}));