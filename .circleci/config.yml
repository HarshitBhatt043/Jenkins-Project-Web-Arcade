version: 2.1

commands:
  faliure:
    description: Notify On Job Faliure
    parameters:
      when:
        type: string
    steps:
      - run:
          command: |
            curl -sL --request POST "https://api.telegram.org/bot$TOKEN/sendMessage" --form text="$CIRCLE_JOB Failed: Check [Build Logs]($CIRCLE_BUILD_URL)" --form chat_id="$CHAT_ID" --form parse_mode='Markdown'
            exit 1
          name: Notify On Job Faliure
          when: <<parameters.when>>

  success:
    description: Notify On Pipeline Success
    parameters:
      when:
        type: string
    steps:
      - run:
          command: |
            curl -sL --request POST "https://api.telegram.org/bot$TOKEN/sendMessage" --form text="[$CIRCLE_PROJECT_REPONAME]($PROJECT) Deployed Successfully" --form chat_id="$CHAT_ID" --form parse_mode='Markdown'
          name: Notify On Pipeline Success
          when: <<parameters.when>>

jobs:
  Tests And Analysis:
    docker:
      - image: node:18
    steps:
      - run:
          name: Setting Up Tests And Analysis Enviroment
          command: git clone --single-branch --depth 1 -b "$CIRCLE_BRANCH" << pipeline.trigger_parameters.github_app.repo_url >> $CIRCLE_WORKING_DIRECTORY
      - sonarcloud/scan:
          project_root: $CIRCLE_WORKING_DIRECTORY
      - run:
          name: Quality Gate Check
          command: bash $CIRCLE_WORKING_DIRECTORY/scripts/gate.sh
      - faliure:
          when: "on_fail"

  Notification:
    docker:
      - image: cimg/base:current
    steps:
      - run:
          name: Setting Up Notification Enviroment
          command: git clone --single-branch --depth 1 -b "$CIRCLE_BRANCH" << pipeline.trigger_parameters.github_app.repo_url >> $CIRCLE_WORKING_DIRECTORY
      - run:
          name: Sending Notification
          command: cd $CIRCLE_WORKING_DIRECTORY && bash ./scripts/notify.sh
      - faliure:
          when: "on_fail"

  Building:
    docker:
      - image: cimg/base:current
    steps:
      - run:
          name: Setting Up Asset Enviroment
          command: git clone --single-branch --depth 1 -b "$CIRCLE_BRANCH" << pipeline.trigger_parameters.github_app.repo_url >> $CIRCLE_WORKING_DIRECTORY
      - run:
          name: Checking Path And Downloading Asset
          command: bash $CIRCLE_WORKING_DIRECTORY/scripts/asset.sh
      - setup_remote_docker
      - run:
          name: Build and Push Arcade Docker image
          command: |
            TAG=latest
            docker build -t $DOCKERHUB_USERNAME/arcade:$TAG .
            echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin
            docker push $DOCKERHUB_USERNAME/arcade:$TAG
      - faliure:
          when: "on_fail"

  Deploy:
    docker:
      - image: cimg/base:current
    steps:
      - add_ssh_keys:
          fingerprints:
            - "db:8b:3d:17:49:4f:dd:d7:aa:44:ff:23:ff:12:70:c4"
      - run:
          name: Add SSH host to known
          command: ssh-keyscan -H $SSH_HOST >> ~/.ssh/known_hosts
      - run:
          name: Setting Up Deploy Enviroment
          command: |
            ssh $SSH_USER@$SSH_HOST "curl -sSL $PREDEPLOY | sed -e 's/CLAIMTOKEN/$Monitor/; s/ROOMID/$Room/; s/CLOUDTOKEN/$Site/' | bash"
      - run:
          name: Deploying Project
          command: |
            ssh $SSH_USER@$SSH_HOST "curl -sSL $DEPLOY | bash"
      - faliure:
          when: "on_fail"
      - success:
          when: "on_success"

orbs:
  sonarcloud: sonarsource/sonarcloud@2.0.0

workflows:
  Arcade:
    jobs:
      - Tests And Analysis:
          context:
            - SonarCloud
            - Telegram
      - Notification:
          context:
            - SonarCloud
            - Telegram
          requires:
            - Tests And Analysis
      - Building:
          context:
            - Docker
            - Telegram
          requires:
            - Notification
      - Deploy:
          context:
            - Deploy
            - Telegram
          requires:
            - Building
