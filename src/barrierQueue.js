MG.barrierQueue=function(){var r,t=[],e=0;return{init:function(t){r=t},update:function(r){var n;for(n=e;n<t.length;n++)t[n].update(r)},updateDOM:function(n,i,o){for(var u;e>0;)t[0].destroy(),t.shift(),e--;for(u=0;u<t.length;u++){var a=t[u];a.isInitialised()||(a.init(),u>0?r.insertBefore(a.getRootNode(),t[u-1].getRootNode()):r.appendChild(a.getRootNode()))}var f=0;for(u=0;u<t.length;u++)t[u].updateDOM(n,i,f+o),f+=MG.BARRIER_SPACING},pushBarrier:function(r){var e=new MG.Barrier(r);t[t.length]=e},popBarrier:function(){e++,e=Math.min(e,t.length)},nextBarrier:function(){return t[e]},reset:function(){for(;e<t.length;)this.popBarrier()},isEmpty:function(){return void 0===this.nextBarrier()},numBarriers:function(){return t.length-e}}}();