import{Instance}from"cooljs";import{blockAction,blockPainter}from"./block";import{checkMoveDown,getMoveDownValue,drawYellowString,getAngleBase}from"./utils";import{addFlight}from"./flight";import*as constant from"./constant";export const endAnimate=t=>{if(!t.getVariable(constant.gameStartNow))return;const e=t.getVariable(constant.successCount,0),o=t.getVariable(constant.failedCount),a=t.getVariable(constant.gameScore,0),n=Number(e)>99?.1*t.width:0;drawYellowString(t,{string:"floor",size:.06*t.width,x:.24*t.width+n,y:.12*t.width,textAlign:"left",fontName:"Arial",fontWeight:"bold"}),drawYellowString(t,{string:e,size:.17*t.width,x:.22*t.width+n,y:.2*t.width,textAlign:"right"});const i=t.getImg("score"),r=i.width,c=i.height,s=.35*t.width,l=c*s/r;t.ctx.drawImage(i,.61*t.width,.038*t.width,s,l),drawYellowString(t,{string:a,size:.06*t.width,x:.9*t.width,y:.11*t.width,textAlign:"right"});const{ctx:g}=t,d=t.getImg("heart"),h=d.width,b=d.height,w=.08*t.width,m=b*w/h;for(let e=1;e<=3;e+=1)g.save(),e<=o&&(g.globalAlpha=.2),g.drawImage(d,.66*t.width+(e-1)*w,.16*t.width,w,m),g.restore()};export const startAnimate=t=>{if(!t.getVariable(constant.gameStartNow))return;const e=t.getInstance(`block_${t.getVariable(constant.blockCount)}`);if(!e||[constant.land,constant.out].indexOf(e.status)>-1){if(checkMoveDown(t)&&getMoveDownValue(t))return;if(t.checkTimeMovement(constant.hookUpMovement))return;const e=getAngleBase(t),o=Math.PI*t.utils.random(e,e+5)*t.utils.randomPositiveNegative()/180;t.setVariable(constant.blockCount,t.getVariable(constant.blockCount)+1),t.setVariable(constant.initialAngle,o),t.setTimeMovement(constant.hookDownMovement,500);const a=new Instance({name:`block_${t.getVariable(constant.blockCount)}`,action:blockAction,painter:blockPainter});t.addInstance(a)}switch(Number(t.getVariable(constant.successCount,0))){case 2:addFlight(t,1,"leftToRight");break;case 6:addFlight(t,2,"rightToLeft");break;case 8:addFlight(t,3,"leftToRight");break;case 14:addFlight(t,4,"bottomToTop");break;case 18:addFlight(t,5,"bottomToTop");break;case 22:addFlight(t,6,"bottomToTop");break;case 25:addFlight(t,7,"rightTopToLeft");break;default:break}};