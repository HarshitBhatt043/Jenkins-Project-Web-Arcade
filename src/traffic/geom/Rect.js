import{Traffic}from"../Traffic.js";import{Point}from"./Point.js";import{Segment}from"./Segment.js";export class Rect{constructor(t=0,i=0,h=0,r=0){this.x=t,this.y=i,this._width=h,this._height=r}copy(t){return this.x=t.x,this.y=t.y,this._width=t._width,this._height=t._height,this}clone(){return new this.constructor(this.x,this.y,this._width,this._height)}toJSON(){return Traffic.extend({},this)}key(){return[this.x,this.y].join(",")}area(){return this.width()*this.height()}left(t){return null!=t&&(this.x=t),this.x}right(t){return null!=t&&(this.x=t-this.width()),this.x+this.width()}width(t){return null!=t&&(this._width=t),this._width}top(t){return null!=t&&(this.y=t),this.y}bottom(t){return null!=t&&(this.y=t-this.height()),this.y+this.height()}height(t){return null!=t&&(this._height=t),this._height}pos(){return new Point(this.x,this.y)}center(t){return null!=t&&(this.x=t.x-.5*this.width(),this.y=t.y-.5*this.height()),new Point(this.x+.5*this.width(),this.y+.5*this.height())}containsPoint(t){return this.left()<=t.x&&t.x<=this.right()&&this.top()<=t.y&&t.y<=this.bottom()}containsRect(t){return this.left()<=t.left()&&t.right()<=this.right()&&this.top()<=t.top()&&t.bottom()<=this.bottom()}getVertices(){return[new Point(this.left(),this.top()),new Point(this.right(),this.top()),new Point(this.right(),this.bottom()),new Point(this.left(),this.bottom())]}getSide(t){let i=this.getVertices();return new Segment(i[t],i[(t+1)%4])}getSectorId(t){let i=t.subtract(this.center());if(i.y<=0&&Traffic.abs(i.x)<=Traffic.abs(i.y))return 0;if(i.x>=0&&Traffic.abs(i.x)>=Traffic.abs(i.y))return 1;if(i.y>=0&&Traffic.abs(i.x)<=Traffic.abs(i.y))return 2;if(i.x<=0&&Traffic.abs(i.x)>=Traffic.abs(i.y))return 3;throw Error("algorithm error")}getSector(t){return this.getSide(this.getSectorId(t))}}