import{math}from"./math/math.js";export class ZoneUtils{static pixToWorld(e){return e>>4}static worldToPix(e){return e<<4}static unwrapTile(e){return e.isTile?e=e.getValue():e}static canBulldoze(e){return(e=ZoneUtils.unwrapTile(e))>=Tile.FIRSTRIVEDGE&&e<=Tile.LASTRUBBLE||e>=Tile.POWERBASE+2&&e<=Tile.POWERBASE+12||e>=Tile.TINYEXP&&e<=Tile.LASTTINYEXP+2}static isCommercial(e){return(e=ZoneUtils.unwrapTile(e))>=Tile.COMBASE&&e<Tile.INDBASE}static isIndustrial(e){return(e=ZoneUtils.unwrapTile(e))>=Tile.INDBASE&&e<Tile.PORTBASE}static isResidential(e){return(e=ZoneUtils.unwrapTile(e))>=Tile.RESBASE&&e<Tile.HOSPITALBASE}static isDriveable(e){return(e=ZoneUtils.unwrapTile(e))>=Tile.ROADBASE&&e<=Tile.LASTRAIL||e===Tile.RAILHPOWERV||e===Tile.RAILVPOWERH}static isFire(e){return(e=ZoneUtils.unwrapTile(e))>=Tile.FIREBASE&&e<Tile.ROADBASE}static isFlood(e){return(e=ZoneUtils.unwrapTile(e))>=Tile.FLOOD&&e<Tile.LASTFLOOD}static isManualExplosion(e){return(e=ZoneUtils.unwrapTile(e))>=Tile.TINYEXP&&e<=Tile.LASTTINYEXP}static isRail(e){return(e=ZoneUtils.unwrapTile(e))>=Tile.RAILBASE&&e<Tile.RESBASE}static isRoad(e){return(e=ZoneUtils.unwrapTile(e))>=Tile.ROADBASE&&e<Tile.POWERBASE}static normalizeRoad(e){return(e=ZoneUtils.unwrapTile(e))>=Tile.ROADBASE&&e<=Tile.LASTROAD+1?64+(15&e):e}static isCommercialZone(e){return e.isZone()&&ZoneUtils.isCommercial(e)}static isIndustrialZone(e){return e.isZone()&&ZoneUtils.isIndustrial(e)}static isResidentialZone(e){return e.isZone()&&ZoneUtils.isResidential(e)}static randomFire(e){return new Tiles(Tile.FIRE+(3&math.getRandom16()),Tile.ANIMBIT)}static randomRubble(e){return new Tiles(Tile.RUBBLE+(3&math.getRandom16()),Tile.BULLBIT)}static HOSPITAL(e){}static checkBigZone=function(e){let T;switch(e){case Tile.POWERPLANT:case Tile.PORT:case Tile.NUCLEAR:case Tile.STADIUM:T={zoneSize:4,deltaX:0,deltaY:0};break;case Tile.POWERPLANT+1:case Tile.COALSMOKE3:case Tile.COALSMOKE3+1:case Tile.COALSMOKE3+2:case Tile.PORT+1:case Tile.NUCLEAR+1:case Tile.STADIUM+1:T={zoneSize:4,deltaX:-1,deltaY:0};break;case Tile.POWERPLANT+4:case Tile.PORT+4:case Tile.NUCLEAR+4:case Tile.STADIUM+4:T={zoneSize:4,deltaX:0,deltaY:-1};break;case Tile.POWERPLANT+5:case Tile.PORT+5:case Tile.NUCLEAR+5:case Tile.STADIUM+5:T={zoneSize:4,deltaX:-1,deltaY:-1};break;case Tile.AIRPORT:T={zoneSize:6,deltaX:0,deltaY:0};break;case Tile.AIRPORT+1:T={zoneSize:6,deltaX:-1,deltaY:0};break;case Tile.AIRPORT+2:T={zoneSize:6,deltaX:-2,deltaY:0};break;case Tile.AIRPORT+3:T={zoneSize:6,deltaX:-3,deltaY:0};break;case Tile.AIRPORT+6:T={zoneSize:6,deltaX:0,deltaY:-1};break;case Tile.AIRPORT+7:T={zoneSize:6,deltaX:-1,deltaY:-1};break;case Tile.AIRPORT+8:T={zoneSize:6,deltaX:-2,deltaY:-1};break;case Tile.AIRPORT+9:T={zoneSize:6,deltaX:-3,deltaY:-1};break;case Tile.AIRPORT+12:T={zoneSize:6,deltaX:0,deltaY:-2};break;case Tile.AIRPORT+13:T={zoneSize:6,deltaX:-1,deltaY:-2};break;case Tile.AIRPORT+14:T={zoneSize:6,deltaX:-2,deltaY:-2};break;case Tile.AIRPORT+15:T={zoneSize:6,deltaX:-3,deltaY:-2};break;case Tile.AIRPORT+18:T={zoneSize:6,deltaX:0,deltaY:-3};break;case Tile.AIRPORT+19:T={zoneSize:6,deltaX:-1,deltaY:-3};break;case Tile.AIRPORT+20:T={zoneSize:6,deltaX:-2,deltaY:-3};break;case Tile.AIRPORT+21:T={zoneSize:6,deltaX:-3,deltaY:-3};break;default:T={zoneSize:0,deltaX:0,deltaY:0};break}return T};static checkZoneSize(e){return e>=Tile.RESBASE-1&&e<=Tile.PORTBASE-1||e>=Tile.LASTPOWERPLANT+1&&e<=Tile.POLICESTATION+4||e>=Tile.CHURCH1BASE&&e<=Tile.CHURCH7LAST?3:e>=Tile.PORTBASE&&e<=Tile.LASTPORT||e>=Tile.COALBASE&&e<=Tile.LASTPOWERPLANT||e>=Tile.STADIUMBASE&&e<=Tile.LASTZONE?4:0}static fireZone(e,T,i,l){let R,t,A,a,E=e.getTileValue(T,i),L=2,S=l.rateOfGrowthMap.worldGet(T,i);for(S=math.clamp(S-20,-200,200),l.rateOfGrowthMap.worldSet(T,i,S),E===Tile.AIRPORT?L=5:E>=Tile.PORTBASE?L=3:E<Tile.PORTBASE&&(L=2),R=-1;R<L;R++)for(t=-1;t<L;t++)A=T+R,a=i+t,e.testBounds(A,a)&&e.getTileValue(A,a>=Tile.ROADBASE)&&e.addTileFlags(A,a,Tile.BULLBIT)}static getLandPollutionValue(e,T,i){let l=e.landValueMap.worldGet(T,i);return l-=e.pollutionDensityMap.worldGet(T,i),l<30?0:l<80?1:l<150?2:3}static incRateOfGrowth(e,T,i,l){let R=e.rateOfGrowthMap.worldGet(T,i),t=math.clamp(R+4*l,-200,200);e.rateOfGrowthMap.worldSet(T,i,t)}static putZone(e,T,i,l,R){let t,A,a;for(t=-1;t<2;t++)for(A=-1;A<2;A++)if(a=e.getTileValue(T+A,i+t),a>=Tile.FLOOD&&a<Tile.ROADBASE)return;e.putZone(T,i,l,3),e.addTileFlags(T,i,Tile.BULLBIT),R&&e.addTileFlags(T,i,Tile.POWERBIT)}}export class Tiles{constructor(e=Tile.DIRT,T){this.isTile=!0,this._value=e,arguments.length>1&&(this._value|=T)}getValue(){return this._value&Tile.BIT_MASK}setValue(e){if(0===arguments.length||"number"!=typeof e||e<0)throw new Error("Invalid parameter");let T=0;e<Tile.BIT_START&&(T=this._value&Tile.ALLBITS),this._value=e|T}isBulldozable(){return(this._value&Tile.BULLBIT)>0}isAnimated(){return(this._value&Tile.ANIMBIT)>0}isConductive(){return(this._value&Tile.CONDBIT)>0}isCombustible(){return(this._value&Tile.BURNBIT)>0}isPowered(){return(this._value&Tile.POWERBIT)>0}isZone(){return(this._value&Tile.ZONEBIT)>0}addFlags(e){if(!arguments.length||"number"!=typeof e||e<Tile.BIT_START||e>=Tile.BIT_END<<1)throw new Error("Invalid parameter");this._value|=e}removeFlags(e){if(!arguments.length||"number"!=typeof e||e<Tile.BIT_START||e>=Tile.BIT_END<<1)throw new Error("Invalid parameter");this._value&=~e}setFlags(e){let T=this._value&~Tile.ALLBITS;this._value=T|e}getFlags(){return this._value&Tile.ALLBITS}getRawValue(){return this._value}set(e,T){if(arguments.length<2||"number"!=typeof e||"number"!=typeof T||e>=Tile.TILE_COUNT)throw new Error("Invalid parameter");this.setValue(e),this.setFlags(T)}toString(){let e="Tile# "+this.getValue();return e+=this.isCombustible()?" burning":"",e+=this.isPowered()?" powered":"",e+=this.isAnimated()?" animated":"",e+=this.isConductive()?" conductive":"",e+=this.isZone()?" zone":"",e+=this.isBulldozable()?" bulldozeable":"",e}}export const Tile={POWERBIT:32768,CONDBIT:16384,BURNBIT:8192,BULLBIT:4096,ANIMBIT:2048,ZONEBIT:1024,BLBNBIT:12288,BLBNCNBIT:28672,BNCNBIT:24576,ASCBIT:26624,ALLBITS:64512,BIT_START:1024,BIT_END:32768,BIT_MASK:1023,DIRT:0,RIVER:2,REDGE:3,CHANNEL:4,FIRSTRIVEDGE:5,LASTRIVEDGE:20,WATER_LOW:2,WATER_HIGH:20,TREEBASE:21,WOODS_LOW:21,LASTTREE:36,WOODS:37,UNUSED_TRASH1:38,UNUSED_TRASH2:39,WOODS_HIGH:39,WOODS2:40,WOODS3:41,WOODS4:42,WOODS5:43,RUBBLE:44,LASTRUBBLE:47,FLOOD:48,LASTFLOOD:51,RADTILE:52,UNUSED_TRASH3:53,UNUSED_TRASH4:54,UNUSED_TRASH5:55,FIRE:48,FIREBASE:48,LASTFIRE:55,HBRIDGE:64,ROADBASE:64,VBRIDGE:65,ROADS:66,ROADS2:67,ROADS3:68,ROADS4:69,ROADS5:70,ROADS6:71,ROADS7:72,ROADS8:73,ROADS9:74,ROADS10:75,INTERSECTION:76,HROADPOWER:77,VROADPOWER:78,BRWH:79,LTRFBASE:80,BRWV:95,BRWXXX1:111,BRWXXX2:127,BRWXXX3:143,HTRFBASE:144,BRWXXX4:159,BRWXXX5:175,BRWXXX6:191,LASTROAD:206,BRWXXX7:207,HPOWER:208,VPOWER:209,LHPOWER:210,LVPOWER:211,LVPOWER2:212,LVPOWER3:213,LVPOWER4:214,LVPOWER5:215,LVPOWER6:216,LVPOWER7:217,LVPOWER8:218,LVPOWER9:219,LVPOWER10:220,RAILHPOWERV:221,RAILVPOWERH:222,POWERBASE:208,LASTPOWER:222,UNUSED_TRASH6:223,HRAIL:224,VRAIL:225,LHRAIL:226,LVRAIL:227,LVRAIL2:228,LVRAIL3:229,LVRAIL4:230,LVRAIL5:231,LVRAIL6:232,LVRAIL7:233,LVRAIL8:234,LVRAIL9:235,LVRAIL10:236,HRAILROAD:237,VRAILROAD:238,RAILBASE:224,LASTRAIL:238,ROADVPOWERH:239,RESBASE:240,FREEZ:244,HOUSE:249,LHTHR:249,HHTHR:260,RZB:265,HOSPITALBASE:405,HOSPITAL:409,CHURCHBASE:414,CHURCH0BASE:414,CHURCH:418,CHURCH0:418,COMBASE:423,COMCLR:427,CZB:436,COMLAST:609,INDBASE:612,INDCLR:616,LASTIND:620,IND1:621,IZB:625,IND2:641,IND3:644,IND4:649,IND5:650,IND6:676,IND7:677,IND8:686,IND9:689,PORTBASE:693,PORT:698,LASTPORT:708,AIRPORTBASE:709,RADAR:711,AIRPORT:716,COALBASE:745,POWERPLANT:750,LASTPOWERPLANT:760,FIRESTBASE:761,FIRESTATION:765,POLICESTBASE:770,POLICESTATION:774,STADIUMBASE:779,STADIUM:784,FULLSTADIUM:800,NUCLEARBASE:811,NUCLEAR:816,LASTZONE:826,LIGHTNINGBOLT:827,HBRDG0:828,HBRDG1:829,HBRDG2:830,HBRDG3:831,RADAR0:832,RADAR1:833,RADAR2:834,RADAR3:835,RADAR4:836,RADAR5:837,RADAR6:838,RADAR7:839,FOUNTAIN:840,INDBASE2:844,TELEBASE:844,TELELAST:851,SMOKEBASE:852,TINYEXP:860,SOMETINYEXP:864,LASTTINYEXP:867,TINYEXPLAST:883,COALSMOKE1:916,COALSMOKE2:920,COALSMOKE3:924,COALSMOKE4:928,FOOTBALLGAME1:932,FOOTBALLGAME2:940,VBRDG0:948,VBRDG1:949,VBRDG2:950,VBRDG3:951,NUKESWIRL1:952,NUKESWIRL2:953,NUKESWIRL3:954,NUKESWIRL4:955,CHURCH1BASE:956,CHURCH1:960,CHURCH2BASE:965,CHURCH2:969,CHURCH3BASE:974,CHURCH3:978,CHURCH4BASE:983,CHURCH4:987,CHURCH5BASE:992,CHURCH5:996,CHURCH6BASE:1001,CHURCH6:1005,CHURCH7BASE:1010,CHURCH7:1014,CHURCH7LAST:1018,TILE_COUNT:1024,TILE_INVALID:-1,MIN_SIZE:16};export const RoadTable=[Tile.ROADS,Tile.ROADS2,Tile.ROADS,Tile.ROADS3,Tile.ROADS2,Tile.ROADS2,Tile.ROADS4,Tile.ROADS8,Tile.ROADS,Tile.ROADS6,Tile.ROADS,Tile.ROADS7,Tile.ROADS5,Tile.ROADS10,Tile.ROADS9,Tile.INTERSECTION];export const RailTable=[Tile.LHRAIL,Tile.LVRAIL,Tile.LHRAIL,Tile.LVRAIL2,Tile.LVRAIL,Tile.LVRAIL,Tile.LVRAIL3,Tile.LVRAIL7,Tile.LHRAIL,Tile.LVRAIL5,Tile.LHRAIL,Tile.LVRAIL6,Tile.LVRAIL4,Tile.LVRAIL9,Tile.LVRAIL8,Tile.LVRAIL10];export const WireTable=[Tile.LHPOWER,Tile.LVPOWER,Tile.LHPOWER,Tile.LVPOWER2,Tile.LVPOWER,Tile.LVPOWER,Tile.LVPOWER3,Tile.LVPOWER7,Tile.LHPOWER,Tile.LVPOWER5,Tile.LHPOWER,Tile.LVPOWER6,Tile.LVPOWER4,Tile.LVPOWER9,Tile.LVPOWER8,Tile.LVPOWER10];