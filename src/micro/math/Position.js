import{Direction}from"./Direction.js";import{Micro}from"../Micro.js";export class Position{constructor(i,t,s){if(this.isPosition=!0,this.width=Micro.MAP_WIDTH,this.height=Micro.MAP_HEIGHT,this.x=0,this.y=0,this.validDirs=[Direction.NORTH,Direction.NORTHEAST,Direction.EAST,Direction.SOUTHEAST,Direction.SOUTH,Direction.SOUTHWEST,Direction.WEST,Direction.NORTHWEST,Direction.INVALID],0===arguments.length)return this;if(1===arguments.length&&!i.isPosition)throw new Error("Position constructor called with invalid pos "+i);if(3===arguments.length&&!i.isPosition)throw new Error("Position constructor called with invalid pos "+i);if(!(3!==arguments.length||this.isNumber(t)&&this.isNumber(s)))throw new Error("Position constructor called with invalid deltas "+t+" "+s);if(2===arguments.length&&this.isNumber(i)&&!this.isNumber(t))throw new Error("Position constructor called with invalid y coordinate "+i+" "+t);if(2===arguments.length&&i.isPosition&&(!this.isNumber(t)||!this.isDirection(t)))throw new Error("Position constructor called with invalid direction "+i+" "+t);if(2===arguments.length&&!this.isNumber(i)&&!i.isPosition)throw new Error("Position constructor called with bad existing position "+i+" "+t);let r=!0;if(this.isNumber(i)?(this.x=i,this.y=t):(this.set(i),2===arguments.length?r=this.move(t):3===arguments.length&&(this.x+=t,this.y+=s)),this.x<0||this.x>=this.width||this.y<0||this.y>=this.height||!r)throw new Error("Invalid parameter")}isNumber(i){return!isNaN(i)}isDirection(i){return this.isNumber(i)&&-1!==this.validDirs.indexOf(i)}set(i){this.x=i.x,this.y=i.y}toString(){return"("+this.x+", "+this.y+")"}toInt(){return this.y*this.width+this.x}move(i){let t=!1;switch(i){case Direction.INVALID:return!0;case Direction.NORTH:this.y>0&&(this.y--,t=!0);break;case Direction.NORTHEAST:this.y>0&&this.x<this.width-1&&(this.y--,this.x++,t=!0);break;case Direction.EAST:this.x<this.width-1&&(this.x++,t=!0);break;case Direction.SOUTHEAST:this.y<this.height-1&&this.x<this.width-1&&(this.x++,this.y++,t=!0);break;case Direction.SOUTH:this.y<this.height-1&&(this.y++,t=!0);break;case Direction.SOUTHWEST:this.y<this.height-1&&this.x>0&&(this.y++,this.x--,t=!0);break;case Direction.WEST:this.x>0&&(this.x--,t=!0);break;case Direction.NORTHWEST:this.y>0&&this.x>0&&(this.y--,this.x--,t=!0);break}return t}}