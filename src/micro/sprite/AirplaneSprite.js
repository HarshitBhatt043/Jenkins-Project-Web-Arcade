import{BaseSprite}from"./BaseSprite.js";import{Micro}from"../Micro.js";import{Messages}from"../Messages.js";import{SpriteUtils}from"./SpriteUtils.js";import{math}from"../math/math.js";export class AirplaneSprite extends BaseSprite{constructor(t,i,s,e){super(),this.init(Micro.SPRITE_AIRPLANE,t,i,s,e),this.width=48,this.height=48,this.xOffset=-24,this.yOffset=-24,s>SpriteUtils.worldToPix(t.width-20)?(this.destX=this.x-200,this.frame=7):(this.destX=this.x+200,this.frame=11),this.destY=this.y,this.xDelta=[0,0,6,8,6,0,-6,-8,-6,8,8,8],this.yDelta=[0,-8,-6,0,6,8,6,0,-6,0,0,0]}move(t,i,s,e){let r=this.frame;if(t%5==0)if(r>8)r--,r<9&&(r=3),this.frame=r;else{let t=SpriteUtils.getDir(this.x,this.y,this.destX,this.destY);r=SpriteUtils.turnTo(r,t),this.frame=r}if(SpriteUtils.absoluteDistance(this.x,this.y,this.destX,this.destY)<50&&(this.destX=math.getRandom(SpriteUtils.worldToPix(this.map.width))+8,this.destY=math.getRandom(SpriteUtils.worldToPix(this.map.height))+8),s.enableDisasters){let t=!1,s=this.spriteManager.getSpriteList();for(let e=0;e<s.length;e++){let r=s[e];0!==r.frame&&(r.type!==Micro.SPRITE_HELICOPTER&&r.type!==Micro.SPRITE_AIRPLANE||!SpriteUtils.checkSpriteCollision(this,r)||(r.explodeSprite(i),t=!0))}t&&this.explodeSprite(i)}this.x+=this.xDelta[r],this.y+=this.yDelta[r],this.spriteNotInBounds()&&(this.frame=0)}explodeSprite(t){this.frame=0,this.spriteManager.makeExplosionAt(this.x,this.y),t.sendMessage(Messages.PLANE_CRASHED)}}