import{Micro}from"../Micro.js";import{Tile,Tiles}from"../Tile.js";import{Direction}from"../math/Direction.js";import{Position}from"../math/Position.js";import{math}from"../math/math.js";import{GameMap}from"./GameMap.js";export class MapGenerator{constructor(){this.SRMatrix=[[0,0,3,3,0,0],[0,3,2,2,3,0],[3,2,2,2,2,3],[3,2,2,2,2,3],[0,3,2,2,3,0],[0,0,3,3,0,0]],this.BRMatrix=[[0,0,0,3,3,3,0,0,0],[0,0,3,2,2,2,3,0,0],[0,3,2,2,2,2,2,3,0],[3,2,2,2,2,2,2,2,3],[3,2,2,2,4,2,2,2,3],[3,2,2,2,2,2,2,2,3],[0,3,2,2,2,2,2,3,0],[0,0,3,2,2,2,3,0,0],[0,0,0,3,3,3,0,0,0]],this.riverEdge=[13,13,17,15,5,2,19,17,9,11,2,13,7,9,5,2],this.treeTable=[0,0,0,34,0,0,36,35,0,32,0,33,30,31,29,37]}construct(e,i,t=!1){if(Micro.TERRAIN_TREE_LEVEL=-1,Micro.TERRAIN_LAKE_LEVEL=-1,Micro.TERRAIN_CURVE_LEVEL=-1,Micro.ISLAND_RADIUS=18,this.map=new GameMap(e||Micro.MAP_WIDTH,i||Micro.MAP_HEIGHT),Micro.TERRAIN_CREATE_ISLAND=math.getRandom(2)-1,Micro.TERRAIN_CREATE_ISLAND<0&&math.getRandom(100)<10)return this.makeIsland(),this.map;if(1===Micro.TERRAIN_CREATE_ISLAND?this.makeNakedIsland():this.clearMap(),0!==Micro.TERRAIN_CURVE_LEVEL){let e=40+math.getRandom(this.map.width-79),i=33+math.getRandom(this.map.height-66),t=new Position(e,i);this.doRivers(t)}return 0!==Micro.TERRAIN_LAKE_LEVEL&&this.makeLakes(),this.smoothRiver(),this.cleanBorder(),0!==Micro.TERRAIN_TREE_LEVEL&&this.doTrees(),this.map}cleanBorder(){let e,i,t,o,a,r=this.map;if(!r.isIsland){for(e=0;e<r.width;e++)t=e+1,t>r.width-1&&(t=r.width-1),o=e-1,o<0&&(o=0),a=1,r.getTileValue(e,a)+r.getTileValue(t,a)+r.getTileValue(o,a)===6&&r.setTile(e,0,Tile.RIVER,0),a=r.height-2,r.getTileValue(e,a)+r.getTileValue(t,a)+r.getTileValue(o,a)===6&&r.setTile(e,r.height-1,Tile.RIVER,0);for(i=0;i<r.height;i++)t=i+1,t>r.height-1&&(t=r.height-1),o=i-1,o<0&&(o=0),a=1,r.getTileValue(a,i)+r.getTileValue(a,t)+r.getTileValue(a,o)===6&&r.setTile(0,i,Tile.RIVER,0),a=r.width-2,r.getTileValue(a,i)+r.getTileValue(a,t)+r.getTileValue(a,o)===6&&r.setTile(r.width-1,i,Tile.RIVER,0)}}clearMap(){let e=this.map;e.pp.forEach((i=>{e.setTile(i[0],i[1],Tile.DIRT,0)}))}clearUnnatural(){let e,i=this.map;i.pp.forEach((t=>{e=i.getTileValue(t[0],t[1]),e>Tile.WOODS&&i.setTile(t[0],t[1],Tile.DIRT,0)}))}makeNakedIsland(){let e,i,t,o,a=this.map,r=Micro.ISLAND_RADIUS;for(a.isIsland=!0,a.pp.forEach((t=>{e=t[0],i=t[1],e<5||e>=a.width-5||i<5||i>=a.height-5?a.setTile(e,i,Tile.RIVER,0):a.setTile(e,i,Tile.DIRT,0)})),e=0;e<a.width-5;e+=2)o=math.getERandom(r),this.plopBRiver({x:e,y:o}),o=a.height-10-math.getERandom(r),this.plopBRiver({x:e,y:o}),this.plopSRiver({x:e,y:0}),this.plopSRiver({x:e,y:a.height-6});for(i=0;i<a.height-5;i+=2)t=math.getERandom(r),this.plopBRiver({x:t,y:i}),t=a.width-10-math.getERandom(r),this.plopBRiver({x:t,y:i}),this.plopSRiver({x:0,y:i}),this.plopSRiver({x:a.width-6,y:i})}makeIsland(){this.makeNakedIsland(),this.smoothRiver(),this.doTrees()}makeLakes(){let e,i,t=Micro.TERRAIN_LAKE_LEVEL<0?math.getRandom(10):.5*Micro.TERRAIN_LAKE_LEVEL;for(;t>0;)e=math.getRandom(this.map.width-21)+10,i=math.getRandom(this.map.height-20)+10,this.makeSingleLake(new Position(e,i)),t--}makeSingleLake(e){let i,t=math.getRandom(12)+2;for(;t>0;)i=new Position(e,math.getRandom(12)-6,math.getRandom(12)-6),math.getRandom(4)?this.plopSRiver(i):this.plopBRiver(i),t--}treeSplash(e,i){let t,o=Micro.TERRAIN_TREE_LEVEL<0?math.getRandom(150)+50:math.getRandom(100+2*Micro.TERRAIN_TREE_LEVEL)+50,a=new Position(e,i);for(;o>0;){if(t=Direction.NORTH+math.getRandom(7),a.move(t),!this.map.testBounds(a.x,a.y))return;this.map.getTileValue(a)===Tile.DIRT&&this.map.setTile(a,Tile.WOODS,Tile.BLBNBIT),o--}}doTrees(){let e=Micro.TERRAIN_TREE_LEVEL<0?math.getRandom(100)+50:Micro.TERRAIN_TREE_LEVEL+3;for(;e--;)this.treeSplash(math.getRandom(this.map.width-1),math.getRandom(this.map.height-1));this.smoothTrees(),this.smoothTrees()}smoothRiver(){let e,i,t,o,a,r,l,h,R=this.map,T=this.riverEdge,s=[-1,0,1,0],E=[0,1,0,-1];R.pp.forEach((m=>{if(e=m[0],i=m[1],R.getTileValue(e,i)===Tile.REDGE){for(l=0,t=0;t<4;t++)l<<=1,o=e+s[t],a=i+E[t],R.testBounds(o,a)&&(r=R.getTileValue(o,a),r!==Tile.DIRT&&(r<Tile.WOODS_LOW||r>Tile.WOODS_HIGH)&&l++);h=T[15&l],h!==Tile.RIVER&&math.getRandom(1)&&h++,R.setTile(e,i,h,Tile.BULLBIT)}}))}isTree(e){return e>=Tile.WOODS_LOW&&e<=Tile.WOODS_HIGH}smoothTrees(){let e,i,t=this.map;t.pp.forEach((o=>{e=o[0],i=o[1],this.isTree(t.getTileValue(e,i))&&this.smoothTreesAt(e,i,!1)}))}smoothTreesAt(e,i,t){let o=this.map,a=[-1,0,1,0],r=[0,1,0,-1];if(!this.isTree(this.map.getTileValue(e,i)))return;let l,h,R,T,s=0;for(l=0;l<4;l++)s<<=1,h=e+a[l],R=i+r[l],o.testBounds(h,R)&&this.isTree(o.getTileValue(h,R))&&s++;T=this.treeTable[15&s],T?(T!==Tile.WOODS&&e+i&1&&(T-=8),T>28&&T<38&&(T-=8),o.setTile(e,i,T,Tile.BLBNBIT)):t||(T>28&&T<38&&(T-=8),o.setTileValue(e,i,T,0))}doRivers(e){let i=Direction.NORTH+2*math.getRandom(3);this.doBRiver(e,i,i),i=Direction.rotate180(i);let t=this.doBRiver(e,i,i);i=Direction.NORTH+2*math.getRandom(3),this.doSRiver(e,i,t)}doBRiver(e,i,t){let o,a;Micro.TERRAIN_CURVE_LEVEL<0?(o=100,a=200):(o=Micro.TERRAIN_CURVE_LEVEL+10,a=Micro.TERRAIN_CURVE_LEVEL+100);let r=new Position(e);for(;this.map.testBounds(r.x+4,r.y+4);)this.plopBRiver(r),math.getRandom(o+1)<10?t=i:(math.getRandom(a+1)>90&&(t=Direction.rotate45(t)),math.getRandom(a+1)>90&&(t=Direction.rotate45(t,7))),r.move(t);return t}doSRiver(e,i,t){let o,a;Micro.TERRAIN_CURVE_LEVEL<0?(o=100,a=200):(o=Micro.TERRAIN_CURVE_LEVEL+10,a=Micro.TERRAIN_CURVE_LEVEL+100);let r=new Position(e);for(;this.map.testBounds(r.x+3,r.y+3);)this.plopSRiver(r),math.getRandom(o+1)<10?t=i:(math.getRandom(a+1)>90&&(t=Direction.rotate45(t)),math.getRandom(a+1)>90&&(t=Direction.rotate45(t,7))),r.move(t);return t}putOnMap(e,i,t){if(0===e)return;if(!this.map.testBounds(i,t))return;let o=this.map.getTileValue(i,t);if(o!==Tile.DIRT){if(o===Tile.RIVER&&e!==Tile.CHANNEL)return;if(o===Tile.CHANNEL)return}this.map.setTile(i,t,e,0)}plopBRiver(e){let i,t=9;for(;t--;)for(i=9;i--;)this.putOnMap(this.BRMatrix[i][t],e.x+t,e.y+i)}plopSRiver(e){let i,t=6;for(;t--;)for(i=6;i--;)this.putOnMap(this.SRMatrix[i][t],e.x+t,e.y+i)}smoothWater(){let e,i,t,o,a,r,l=this.map;l.pp.forEach((r=>{if(o=r[0],a=r[1],e=l.getTileValue(o,a),e>=Tile.WATER_LOW&&e<=Tile.WATER_HIGH)for(i=new Position(o,a),t=Direction.BEGIN;t<Direction.END;t=Direction.increment90(t))if(e=l.getTileFromMap(i,t,Tile.WATER_LOW),e<Tile.WATER_LOW||e>Tile.WATER_HIGH){l.setTileValue(o,a,Tile.REDGE,0);break}})),l.pp.forEach((h=>{if(o=h[0],a=h[1],e=l.getTileValue(o,a),e!==Tile.CHANNEL&&e>=Tile.WATER_LOW&&e<=Tile.WATER_HIGH){for(r=!0,i=new Position(o,a),t=Direction.BEGIN;t<Direction.END;t=Direction.increment90(t))if(e=l.getTileFromMap(i,t,Tile.WATER_LOW),e<Tile.WATER_LOW||e>Tile.WATER_HIGH){r=!1;break}r&&l.setTileValue(o,a,Tile.RIVER,0)}})),l.pp.forEach((r=>{if(o=r[0],a=r[1],e=l.getTileValue(o,a),e>=Tile.WOODS_LOW&&e<=Tile.WOODS_HIGH)for(i=new Position(o,a),t=Direction.BEGIN;t<Direction.END;t=Direction.increment90(t))if(e=l.getTileFromMap(i,t,TILE_INVALID),e===Tile.RIVER||e===Tile.CHANNEL){l.setTileValue(o,a,Tile.REDGE,0);break}}))}}