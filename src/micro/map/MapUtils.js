import{Micro}from"../Micro.js";import{Tile}from"../Tile.js";import{Residential}from"../zone/Residential.js";import{Commercial}from"../zone/Commercial.js";import{Industrial}from"../zone/Industrial.js";import{math}from"../math/math.js";export class MapUtils{static smoothMap(t,e,i){let o,a,r=t.width;for(;r--;)for(o=t.height;o--;)a=0,r>0&&(a+=t.get(r-1,o)),r<t.width-1&&(a+=t.get(r+1,o)),o>0&&(a+=t.get(r,o-1)),o<t.height-1&&(a+=t.get(r,o+1)),i===Micro.SMOOTH_NEIGHBOURS_THEN_BLOCK?(a=t.get(r,o)+Math.floor(a/4),e.set(r,o,Math.floor(a/2))):(a=a+t.get(r,o)>>2,a>255&&(a=255),e.set(r,o,a))}static neutraliseRateOfGrowthMap(t){let e,i,o=t.rateOfGrowthMap,a=o.width;for(;a--;)for(e=o.height;e--;)i=o.get(a,e),0!==i&&(i>0?i--:i++,i=math.clamp(i,-200,200),o.set(a,e,i))}static neutraliseTrafficMap(t){let e,i,o=t.trafficDensityMap,a=o.width;for(;a--;)for(e=o.height;e--;)i=o.get(a,e),0!==i&&(i<=24?i=0:i-=i>200?34:24,o.set(a,e,i))}static getPollutionValue(t){if(t<Tile.POWERBASE){if(t>=Tile.HTRFBASE)return 75;if(t>=Tile.LTRFBASE)return 50;if(t<Tile.ROADBASE){if(t>Tile.FIREBASE)return 90;if(t>=Tile.RADTILE)return 255}return 0}return t<=Tile.LASTIND?0:t<Tile.PORTBASE?50:t<=Tile.LASTPOWERPLANT?100:0}static getCityCentreDistance(t,e,i){let o,a;return o=e>t.cityCentreX?e-t.cityCentreX:t.cityCentreX-e,a=i>t.cityCentreY?i-t.cityCentreY:t.cityCentreY-i,Math.min(o+a,64)}static pollutionTerrainLandValueScan(t,e,i){let o=i.tempMap1,a=i.tempMap2,r=i.tempMap3;r.clear();let l,M,p,n,s,c,h,f,m,T,S=i.landValueMap,O=i.terrainDensityMap,u=i.pollutionDensityMap,C=i.crimeRateMap,_=0,g=0,E=S.width;for(;E--;)for(l=S.height;l--;){for(M=0,p=!1,n=2*E,s=2*l,c=n;c<=n+1;c++)for(h=s;h<=s+1;h++)f=t.getTileValue(c,h),f!==Tile.DIRT&&(f<Tile.RUBBLE?(m=r.worldGet(c,h),r.worldSet(c,h,m+15)):(M+=MapUtils.getPollutionValue(f),f>=Tile.ROADBASE&&(p=!0)));M=Math.min(M,255),o.set(E,l,M),p?(T=34-Math.floor(MapUtils.getCityCentreDistance(t,n,s)/2),T<<=2,T+=O.get(E>>1,l>>1),T-=u.get(E,l),C.get(E,l)>190&&(T-=20),T=math.clamp(T,1,250),S.set(E,l,T),_+=T,g++):S.set(E,l,0)}e.landValueAverage=g>0?Math.floor(_/g):0,MapUtils.smoothMap(o,a,Micro.SMOOTH_ALL_THEN_CLAMP),MapUtils.smoothMap(a,o,Micro.SMOOTH_ALL_THEN_CLAMP);let H,d=0,A=0,L=0;for(E=0;E<t.width;E+=u.blockSize)for(l=0;l<t.height;l+=u.blockSize)H=o.worldGet(E,l),u.worldSet(E,l,H),0!==H&&(A++,L+=H,(H>d||H===d&&math.getChance(3))&&(d=H,t.pollutionMaxX=E,t.pollutionMaxY=l));e.pollutionAverage=A?Math.floor(L/A):0,MapUtils.smoothMap(r,O,Micro.SMOOTH_NEIGHBOURS_THEN_BLOCK)}static crimeScan(t,e){let i=e.policeStationMap,o=e.policeStationEffectMap,a=e.crimeRateMap,r=e.landValueMap,l=e.populationDensityMap;MapUtils.smoothMap(i,o,Micro.SMOOTH_NEIGHBOURS_THEN_BLOCK),MapUtils.smoothMap(o,i,Micro.SMOOTH_NEIGHBOURS_THEN_BLOCK),MapUtils.smoothMap(i,o,Micro.SMOOTH_NEIGHBOURS_THEN_BLOCK);let M,p,n,s=0,c=0,h=a.mapWidth,f=a.mapHeight;for(M=0;M<h;M+=blockSize)for(p=0;p<f;p+=blockSize)n=r.worldGet(M,p),n>0?(c+=1,n=128-n,n+=l.worldGet(M,p),n=Math.min(n,300),n-=i.worldGet(M,p),n=math.clamp(n,0,250),a.worldSet(M,p,n),s+=n):a.worldSet(M,p,0);t.crimeAverage=c>0?Math.floor(s/c):0}static fillCityCentreDistScoreMap(t,e){let i,o,a=e.cityCentreDistScoreMap,r=a.width;for(;r--;)for(i=a.height;i--;)o=Math.floor(MapUtils.getCityCentreDistance(t,8*r,8*i)/2),o*=4,o=64-o,a.set(r,i,o)}static getPopulationDensity(t,e,i,o){return o<Tile.COMBASE?Residential.getZonePopulation(t,e,i,o):o<Tile.INDBASE?8*Commercial.getZonePopulation(t,e,i,o):o<Tile.PORTBASE?8*Industrial.getZonePopulation(t,e,i,o):0}static populationDensityScan(t,e){let i=e.tempMap1,o=e.tempMap2,a=(e.populationDensityMap,0),r=0,l=0;i.clear();let M,p,n,s,c=t.width;for(;c--;)for(M=t.height;M--;)p=t.getTile(c,M),p.isZone()&&(n=p.getValue(),s=8*MapUtils.getPopulationDensity(t,c,M,n),s=Math.min(s,254),i.worldSet(c,M,s),a+=c,r+=M,l++);MapUtils.smoothMap(i,o,Micro.SMOOTH_ALL_THEN_CLAMP),MapUtils.smoothMap(o,i,Micro.SMOOTH_ALL_THEN_CLAMP),MapUtils.smoothMap(i,o,Micro.SMOOTH_ALL_THEN_CLAMP),e.populationDensityMap.copyFrom(o,(function(t){return 2*t})),MapUtils.fillCityCentreDistScoreMap(t,e),l>0?(t.cityCentreX=Math.floor(a/l),t.cityCentreY=Math.floor(r/l)):(t.cityCentreX=Math.floor(.5*t.width),t.cityCentreY=Math.floor(.5*t.height))}static fireAnalysis(t){let e=t.fireStationMap,i=t.fireStationEffectMap;MapUtils.smoothMap(e,i,Micro.SMOOTH_NEIGHBOURS_THEN_BLOCK),MapUtils.smoothMap(i,e,Micro.SMOOTH_NEIGHBOURS_THEN_BLOCK),MapUtils.smoothMap(e,i,Micro.SMOOTH_NEIGHBOURS_THEN_BLOCK)}}