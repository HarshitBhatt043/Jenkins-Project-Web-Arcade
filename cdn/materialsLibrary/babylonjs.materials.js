!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("babylonjs")):"function"==typeof define&&define.amd?define("babylonjs-materials",["babylonjs"],t):"object"==typeof exports?exports["babylonjs-materials"]=t(require("babylonjs")):e.MATERIALS=t(e.BABYLON)}("undefined"!=typeof self?self:"undefined"!=typeof global?global:this,(e=>(()=>{"use strict";var t={"../../../dev/materials/src/cell/cell.fragment.ts":
/*!********************************************************!*\
  !*** ../../../dev/materials/src/cell/cell.fragment.ts ***!
  \********************************************************/(e,t,i)=>{i.r(t),i.d(t,{cellPixelShader:()=>a});var r=i(/*! babylonjs/Shaders/ShadersInclude/imageProcessingCompatibility */"babylonjs/Materials/effect"),n="cellPixelShader",o="precision highp float;uniform vec4 vEyePosition;uniform vec4 vDiffuseColor;varying vec3 vPositionW;\n#ifdef NORMAL\nvarying vec3 vNormalW;\n#endif\n#ifdef VERTEXCOLOR\nvarying vec4 vColor;\n#endif\n#include<helperFunctions>\n#include<__decl__lightFragment>[0..maxSimultaneousLights]\n#include<lightsFragmentFunctions>\n#include<shadowsFragmentFunctions>\n#ifdef DIFFUSE\nvarying vec2 vDiffuseUV;uniform sampler2D diffuseSampler;uniform vec2 vDiffuseInfos;\n#endif\n#include<clipPlaneFragmentDeclaration>\n#ifdef LOGARITHMICDEPTH\n#extension GL_EXT_frag_depth : enable\n#endif\n#include<logDepthDeclaration>\n#include<fogFragmentDeclaration>\nvec3 computeCustomDiffuseLighting(lightingInfo info,vec3 diffuseBase,float shadow)\n{diffuseBase=info.diffuse*shadow;\n#ifdef CELLBASIC\nfloat level=1.0;if (info.ndl<0.5)\nlevel=0.5;diffuseBase.rgb*vec3(level,level,level);\n#else\nfloat ToonThresholds[4];ToonThresholds[0]=0.95;ToonThresholds[1]=0.5;ToonThresholds[2]=0.2;ToonThresholds[3]=0.03;float ToonBrightnessLevels[5];ToonBrightnessLevels[0]=1.0;ToonBrightnessLevels[1]=0.8;ToonBrightnessLevels[2]=0.6;ToonBrightnessLevels[3]=0.35;ToonBrightnessLevels[4]=0.2;if (info.ndl>ToonThresholds[0])\n{diffuseBase.rgb*=ToonBrightnessLevels[0];}\nelse if (info.ndl>ToonThresholds[1])\n{diffuseBase.rgb*=ToonBrightnessLevels[1];}\nelse if (info.ndl>ToonThresholds[2])\n{diffuseBase.rgb*=ToonBrightnessLevels[2];}\nelse if (info.ndl>ToonThresholds[3])\n{diffuseBase.rgb*=ToonBrightnessLevels[3];}\nelse\n{diffuseBase.rgb*=ToonBrightnessLevels[4];}\n#endif\nreturn max(diffuseBase,vec3(0.2));}\n#define CUSTOM_FRAGMENT_DEFINITIONS\nvoid main(void)\n{\n#define CUSTOM_FRAGMENT_MAIN_BEGIN\n#include<clipPlaneFragment>\nvec3 viewDirectionW=normalize(vEyePosition.xyz-vPositionW);vec4 baseColor=vec4(1.,1.,1.,1.);vec3 diffuseColor=vDiffuseColor.rgb;float alpha=vDiffuseColor.a;\n#ifdef DIFFUSE\nbaseColor=texture2D(diffuseSampler,vDiffuseUV);\n#ifdef ALPHATEST\nif (baseColor.a<0.4)\ndiscard;\n#endif\n#include<depthPrePass>\nbaseColor.rgb*=vDiffuseInfos.y;\n#endif\n#ifdef VERTEXCOLOR\nbaseColor.rgb*=vColor.rgb;\n#endif\n#ifdef NORMAL\nvec3 normalW=normalize(vNormalW);\n#else\nvec3 normalW=vec3(1.0,1.0,1.0);\n#endif\nlightingInfo info;vec3 diffuseBase=vec3(0.,0.,0.);float shadow=1.;float glossiness=0.;float aggShadow=0.;float numLights=0.;\n#ifdef SPECULARTERM\nvec3 specularBase=vec3(0.,0.,0.);\n#endif \n#include<lightFragment>[0..maxSimultaneousLights]\n#if defined(VERTEXALPHA) || defined(INSTANCESCOLOR) && defined(INSTANCES)\nalpha*=vColor.a;\n#endif\nvec3 finalDiffuse=clamp(diffuseBase*diffuseColor,0.0,1.0)*baseColor.rgb;vec4 color=vec4(finalDiffuse,alpha);\n#include<logDepthFragment>\n#include<fogFragment>\ngl_FragColor=color;\n#include<imageProcessingCompatibility>\n#define CUSTOM_FRAGMENT_MAIN_END\n}";r.ShaderStore.ShadersStore[n]=o;var a={name:n,shader:o}},"../../../dev/materials/src/cell/cell.vertex.ts":
/*!******************************************************!*\
  !*** ../../../dev/materials/src/cell/cell.vertex.ts ***!
  \******************************************************/(e,t,i)=>{i.r(t),i.d(t,{cellVertexShader:()=>a});var r=i(/*! babylonjs/Shaders/ShadersInclude/logDepthVertex */"babylonjs/Materials/effect"),n="cellVertexShader",o="precision highp float;attribute vec3 position;\n#ifdef NORMAL\nattribute vec3 normal;\n#endif\n#ifdef UV1\nattribute vec2 uv;\n#endif\n#ifdef UV2\nattribute vec2 uv2;\n#endif\n#ifdef VERTEXCOLOR\nattribute vec4 color;\n#endif\n#include<bonesDeclaration>\n#include<bakedVertexAnimationDeclaration>\n#include<instancesDeclaration>\nuniform mat4 view;uniform mat4 viewProjection;\n#ifdef DIFFUSE\nvarying vec2 vDiffuseUV;uniform mat4 diffuseMatrix;uniform vec2 vDiffuseInfos;\n#endif\n#ifdef POINTSIZE\nuniform float pointSize;\n#endif\nvarying vec3 vPositionW;\n#ifdef NORMAL\nvarying vec3 vNormalW;\n#endif\n#ifdef VERTEXCOLOR\nvarying vec4 vColor;\n#endif\n#include<clipPlaneVertexDeclaration>\n#include<logDepthDeclaration>\n#include<fogVertexDeclaration>\n#include<__decl__lightFragment>[0..maxSimultaneousLights]\n#define CUSTOM_VERTEX_DEFINITIONS\nvoid main(void) {\n#define CUSTOM_VERTEX_MAIN_BEGIN\n#include<instancesVertex>\n#include<bonesVertex>\n#include<bakedVertexAnimation>\nvec4 worldPos=finalWorld*vec4(position,1.0);gl_Position=viewProjection*worldPos;vPositionW=vec3(worldPos);\n#ifdef NORMAL\nvNormalW=normalize(vec3(finalWorld*vec4(normal,0.0)));\n#endif\n#ifndef UV1\nvec2 uv=vec2(0.,0.);\n#endif\n#ifndef UV2\nvec2 uv2=vec2(0.,0.);\n#endif\n#ifdef DIFFUSE\nif (vDiffuseInfos.x==0.)\n{vDiffuseUV=vec2(diffuseMatrix*vec4(uv,1.0,0.0));}\nelse\n{vDiffuseUV=vec2(diffuseMatrix*vec4(uv2,1.0,0.0));}\n#endif\n#include<clipPlaneVertex>\n#include<fogVertex>\n#include<shadowsVertex>[0..maxSimultaneousLights]\n#include<vertexColorMixing>\n#if defined(POINTSIZE) && !defined(WEBGPU)\ngl_PointSize=pointSize;\n#endif\n#include<logDepthVertex>\n#define CUSTOM_VERTEX_MAIN_END\n}\n";r.ShaderStore.ShadersStore[n]=o;var a={name:n,shader:o}},"../../../dev/materials/src/cell/cellMaterial.ts":
/*!*******************************************************!*\
  !*** ../../../dev/materials/src/cell/cellMaterial.ts ***!
  \*******************************************************/(e,t,i)=>{i.r(t),i.d(t,{CellMaterial:()=>a});var r=i(/*! tslib */"../../../../node_modules/tslib/tslib.es6.mjs"),n=i(/*! babylonjs/Materials/clipPlaneMaterialHelper */"babylonjs/Materials/effect"),o=(i(/*! ./cell.fragment */"../../../dev/materials/src/cell/cell.fragment.ts"),i(/*! ./cell.vertex */"../../../dev/materials/src/cell/cell.vertex.ts"),function(e){function t(){var t=e.call(this)||this;return t.DIFFUSE=!1,t.CLIPPLANE=!1,t.CLIPPLANE2=!1,t.CLIPPLANE3=!1,t.CLIPPLANE4=!1,t.CLIPPLANE5=!1,t.CLIPPLANE6=!1,t.ALPHATEST=!1,t.POINTSIZE=!1,t.FOG=!1,t.NORMAL=!1,t.UV1=!1,t.UV2=!1,t.VERTEXCOLOR=!1,t.VERTEXALPHA=!1,t.NUM_BONE_INFLUENCERS=0,t.BonesPerMesh=0,t.INSTANCES=!1,t.INSTANCESCOLOR=!1,t.NDOTL=!0,t.CUSTOMUSERLIGHTING=!0,t.CELLBASIC=!0,t.DEPTHPREPASS=!1,t.IMAGEPROCESSINGPOSTPROCESS=!1,t.SKIPFINALCOLORCLAMP=!1,t.LOGARITHMICDEPTH=!1,t.rebuild(),t}return(0,r.__extends)(t,e),t}(n.MaterialDefines)),a=function(e){function t(t,i){var r=e.call(this,t,i)||this;return r.diffuseColor=new n.Color3(1,1,1),r._computeHighLevel=!1,r._disableLighting=!1,r._maxSimultaneousLights=4,r}return(0,r.__extends)(t,e),t.prototype.needAlphaBlending=function(){return this.alpha<1},t.prototype.needAlphaTesting=function(){return!1},t.prototype.getAlphaTestTexture=function(){return null},t.prototype.isReadyForSubMesh=function(e,t,i){var r=t._drawWrapper;if(this.isFrozen&&r.effect&&r._wasPreviouslyReady&&r._wasPreviouslyUsingInstances===i)return!0;t.materialDefines||(t.materialDefines=new o);var a=t.materialDefines,s=this.getScene();if(this._isReadyForSubMesh(t))return!0;var l=s.getEngine();if(a._areTexturesDirty&&(a._needUVs=!1,s.texturesEnabled&&this._diffuseTexture&&n.MaterialFlags.DiffuseTextureEnabled)){if(!this._diffuseTexture.isReady())return!1;a._needUVs=!0,a.DIFFUSE=!0}if(a.CELLBASIC=!this.computeHighLevel,n.MaterialHelper.PrepareDefinesForMisc(e,s,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this._shouldTurnAlphaTestOn(e),a),a._needNormals=n.MaterialHelper.PrepareDefinesForLights(s,e,a,!1,this._maxSimultaneousLights,this._disableLighting),n.MaterialHelper.PrepareDefinesForFrameBoundValues(s,l,this,a,!!i),n.MaterialHelper.PrepareDefinesForAttributes(e,a,!0,!0),a.isDirty){a.markAsProcessed(),s.resetCachedMaterial();var f=new n.EffectFallbacks;a.FOG&&f.addFallback(1,"FOG"),n.MaterialHelper.HandleFallbacksForShadows(a,f,this.maxSimultaneousLights),a.NUM_BONE_INFLUENCERS>0&&f.addCPUSkinningFallback(0,e),a.IMAGEPROCESSINGPOSTPROCESS=s.imageProcessingConfiguration.applyByPostProcess;var u=[n.VertexBuffer.PositionKind];a.NORMAL&&u.push(n.VertexBuffer.NormalKind),a.UV1&&u.push(n.VertexBuffer.UVKind),a.UV2&&u.push(n.VertexBuffer.UV2Kind),a.VERTEXCOLOR&&u.push(n.VertexBuffer.ColorKind),n.MaterialHelper.PrepareAttributesForBones(u,e,a,f),n.MaterialHelper.PrepareAttributesForInstances(u,a);var d=a.toString(),c=["world","view","viewProjection","vEyePosition","vLightsType","vDiffuseColor","vFogInfos","vFogColor","pointSize","vDiffuseInfos","mBones","diffuseMatrix","logarithmicDepthConstant"],p=["diffuseSampler"],h=[];(0,n.addClipPlaneUniforms)(c),n.MaterialHelper.PrepareUniformsAndSamplersList({uniformsNames:c,uniformBuffersNames:h,samplers:p,defines:a,maxSimultaneousLights:this.maxSimultaneousLights}),t.setEffect(s.getEngine().createEffect("cell",{attributes:u,uniformsNames:c,uniformBuffersNames:h,samplers:p,defines:d,fallbacks:f,onCompiled:this.onCompiled,onError:this.onError,indexParameters:{maxSimultaneousLights:this.maxSimultaneousLights-1}},l),a,this._materialContext)}return!(!t.effect||!t.effect.isReady())&&(a._renderId=s.getRenderId(),r._wasPreviouslyReady=!0,r._wasPreviouslyUsingInstances=!!i,!0)},t.prototype.bindForSubMesh=function(e,t,i){var r=this.getScene(),o=i.materialDefines;if(o){var a=i.effect;a&&(this._activeEffect=a,this.bindOnlyWorldMatrix(e),this._activeEffect.setMatrix("viewProjection",r.getTransformMatrix()),n.MaterialHelper.BindBonesParameters(t,this._activeEffect),this._mustRebind(r,a,i)&&(this._diffuseTexture&&n.MaterialFlags.DiffuseTextureEnabled&&(this._activeEffect.setTexture("diffuseSampler",this._diffuseTexture),this._activeEffect.setFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),this._activeEffect.setMatrix("diffuseMatrix",this._diffuseTexture.getTextureMatrix())),(0,n.bindClipPlane)(this._activeEffect,this,r),this.pointsCloud&&this._activeEffect.setFloat("pointSize",this.pointSize),this._useLogarithmicDepth&&n.MaterialHelper.BindLogDepth(o,a,r),r.bindEyePosition(a)),this._activeEffect.setColor4("vDiffuseColor",this.diffuseColor,this.alpha*t.visibility),r.lightsEnabled&&!this.disableLighting&&n.MaterialHelper.BindLights(r,t,this._activeEffect,o,this._maxSimultaneousLights),r.fogEnabled&&t.applyFog&&r.fogMode!==n.Scene.FOGMODE_NONE&&this._activeEffect.setMatrix("view",r.getViewMatrix()),n.MaterialHelper.BindFogParameters(r,t,this._activeEffect),this._afterBind(t,this._activeEffect,i))}},t.prototype.getAnimatables=function(){var e=[];return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&e.push(this._diffuseTexture),e},t.prototype.getActiveTextures=function(){var t=e.prototype.getActiveTextures.call(this);return this._diffuseTexture&&t.push(this._diffuseTexture),t},t.prototype.hasTexture=function(t){return!!e.prototype.hasTexture.call(this,t)||this._diffuseTexture===t},t.prototype.dispose=function(t){this._diffuseTexture&&this._diffuseTexture.dispose(),e.prototype.dispose.call(this,t)},t.prototype.getClassName=function(){return"CellMaterial"},t.prototype.clone=function(e){var i=this;return n.SerializationHelper.Clone((function(){return new t(e,i.getScene())}),this)},t.prototype.serialize=function(){var t=e.prototype.serialize.call(this);return t.customType="BABYLON.CellMaterial",t},t.Parse=function(e,i,r){return n.SerializationHelper.Parse((function(){return new t(e.name,i)}),e,i,r)},(0,r.__decorate)([(0,n.serializeAsTexture)("diffuseTexture")],t.prototype,"_diffuseTexture",void 0),(0,r.__decorate)([(0,n.expandToProperty)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"diffuseTexture",void 0),(0,r.__decorate)([(0,n.serializeAsColor3)("diffuse")],t.prototype,"diffuseColor",void 0),(0,r.__decorate)([(0,n.serialize)("computeHighLevel")],t.prototype,"_computeHighLevel",void 0),(0,r.__decorate)([(0,n.expandToProperty)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"computeHighLevel",void 0),(0,r.__decorate)([(0,n.serialize)("disableLighting")],t.prototype,"_disableLighting",void 0),(0,r.__decorate)([(0,n.expandToProperty)("_markAllSubMeshesAsLightsDirty")],t.prototype,"disableLighting",void 0),(0,r.__decorate)([(0,n.serialize)("maxSimultaneousLights")],t.prototype,"_maxSimultaneousLights",void 0),(0,r.__decorate)([(0,n.expandToProperty)("_markAllSubMeshesAsLightsDirty")],t.prototype,"maxSimultaneousLights",void 0),t}(n.PushMaterial);(0,n.RegisterClass)("BABYLON.CellMaterial",a)},"../../../dev/materials/src/cell/index.ts":
/*!************************************************!*\
  !*** ../../../dev/materials/src/cell/index.ts ***!
  \************************************************/(e,t,i)=>{i.r(t),i.d(t,{CellMaterial:()=>r.CellMaterial});var r=i(/*! ./cellMaterial */"../../../dev/materials/src/cell/cellMaterial.ts")},"../../../dev/materials/src/custom/customMaterial.ts":
/*!***********************************************************!*\
  !*** ../../../dev/materials/src/custom/customMaterial.ts ***!
  \***********************************************************/(e,t,i)=>{i.r(t),i.d(t,{CustomMaterial:()=>s,CustomShaderStructure:()=>o,ShaderSpecialParts:()=>a});var r=i(/*! tslib */"../../../../node_modules/tslib/tslib.es6.mjs"),n=i(/*! babylonjs/Maths/math.color */"babylonjs/Materials/effect"),o=function(){},a=function(){},s=function(e){function t(i,r){var o=e.call(this,i,r)||this;return o.CustomParts=new a,o.customShaderNameResolve=o.Builder,o.FragmentShader=n.Effect.ShadersStore.defaultPixelShader,o.VertexShader=n.Effect.ShadersStore.defaultVertexShader,t.ShaderIndexer++,o._createdShaderName="custom_"+t.ShaderIndexer,o}return(0,r.__extends)(t,e),t.prototype.AttachAfterBind=function(e,t){if(this._newUniformInstances)for(var i in this._newUniformInstances){"vec2"==(r=i.toString().split("-"))[0]?t.setVector2(r[1],this._newUniformInstances[i]):"vec3"==r[0]?this._newUniformInstances[i]instanceof n.Color3?t.setColor3(r[1],this._newUniformInstances[i]):t.setVector3(r[1],this._newUniformInstances[i]):"vec4"==r[0]?(this._newUniformInstances[i]instanceof n.Color4?t.setDirectColor4(r[1],this._newUniformInstances[i]):t.setVector4(r[1],this._newUniformInstances[i]),t.setVector4(r[1],this._newUniformInstances[i])):"mat4"==r[0]?t.setMatrix(r[1],this._newUniformInstances[i]):"float"==r[0]&&t.setFloat(r[1],this._newUniformInstances[i])}if(this._newSamplerInstances)for(var i in this._newSamplerInstances){var r;"sampler2D"==(r=i.toString().split("-"))[0]&&this._newSamplerInstances[i].isReady&&this._newSamplerInstances[i].isReady()&&t.setTexture(r[1],this._newSamplerInstances[i])}},t.prototype.ReviewUniform=function(e,t){if("uniform"==e&&this._newUniforms)for(var i=0;i<this._newUniforms.length;i++)-1==this._customUniform[i].indexOf("sampler")&&t.push(this._newUniforms[i].replace(/\[\d*\]/g,""));if("sampler"==e&&this._newUniforms)for(i=0;i<this._newUniforms.length;i++)-1!=this._customUniform[i].indexOf("sampler")&&t.push(this._newUniforms[i].replace(/\[\d*\]/g,""));return t},t.prototype.Builder=function(e,t,i,r,o,a){a&&this._customAttributes&&this._customAttributes.length>0&&a.push.apply(a,this._customAttributes),this.ReviewUniform("uniform",t),this.ReviewUniform("sampler",r);var s=this._createdShaderName;return n.Effect.ShadersStore[s+"VertexShader"]&&n.Effect.ShadersStore[s+"PixelShader"]||(n.Effect.ShadersStore[s+"VertexShader"]=this._injectCustomCode(this.VertexShader,"vertex"),n.Effect.ShadersStore[s+"PixelShader"]=this._injectCustomCode(this.FragmentShader,"fragment")),s},t.prototype._injectCustomCode=function(e,t){var i=this._getCustomCode(t);for(var r in i){var n=i[r];if(n&&n.length>0){var o="#define "+r;e=e.replace(o,"\n"+n+"\n"+o)}}return e},t.prototype._getCustomCode=function(e){var t,i;return"vertex"===e?{CUSTOM_VERTEX_BEGIN:this.CustomParts.Vertex_Begin,CUSTOM_VERTEX_DEFINITIONS:((null===(t=this._customUniform)||void 0===t?void 0:t.join("\n"))||"")+(this.CustomParts.Vertex_Definitions||""),CUSTOM_VERTEX_MAIN_BEGIN:this.CustomParts.Vertex_MainBegin,CUSTOM_VERTEX_UPDATE_POSITION:this.CustomParts.Vertex_Before_PositionUpdated,CUSTOM_VERTEX_UPDATE_NORMAL:this.CustomParts.Vertex_Before_NormalUpdated,CUSTOM_VERTEX_MAIN_END:this.CustomParts.Vertex_MainEnd,CUSTOM_VERTEX_UPDATE_WORLDPOS:this.CustomParts.Vertex_After_WorldPosComputed}:{CUSTOM_FRAGMENT_BEGIN:this.CustomParts.Fragment_Begin,CUSTOM_FRAGMENT_DEFINITIONS:((null===(i=this._customUniform)||void 0===i?void 0:i.join("\n"))||"")+(this.CustomParts.Fragment_Definitions||""),CUSTOM_FRAGMENT_MAIN_BEGIN:this.CustomParts.Fragment_MainBegin,CUSTOM_FRAGMENT_UPDATE_DIFFUSE:this.CustomParts.Fragment_Custom_Diffuse,CUSTOM_FRAGMENT_UPDATE_ALPHA:this.CustomParts.Fragment_Custom_Alpha,CUSTOM_FRAGMENT_BEFORE_LIGHTS:this.CustomParts.Fragment_Before_Lights,CUSTOM_FRAGMENT_BEFORE_FRAGCOLOR:this.CustomParts.Fragment_Before_FragColor,CUSTOM_FRAGMENT_MAIN_END:this.CustomParts.Fragment_MainEnd,CUSTOM_FRAGMENT_BEFORE_FOG:this.CustomParts.Fragment_Before_Fog}},t.prototype._afterBind=function(t,i,r){if(void 0===i&&(i=null),i){this.AttachAfterBind(t,i);try{e.prototype._afterBind.call(this,t,i,r)}catch(e){}}},t.prototype.AddUniform=function(e,t,i){return this._customUniform||(this._customUniform=new Array,this._newUniforms=new Array,this._newSamplerInstances={},this._newUniformInstances={}),i&&(-1!=t.indexOf("sampler")?this._newSamplerInstances[t+"-"+e]=i:this._newUniformInstances[t+"-"+e]=i),this._customUniform.push("uniform "+t+" "+e+";"),this._newUniforms.push(e),this},t.prototype.AddAttribute=function(e){return this._customAttributes||(this._customAttributes=[]),this._customAttributes.push(e),this},t.prototype.Fragment_Begin=function(e){return this.CustomParts.Fragment_Begin=e,this},t.prototype.Fragment_Definitions=function(e){return this.CustomParts.Fragment_Definitions=e,this},t.prototype.Fragment_MainBegin=function(e){return this.CustomParts.Fragment_MainBegin=e,this},t.prototype.Fragment_MainEnd=function(e){return this.CustomParts.Fragment_MainEnd=e,this},t.prototype.Fragment_Custom_Diffuse=function(e){return this.CustomParts.Fragment_Custom_Diffuse=e.replace("result","diffuseColor"),this},t.prototype.Fragment_Custom_Alpha=function(e){return this.CustomParts.Fragment_Custom_Alpha=e.replace("result","alpha"),this},t.prototype.Fragment_Before_Lights=function(e){return this.CustomParts.Fragment_Before_Lights=e,this},t.prototype.Fragment_Before_Fog=function(e){return this.CustomParts.Fragment_Before_Fog=e,this},t.prototype.Fragment_Before_FragColor=function(e){return this.CustomParts.Fragment_Before_FragColor=e.replace("result","color"),this},t.prototype.Vertex_Begin=function(e){return this.CustomParts.Vertex_Begin=e,this},t.prototype.Vertex_Definitions=function(e){return this.CustomParts.Vertex_Definitions=e,this},t.prototype.Vertex_MainBegin=function(e){return this.CustomParts.Vertex_MainBegin=e,this},t.prototype.Vertex_Before_PositionUpdated=function(e){return this.CustomParts.Vertex_Before_PositionUpdated=e.replace("result","positionUpdated"),this},t.prototype.Vertex_Before_NormalUpdated=function(e){return this.CustomParts.Vertex_Before_NormalUpdated=e.replace("result","normalUpdated"),this},t.prototype.Vertex_After_WorldPosComputed=function(e){return this.CustomParts.Vertex_After_WorldPosComputed=e,this},t.prototype.Vertex_MainEnd=function(e){return this.CustomParts.Vertex_MainEnd=e,this},t.ShaderIndexer=1,t}(n.StandardMaterial);(0,n.RegisterClass)("BABYLON.CustomMaterial",s)},"../../../dev/materials/src/custom/index.ts":
/*!**************************************************!*\
  !*** ../../../dev/materials/src/custom/index.ts ***!
  \**************************************************/(e,t,i)=>{i.r(t),i.d(t,{CustomMaterial:()=>r.CustomMaterial,CustomShaderStructure:()=>r.CustomShaderStructure,PBRCustomMaterial:()=>n.PBRCustomMaterial,ShaderAlbedoParts:()=>n.ShaderAlbedoParts,ShaderAlebdoParts:()=>n.ShaderAlebdoParts,ShaderSpecialParts:()=>r.ShaderSpecialParts});var r=i(/*! ./customMaterial */"../../../dev/materials/src/custom/customMaterial.ts"),n=i(/*! ./pbrCustomMaterial */"../../../dev/materials/src/custom/pbrCustomMaterial.ts")},"../../../dev/materials/src/custom/pbrCustomMaterial.ts":
/*!**************************************************************!*\
  !*** ../../../dev/materials/src/custom/pbrCustomMaterial.ts ***!
  \**************************************************************/(e,t,i)=>{i.r(t),i.d(t,{PBRCustomMaterial:()=>s,ShaderAlbedoParts:()=>o,ShaderAlebdoParts:()=>a});var r=i(/*! tslib */"../../../../node_modules/tslib/tslib.es6.mjs"),n=i(/*! babylonjs/Maths/math.color */"babylonjs/Materials/effect"),o=function(){},a=o,s=function(e){function t(i,r){var a=e.call(this,i,r)||this;return a.CustomParts=new o,a.customShaderNameResolve=a.Builder,a.FragmentShader=n.Effect.ShadersStore.pbrPixelShader,a.VertexShader=n.Effect.ShadersStore.pbrVertexShader,a.FragmentShader=a.FragmentShader.replace(/#include<pbrBlockAlbedoOpacity>/g,n.Effect.IncludesShadersStore.pbrBlockAlbedoOpacity),a.FragmentShader=a.FragmentShader.replace(/#include<pbrBlockReflectivity>/g,n.Effect.IncludesShadersStore.pbrBlockReflectivity),a.FragmentShader=a.FragmentShader.replace(/#include<pbrBlockFinalColorComposition>/g,n.Effect.IncludesShadersStore.pbrBlockFinalColorComposition),t.ShaderIndexer++,a._createdShaderName="custompbr_"+t.ShaderIndexer,a}return(0,r.__extends)(t,e),t.prototype.AttachAfterBind=function(e,t){if(this._newUniformInstances)for(var i in this._newUniformInstances){"vec2"==(r=i.toString().split("-"))[0]?t.setVector2(r[1],this._newUniformInstances[i]):"vec3"==r[0]?this._newUniformInstances[i]instanceof n.Color3?t.setColor3(r[1],this._newUniformInstances[i]):t.setVector3(r[1],this._newUniformInstances[i]):"vec4"==r[0]?(this._newUniformInstances[i]instanceof n.Color4?t.setDirectColor4(r[1],this._newUniformInstances[i]):t.setVector4(r[1],this._newUniformInstances[i]),t.setVector4(r[1],this._newUniformInstances[i])):"mat4"==r[0]?t.setMatrix(r[1],this._newUniformInstances[i]):"float"==r[0]&&t.setFloat(r[1],this._newUniformInstances[i])}if(this._newSamplerInstances)for(var i in this._newSamplerInstances){var r;"sampler2D"==(r=i.toString().split("-"))[0]&&this._newSamplerInstances[i].isReady&&this._newSamplerInstances[i].isReady()&&t.setTexture(r[1],this._newSamplerInstances[i])}},t.prototype.ReviewUniform=function(e,t){if("uniform"==e&&this._newUniforms)for(var i=0;i<this._newUniforms.length;i++)-1==this._customUniform[i].indexOf("sampler")&&t.push(this._newUniforms[i].replace(/\[\d*\]/g,""));if("sampler"==e&&this._newUniforms)for(i=0;i<this._newUniforms.length;i++)-1!=this._customUniform[i].indexOf("sampler")&&t.push(this._newUniforms[i].replace(/\[\d*\]/g,""));return t},t.prototype.Builder=function(e,t,i,r,o,a,s){if(s){var l=s.processFinalCode;s.processFinalCode=function(e,t){if("vertex"===e)return l?l(e,t):t;var i=new n.ShaderCodeInliner(t);return i.inlineToken="#define pbr_inline",i.processCode(),l?l(e,i.code):i.code}}a&&this._customAttributes&&this._customAttributes.length>0&&a.push.apply(a,this._customAttributes),this.ReviewUniform("uniform",t),this.ReviewUniform("sampler",r);var f=this._createdShaderName;return n.Effect.ShadersStore[f+"VertexShader"]&&n.Effect.ShadersStore[f+"PixelShader"]||(n.Effect.ShadersStore[f+"VertexShader"]=this._injectCustomCode(this.VertexShader,"vertex"),n.Effect.ShadersStore[f+"PixelShader"]=this._injectCustomCode(this.FragmentShader,"fragment")),f},t.prototype._injectCustomCode=function(e,t){var i=this._getCustomCode(t);for(var r in i){var n=i[r];if(n&&n.length>0){var o="#define "+r;e=e.replace(o,"\n"+n+"\n"+o)}}return e},t.prototype._getCustomCode=function(e){var t,i;return"vertex"===e?{CUSTOM_VERTEX_BEGIN:this.CustomParts.Vertex_Begin,CUSTOM_VERTEX_DEFINITIONS:((null===(t=this._customUniform)||void 0===t?void 0:t.join("\n"))||"")+(this.CustomParts.Vertex_Definitions||""),CUSTOM_VERTEX_MAIN_BEGIN:this.CustomParts.Vertex_MainBegin,CUSTOM_VERTEX_UPDATE_POSITION:this.CustomParts.Vertex_Before_PositionUpdated,CUSTOM_VERTEX_UPDATE_NORMAL:this.CustomParts.Vertex_Before_NormalUpdated,CUSTOM_VERTEX_MAIN_END:this.CustomParts.Vertex_MainEnd,CUSTOM_VERTEX_UPDATE_WORLDPOS:this.CustomParts.Vertex_After_WorldPosComputed}:{CUSTOM_FRAGMENT_BEGIN:this.CustomParts.Fragment_Begin,CUSTOM_FRAGMENT_MAIN_BEGIN:this.CustomParts.Fragment_MainBegin,CUSTOM_FRAGMENT_DEFINITIONS:((null===(i=this._customUniform)||void 0===i?void 0:i.join("\n"))||"")+(this.CustomParts.Fragment_Definitions||""),CUSTOM_FRAGMENT_UPDATE_ALBEDO:this.CustomParts.Fragment_Custom_Albedo,CUSTOM_FRAGMENT_UPDATE_ALPHA:this.CustomParts.Fragment_Custom_Alpha,CUSTOM_FRAGMENT_BEFORE_LIGHTS:this.CustomParts.Fragment_Before_Lights,CUSTOM_FRAGMENT_UPDATE_METALLICROUGHNESS:this.CustomParts.Fragment_Custom_MetallicRoughness,CUSTOM_FRAGMENT_UPDATE_MICROSURFACE:this.CustomParts.Fragment_Custom_MicroSurface,CUSTOM_FRAGMENT_BEFORE_FINALCOLORCOMPOSITION:this.CustomParts.Fragment_Before_FinalColorComposition,CUSTOM_FRAGMENT_BEFORE_FRAGCOLOR:this.CustomParts.Fragment_Before_FragColor,CUSTOM_FRAGMENT_MAIN_END:this.CustomParts.Fragment_MainEnd,CUSTOM_FRAGMENT_BEFORE_FOG:this.CustomParts.Fragment_Before_Fog}},t.prototype._afterBind=function(t,i,r){if(void 0===i&&(i=null),i){this.AttachAfterBind(t,i);try{e.prototype._afterBind.call(this,t,i,r)}catch(e){}}},t.prototype.AddUniform=function(e,t,i){return this._customUniform||(this._customUniform=new Array,this._newUniforms=new Array,this._newSamplerInstances={},this._newUniformInstances={}),i&&(-1!=t.indexOf("sampler")?this._newSamplerInstances[t+"-"+e]=i:this._newUniformInstances[t+"-"+e]=i),this._customUniform.push("uniform "+t+" "+e+";"),this._newUniforms.push(e),this},t.prototype.AddAttribute=function(e){return this._customAttributes||(this._customAttributes=[]),this._customAttributes.push(e),this},t.prototype.Fragment_Begin=function(e){return this.CustomParts.Fragment_Begin=e,this},t.prototype.Fragment_Definitions=function(e){return this.CustomParts.Fragment_Definitions=e,this},t.prototype.Fragment_MainBegin=function(e){return this.CustomParts.Fragment_MainBegin=e,this},t.prototype.Fragment_Custom_Albedo=function(e){return this.CustomParts.Fragment_Custom_Albedo=e.replace("result","surfaceAlbedo"),this},t.prototype.Fragment_Custom_Alpha=function(e){return this.CustomParts.Fragment_Custom_Alpha=e.replace("result","alpha"),this},t.prototype.Fragment_Before_Lights=function(e){return this.CustomParts.Fragment_Before_Lights=e,this},t.prototype.Fragment_Custom_MetallicRoughness=function(e){return this.CustomParts.Fragment_Custom_MetallicRoughness=e,this},t.prototype.Fragment_Custom_MicroSurface=function(e){return this.CustomParts.Fragment_Custom_MicroSurface=e,this},t.prototype.Fragment_Before_Fog=function(e){return this.CustomParts.Fragment_Before_Fog=e,this},t.prototype.Fragment_Before_FinalColorComposition=function(e){return this.CustomParts.Fragment_Before_FinalColorComposition=e,this},t.prototype.Fragment_Before_FragColor=function(e){return this.CustomParts.Fragment_Before_FragColor=e.replace("result","color"),this},t.prototype.Fragment_MainEnd=function(e){return this.CustomParts.Fragment_MainEnd=e,this},t.prototype.Vertex_Begin=function(e){return this.CustomParts.Vertex_Begin=e,this},t.prototype.Vertex_Definitions=function(e){return this.CustomParts.Vertex_Definitions=e,this},t.prototype.Vertex_MainBegin=function(e){return this.CustomParts.Vertex_MainBegin=e,this},t.prototype.Vertex_Before_PositionUpdated=function(e){return this.CustomParts.Vertex_Before_PositionUpdated=e.replace("result","positionUpdated"),this},t.prototype.Vertex_Before_NormalUpdated=function(e){return this.CustomParts.Vertex_Before_NormalUpdated=e.replace("result","normalUpdated"),this},t.prototype.Vertex_After_WorldPosComputed=function(e){return this.CustomParts.Vertex_After_WorldPosComputed=e,this},t.prototype.Vertex_MainEnd=function(e){return this.CustomParts.Vertex_MainEnd=e,this},t.ShaderIndexer=1,t}(n.PBRMaterial);(0,n.RegisterClass)("BABYLON.PBRCustomMaterial",s)},"../../../dev/materials/src/fire/fire.fragment.ts":
/*!********************************************************!*\
  !*** ../../../dev/materials/src/fire/fire.fragment.ts ***!
  \********************************************************/(e,t,i)=>{i.r(t),i.d(t,{firePixelShader:()=>a});var r=i(/*! babylonjs/Shaders/ShadersInclude/imageProcessingCompatibility */"babylonjs/Materials/effect"),n="firePixelShader",o="precision highp float;uniform vec4 vEyePosition;varying vec3 vPositionW;\n#ifdef VERTEXCOLOR\nvarying vec4 vColor;\n#endif\n#ifdef DIFFUSE\nvarying vec2 vDiffuseUV;uniform sampler2D diffuseSampler;uniform vec2 vDiffuseInfos;\n#endif\nuniform sampler2D distortionSampler;uniform sampler2D opacitySampler;\n#ifdef DIFFUSE\nvarying vec2 vDistortionCoords1;varying vec2 vDistortionCoords2;varying vec2 vDistortionCoords3;\n#endif\n#include<clipPlaneFragmentDeclaration>\n#ifdef LOGARITHMICDEPTH\n#extension GL_EXT_frag_depth : enable\n#endif\n#include<logDepthDeclaration>\n#include<fogFragmentDeclaration>\nvec4 bx2(vec4 x)\n{return vec4(2.0)*x-vec4(1.0);}\n#define CUSTOM_FRAGMENT_DEFINITIONS\nvoid main(void) {\n#define CUSTOM_FRAGMENT_MAIN_BEGIN\n#include<clipPlaneFragment>\nvec3 viewDirectionW=normalize(vEyePosition.xyz-vPositionW);vec4 baseColor=vec4(1.,1.,1.,1.);float alpha=1.0;\n#ifdef DIFFUSE\nconst float distortionAmount0 =0.092;const float distortionAmount1 =0.092;const float distortionAmount2 =0.092;vec2 heightAttenuation=vec2(0.3,0.39);vec4 noise0=texture2D(distortionSampler,vDistortionCoords1);vec4 noise1=texture2D(distortionSampler,vDistortionCoords2);vec4 noise2=texture2D(distortionSampler,vDistortionCoords3);vec4 noiseSum=bx2(noise0)*distortionAmount0+bx2(noise1)*distortionAmount1+bx2(noise2)*distortionAmount2;vec4 perturbedBaseCoords=vec4(vDiffuseUV,0.0,1.0)+noiseSum*(vDiffuseUV.y*heightAttenuation.x+heightAttenuation.y);vec4 opacityColor=texture2D(opacitySampler,perturbedBaseCoords.xy);\n#ifdef ALPHATEST\nif (opacityColor.r<0.1)\ndiscard;\n#endif\n#include<depthPrePass>\nbaseColor=texture2D(diffuseSampler,perturbedBaseCoords.xy)*2.0;baseColor*=opacityColor;baseColor.rgb*=vDiffuseInfos.y;\n#endif\n#ifdef VERTEXCOLOR\nbaseColor.rgb*=vColor.rgb;\n#endif\nvec3 diffuseBase=vec3(1.0,1.0,1.0);\n#if defined(VERTEXALPHA) || defined(INSTANCESCOLOR) && defined(INSTANCES)\nalpha*=vColor.a;\n#endif\nvec4 color=vec4(baseColor.rgb,alpha);\n#include<logDepthFragment>\n#include<fogFragment>\ngl_FragColor=color;\n#include<imageProcessingCompatibility>\n#define CUSTOM_FRAGMENT_MAIN_END\n}";r.ShaderStore.ShadersStore[n]=o;var a={name:n,shader:o}},"../../../dev/materials/src/fire/fire.vertex.ts":
/*!******************************************************!*\
  !*** ../../../dev/materials/src/fire/fire.vertex.ts ***!
  \******************************************************/(e,t,i)=>{i.r(t),i.d(t,{fireVertexShader:()=>a});var r=i(/*! babylonjs/Shaders/ShadersInclude/vertexColorMixing */"babylonjs/Materials/effect"),n="fireVertexShader",o="precision highp float;attribute vec3 position;\n#ifdef UV1\nattribute vec2 uv;\n#endif\n#ifdef UV2\nattribute vec2 uv2;\n#endif\n#ifdef VERTEXCOLOR\nattribute vec4 color;\n#endif\n#include<bonesDeclaration>\n#include<bakedVertexAnimationDeclaration>\n#include<instancesDeclaration>\nuniform mat4 view;uniform mat4 viewProjection;\n#ifdef DIFFUSE\nvarying vec2 vDiffuseUV;\n#endif\n#ifdef POINTSIZE\nuniform float pointSize;\n#endif\nvarying vec3 vPositionW;\n#ifdef VERTEXCOLOR\nvarying vec4 vColor;\n#endif\n#include<clipPlaneVertexDeclaration>\n#include<logDepthDeclaration>\n#include<fogVertexDeclaration>\nuniform float time;uniform float speed;\n#ifdef DIFFUSE\nvarying vec2 vDistortionCoords1;varying vec2 vDistortionCoords2;varying vec2 vDistortionCoords3;\n#endif\n#define CUSTOM_VERTEX_DEFINITIONS\nvoid main(void) {\n#define CUSTOM_VERTEX_MAIN_BEGIN\n#include<instancesVertex>\n#include<bonesVertex>\n#include<bakedVertexAnimation>\nvec4 worldPos=finalWorld*vec4(position,1.0);gl_Position=viewProjection*worldPos;vPositionW=vec3(worldPos);\n#ifdef DIFFUSE\nvDiffuseUV=uv;vDiffuseUV.y-=0.2;\n#endif\n#include<clipPlaneVertex>\n#include<logDepthVertex>\n#include<fogVertex>\n#include<vertexColorMixing>\n#if defined(POINTSIZE) && !defined(WEBGPU)\ngl_PointSize=pointSize;\n#endif\n#ifdef DIFFUSE\nvec3 layerSpeed=vec3(-0.2,-0.52,-0.1)*speed;vDistortionCoords1.x=uv.x;vDistortionCoords1.y=uv.y+layerSpeed.x*time/1000.0;vDistortionCoords2.x=uv.x;vDistortionCoords2.y=uv.y+layerSpeed.y*time/1000.0;vDistortionCoords3.x=uv.x;vDistortionCoords3.y=uv.y+layerSpeed.z*time/1000.0;\n#endif\n#define CUSTOM_VERTEX_MAIN_END\n}\n";r.ShaderStore.ShadersStore[n]=o;var a={name:n,shader:o}},"../../../dev/materials/src/fire/fireMaterial.ts":
/*!*******************************************************!*\
  !*** ../../../dev/materials/src/fire/fireMaterial.ts ***!
  \*******************************************************/(e,t,i)=>{i.r(t),i.d(t,{FireMaterial:()=>a});var r=i(/*! tslib */"../../../../node_modules/tslib/tslib.es6.mjs"),n=i(/*! babylonjs/Materials/clipPlaneMaterialHelper */"babylonjs/Materials/effect"),o=(i(/*! ./fire.fragment */"../../../dev/materials/src/fire/fire.fragment.ts"),i(/*! ./fire.vertex */"../../../dev/materials/src/fire/fire.vertex.ts"),function(e){function t(){var t=e.call(this)||this;return t.DIFFUSE=!1,t.CLIPPLANE=!1,t.CLIPPLANE2=!1,t.CLIPPLANE3=!1,t.CLIPPLANE4=!1,t.CLIPPLANE5=!1,t.CLIPPLANE6=!1,t.ALPHATEST=!1,t.DEPTHPREPASS=!1,t.POINTSIZE=!1,t.FOG=!1,t.UV1=!1,t.VERTEXCOLOR=!1,t.VERTEXALPHA=!1,t.BonesPerMesh=0,t.NUM_BONE_INFLUENCERS=0,t.INSTANCES=!1,t.INSTANCESCOLOR=!1,t.IMAGEPROCESSINGPOSTPROCESS=!1,t.SKIPFINALCOLORCLAMP=!1,t.LOGARITHMICDEPTH=!1,t.rebuild(),t}return(0,r.__extends)(t,e),t}(n.MaterialDefines)),a=function(e){function t(t,i){var r=e.call(this,t,i)||this;return r.diffuseColor=new n.Color3(1,1,1),r.speed=1,r._scaledDiffuse=new n.Color3,r._lastTime=0,r}return(0,r.__extends)(t,e),t.prototype.needAlphaBlending=function(){return!1},t.prototype.needAlphaTesting=function(){return!0},t.prototype.getAlphaTestTexture=function(){return null},t.prototype.isReadyForSubMesh=function(e,t,i){var r=t._drawWrapper;if(this.isFrozen&&r._wasPreviouslyReady&&r._wasPreviouslyUsingInstances===i)return!0;t.materialDefines||(t.materialDefines=new o);var a=t.materialDefines,s=this.getScene();if(this._isReadyForSubMesh(t))return!0;var l=s.getEngine();if(a._areTexturesDirty&&(a._needUVs=!1,this._diffuseTexture&&n.MaterialFlags.DiffuseTextureEnabled)){if(!this._diffuseTexture.isReady())return!1;a._needUVs=!0,a.DIFFUSE=!0}if(a.ALPHATEST=!!this._opacityTexture,a._areMiscDirty&&(a.POINTSIZE=this.pointsCloud||s.forcePointsCloud,a.FOG=s.fogEnabled&&e.applyFog&&s.fogMode!==n.Scene.FOGMODE_NONE&&this.fogEnabled,a.LOGARITHMICDEPTH=this._useLogarithmicDepth),n.MaterialHelper.PrepareDefinesForFrameBoundValues(s,l,this,a,!!i),n.MaterialHelper.PrepareDefinesForAttributes(e,a,!1,!0),a.isDirty){a.markAsProcessed(),s.resetCachedMaterial();var f=new n.EffectFallbacks;a.FOG&&f.addFallback(1,"FOG"),a.NUM_BONE_INFLUENCERS>0&&f.addCPUSkinningFallback(0,e),a.IMAGEPROCESSINGPOSTPROCESS=s.imageProcessingConfiguration.applyByPostProcess;var u=[n.VertexBuffer.PositionKind];a.UV1&&u.push(n.VertexBuffer.UVKind),a.VERTEXCOLOR&&u.push(n.VertexBuffer.ColorKind),n.MaterialHelper.PrepareAttributesForBones(u,e,a,f),n.MaterialHelper.PrepareAttributesForInstances(u,a);var d=["world","view","viewProjection","vEyePosition","vFogInfos","vFogColor","pointSize","vDiffuseInfos","mBones","diffuseMatrix","logarithmicDepthConstant","time","speed"];(0,n.addClipPlaneUniforms)(d);var c=a.toString();t.setEffect(s.getEngine().createEffect("fire",{attributes:u,uniformsNames:d,uniformBuffersNames:[],samplers:["diffuseSampler","distortionSampler","opacitySampler"],defines:c,fallbacks:f,onCompiled:this.onCompiled,onError:this.onError,indexParameters:null,maxSimultaneousLights:4,transformFeedbackVaryings:null},l),a,this._materialContext)}return!(!t.effect||!t.effect.isReady())&&(a._renderId=s.getRenderId(),r._wasPreviouslyReady=!0,r._wasPreviouslyUsingInstances=!!i,!0)},t.prototype.bindForSubMesh=function(e,t,i){var r=this.getScene(),o=i.materialDefines;if(o){var a=i.effect;a&&(this._activeEffect=a,this.bindOnlyWorldMatrix(e),this._activeEffect.setMatrix("viewProjection",r.getTransformMatrix()),n.MaterialHelper.BindBonesParameters(t,this._activeEffect),this._mustRebind(r,a,i)&&(this._diffuseTexture&&n.MaterialFlags.DiffuseTextureEnabled&&(this._activeEffect.setTexture("diffuseSampler",this._diffuseTexture),this._activeEffect.setFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),this._activeEffect.setMatrix("diffuseMatrix",this._diffuseTexture.getTextureMatrix()),this._activeEffect.setTexture("distortionSampler",this._distortionTexture),this._activeEffect.setTexture("opacitySampler",this._opacityTexture)),(0,n.bindClipPlane)(this._activeEffect,this,r),this.pointsCloud&&this._activeEffect.setFloat("pointSize",this.pointSize),this._useLogarithmicDepth&&n.MaterialHelper.BindLogDepth(o,a,r),r.bindEyePosition(a)),this._activeEffect.setColor4("vDiffuseColor",this._scaledDiffuse,this.alpha*t.visibility),r.fogEnabled&&t.applyFog&&r.fogMode!==n.Scene.FOGMODE_NONE&&this._activeEffect.setMatrix("view",r.getViewMatrix()),n.MaterialHelper.BindFogParameters(r,t,this._activeEffect),this._lastTime+=r.getEngine().getDeltaTime(),this._activeEffect.setFloat("time",this._lastTime),this._activeEffect.setFloat("speed",this.speed),this._afterBind(t,this._activeEffect,i))}},t.prototype.getAnimatables=function(){var e=[];return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&e.push(this._diffuseTexture),this._distortionTexture&&this._distortionTexture.animations&&this._distortionTexture.animations.length>0&&e.push(this._distortionTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&e.push(this._opacityTexture),e},t.prototype.getActiveTextures=function(){var t=e.prototype.getActiveTextures.call(this);return this._diffuseTexture&&t.push(this._diffuseTexture),this._distortionTexture&&t.push(this._distortionTexture),this._opacityTexture&&t.push(this._opacityTexture),t},t.prototype.hasTexture=function(t){return!!e.prototype.hasTexture.call(this,t)||(this._diffuseTexture===t||(this._distortionTexture===t||this._opacityTexture===t))},t.prototype.getClassName=function(){return"FireMaterial"},t.prototype.dispose=function(t){this._diffuseTexture&&this._diffuseTexture.dispose(),this._distortionTexture&&this._distortionTexture.dispose(),e.prototype.dispose.call(this,t)},t.prototype.clone=function(e){var i=this;return n.SerializationHelper.Clone((function(){return new t(e,i.getScene())}),this)},t.prototype.serialize=function(){var t=e.prototype.serialize.call(this);return t.customType="BABYLON.FireMaterial",t.diffuseColor=this.diffuseColor.asArray(),t.speed=this.speed,this._diffuseTexture&&(t._diffuseTexture=this._diffuseTexture.serialize()),this._distortionTexture&&(t._distortionTexture=this._distortionTexture.serialize()),this._opacityTexture&&(t._opacityTexture=this._opacityTexture.serialize()),t},t.Parse=function(e,i,r){var o=new t(e.name,i);return o.diffuseColor=n.Color3.FromArray(e.diffuseColor),o.speed=e.speed,o.alpha=e.alpha,o.id=e.id,n.Tags.AddTagsTo(o,e.tags),o.backFaceCulling=e.backFaceCulling,o.wireframe=e.wireframe,e._diffuseTexture&&(o._diffuseTexture=n.Texture.Parse(e._diffuseTexture,i,r)),e._distortionTexture&&(o._distortionTexture=n.Texture.Parse(e._distortionTexture,i,r)),e._opacityTexture&&(o._opacityTexture=n.Texture.Parse(e._opacityTexture,i,r)),o},(0,r.__decorate)([(0,n.serializeAsTexture)("diffuseTexture")],t.prototype,"_diffuseTexture",void 0),(0,r.__decorate)([(0,n.expandToProperty)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"diffuseTexture",void 0),(0,r.__decorate)([(0,n.serializeAsTexture)("distortionTexture")],t.prototype,"_distortionTexture",void 0),(0,r.__decorate)([(0,n.expandToProperty)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"distortionTexture",void 0),(0,r.__decorate)([(0,n.serializeAsTexture)("opacityTexture")],t.prototype,"_opacityTexture",void 0),(0,r.__decorate)([(0,n.expandToProperty)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"opacityTexture",void 0),(0,r.__decorate)([(0,n.serializeAsColor3)("diffuse")],t.prototype,"diffuseColor",void 0),(0,r.__decorate)([(0,n.serialize)()],t.prototype,"speed",void 0),t}(n.PushMaterial);(0,n.RegisterClass)("BABYLON.FireMaterial",a)},"../../../dev/materials/src/fire/index.ts":
/*!************************************************!*\
  !*** ../../../dev/materials/src/fire/index.ts ***!
  \************************************************/(e,t,i)=>{i.r(t),i.d(t,{FireMaterial:()=>r.FireMaterial});var r=i(/*! ./fireMaterial */"../../../dev/materials/src/fire/fireMaterial.ts")},"../../../dev/materials/src/fur/fur.fragment.ts":
/*!******************************************************!*\
  !*** ../../../dev/materials/src/fur/fur.fragment.ts ***!
  \******************************************************/(e,t,i)=>{i.r(t),i.d(t,{furPixelShader:()=>a});var r=i(/*! babylonjs/Shaders/ShadersInclude/imageProcessingCompatibility */"babylonjs/Materials/effect"),n="furPixelShader",o="precision highp float;uniform vec4 vEyePosition;uniform vec4 vDiffuseColor;uniform vec4 furColor;uniform float furLength;varying vec3 vPositionW;varying float vfur_length;\n#ifdef NORMAL\nvarying vec3 vNormalW;\n#endif\n#ifdef VERTEXCOLOR\nvarying vec4 vColor;\n#endif\n#include<helperFunctions>\n#include<__decl__lightFragment>[0..maxSimultaneousLights]\n#ifdef DIFFUSE\nvarying vec2 vDiffuseUV;uniform sampler2D diffuseSampler;uniform vec2 vDiffuseInfos;\n#endif\n#ifdef HIGHLEVEL\nuniform float furOffset;uniform float furOcclusion;uniform sampler2D furTexture;varying vec2 vFurUV;\n#endif\n#ifdef LOGARITHMICDEPTH\n#extension GL_EXT_frag_depth : enable\n#endif\n#include<logDepthDeclaration>\n#include<lightsFragmentFunctions>\n#include<shadowsFragmentFunctions>\n#include<fogFragmentDeclaration>\n#include<clipPlaneFragmentDeclaration>\nfloat Rand(vec3 rv) {float x=dot(rv,vec3(12.9898,78.233,24.65487));return fract(sin(x)*43758.5453);}\n#define CUSTOM_FRAGMENT_DEFINITIONS\nvoid main(void) {\n#define CUSTOM_FRAGMENT_MAIN_BEGIN\n#include<clipPlaneFragment>\nvec3 viewDirectionW=normalize(vEyePosition.xyz-vPositionW);vec4 baseColor=furColor;vec3 diffuseColor=vDiffuseColor.rgb;float alpha=vDiffuseColor.a;\n#ifdef DIFFUSE\nbaseColor*=texture2D(diffuseSampler,vDiffuseUV);\n#ifdef ALPHATEST\nif (baseColor.a<0.4)\ndiscard;\n#endif\n#include<depthPrePass>\nbaseColor.rgb*=vDiffuseInfos.y;\n#endif\n#ifdef VERTEXCOLOR\nbaseColor.rgb*=vColor.rgb;\n#endif\n#ifdef NORMAL\nvec3 normalW=normalize(vNormalW);\n#else\nvec3 normalW=vec3(1.0,1.0,1.0);\n#endif\n#ifdef HIGHLEVEL\nvec4 furTextureColor=texture2D(furTexture,vec2(vFurUV.x,vFurUV.y));if (furTextureColor.a<=0.0 || furTextureColor.g<furOffset) {discard;}\nfloat occlusion=mix(0.0,furTextureColor.b*1.2,furOffset);baseColor=vec4(baseColor.xyz*max(occlusion,furOcclusion),1.1-furOffset);\n#endif\nvec3 diffuseBase=vec3(0.,0.,0.);lightingInfo info;float shadow=1.;float glossiness=0.;float aggShadow=0.;float numLights=0.;\n#ifdef SPECULARTERM\nvec3 specularBase=vec3(0.,0.,0.);\n#endif\n#include<lightFragment>[0..maxSimultaneousLights]\n#if defined(VERTEXALPHA) || defined(INSTANCESCOLOR) && defined(INSTANCES)\nalpha*=vColor.a;\n#endif\nvec3 finalDiffuse=clamp(diffuseBase.rgb*baseColor.rgb,0.0,1.0);\n#ifdef HIGHLEVEL\nvec4 color=vec4(finalDiffuse,alpha);\n#else\nfloat r=vfur_length/furLength*0.5;vec4 color=vec4(finalDiffuse*(0.5+r),alpha);\n#endif\n#include<logDepthFragment>\n#include<fogFragment>\ngl_FragColor=color;\n#include<imageProcessingCompatibility>\n#define CUSTOM_FRAGMENT_MAIN_END\n}";r.ShaderStore.ShadersStore[n]=o;var a={name:n,shader:o}},"../../../dev/materials/src/fur/fur.vertex.ts":
/*!****************************************************!*\
  !*** ../../../dev/materials/src/fur/fur.vertex.ts ***!
  \****************************************************/(e,t,i)=>{i.r(t),i.d(t,{furVertexShader:()=>a});var r=i(/*! babylonjs/Shaders/ShadersInclude/vertexColorMixing */"babylonjs/Materials/effect"),n="furVertexShader",o="precision highp float;attribute vec3 position;attribute vec3 normal;\n#ifdef UV1\nattribute vec2 uv;\n#endif\n#ifdef UV2\nattribute vec2 uv2;\n#endif\n#ifdef VERTEXCOLOR\nattribute vec4 color;\n#endif\n#include<bonesDeclaration>\n#include<bakedVertexAnimationDeclaration>\nuniform float furLength;uniform float furAngle;\n#ifdef HIGHLEVEL\nuniform float furOffset;uniform vec3 furGravity;uniform float furTime;uniform float furSpacing;uniform float furDensity;\n#endif\n#ifdef HEIGHTMAP\nuniform sampler2D heightTexture;\n#endif\n#ifdef HIGHLEVEL\nvarying vec2 vFurUV;\n#endif\n#include<instancesDeclaration>\nuniform mat4 view;uniform mat4 viewProjection;\n#ifdef DIFFUSE\nvarying vec2 vDiffuseUV;uniform mat4 diffuseMatrix;uniform vec2 vDiffuseInfos;\n#endif\n#ifdef POINTSIZE\nuniform float pointSize;\n#endif\nvarying vec3 vPositionW;\n#ifdef NORMAL\nvarying vec3 vNormalW;\n#endif\nvarying float vfur_length;\n#ifdef VERTEXCOLOR\nvarying vec4 vColor;\n#endif\n#include<clipPlaneVertexDeclaration>\n#include<logDepthDeclaration>\n#include<fogVertexDeclaration>\n#include<__decl__lightFragment>[0..maxSimultaneousLights]\nfloat Rand(vec3 rv) {float x=dot(rv,vec3(12.9898,78.233,24.65487));return fract(sin(x)*43758.5453);}\n#define CUSTOM_VERTEX_DEFINITIONS\nvoid main(void) {\n#define CUSTOM_VERTEX_MAIN_BEGIN\n#include<instancesVertex>\n#include<bonesVertex>\n#include<bakedVertexAnimation>\nfloat r=Rand(position);\n#ifdef HEIGHTMAP\n#if __VERSION__>100\nvfur_length=furLength*texture(heightTexture,uv).x;\n#else\nvfur_length=furLength*texture2D(heightTexture,uv).r;\n#endif\n#else \nvfur_length=(furLength*r);\n#endif\nvec3 tangent1=vec3(normal.y,-normal.x,0);vec3 tangent2=vec3(-normal.z,0,normal.x);r=Rand(tangent1*r);float J=(2.0+4.0*r);r=Rand(tangent2*r);float K=(2.0+2.0*r);tangent1=tangent1*J+tangent2*K;tangent1=normalize(tangent1);vec3 newPosition=position+normal*vfur_length*cos(furAngle)+tangent1*vfur_length*sin(furAngle);\n#ifdef HIGHLEVEL\nvec3 forceDirection=vec3(0.0,0.0,0.0);forceDirection.x=sin(furTime+position.x*0.05)*0.2;forceDirection.y=cos(furTime*0.7+position.y*0.04)*0.2;forceDirection.z=sin(furTime*0.7+position.z*0.04)*0.2;vec3 displacement=vec3(0.0,0.0,0.0);displacement=furGravity+forceDirection;float displacementFactor=pow(furOffset,3.0);vec3 aNormal=normal;aNormal.xyz+=displacement*displacementFactor;newPosition=vec3(newPosition.x,newPosition.y,newPosition.z)+(normalize(aNormal)*furOffset*furSpacing);\n#endif\n#ifdef NORMAL\nvNormalW=normalize(vec3(finalWorld*vec4(normal,0.0)));\n#endif\ngl_Position=viewProjection*finalWorld*vec4(newPosition,1.0);vec4 worldPos=finalWorld*vec4(newPosition,1.0);vPositionW=vec3(worldPos);\n#ifndef UV1\nvec2 uv=vec2(0.,0.);\n#endif\n#ifndef UV2\nvec2 uv2=vec2(0.,0.);\n#endif\n#ifdef DIFFUSE\nif (vDiffuseInfos.x==0.)\n{vDiffuseUV=vec2(diffuseMatrix*vec4(uv,1.0,0.0));}\nelse\n{vDiffuseUV=vec2(diffuseMatrix*vec4(uv2,1.0,0.0));}\n#ifdef HIGHLEVEL\nvFurUV=vDiffuseUV*furDensity;\n#endif\n#else\n#ifdef HIGHLEVEL\nvFurUV=uv*furDensity;\n#endif\n#endif\n#include<clipPlaneVertex>\n#include<logDepthVertex>\n#include<fogVertex>\n#include<shadowsVertex>[0..maxSimultaneousLights]\n#include<vertexColorMixing>\n#if defined(POINTSIZE) && !defined(WEBGPU)\ngl_PointSize=pointSize;\n#endif\n#define CUSTOM_VERTEX_MAIN_END\n}\n";r.ShaderStore.ShadersStore[n]=o;var a={name:n,shader:o}},"../../../dev/materials/src/fur/furMaterial.ts":
/*!*****************************************************!*\
  !*** ../../../dev/materials/src/fur/furMaterial.ts ***!
  \*****************************************************/(e,t,i)=>{i.r(t),i.d(t,{FurMaterial:()=>a});var r=i(/*! tslib */"../../../../node_modules/tslib/tslib.es6.mjs"),n=i(/*! babylonjs/Materials/clipPlaneMaterialHelper */"babylonjs/Materials/effect"),o=(i(/*! ./fur.fragment */"../../../dev/materials/src/fur/fur.fragment.ts"),i(/*! ./fur.vertex */"../../../dev/materials/src/fur/fur.vertex.ts"),function(e){function t(){var t=e.call(this)||this;return t.DIFFUSE=!1,t.HEIGHTMAP=!1,t.CLIPPLANE=!1,t.CLIPPLANE2=!1,t.CLIPPLANE3=!1,t.CLIPPLANE4=!1,t.CLIPPLANE5=!1,t.CLIPPLANE6=!1,t.ALPHATEST=!1,t.DEPTHPREPASS=!1,t.POINTSIZE=!1,t.FOG=!1,t.NORMAL=!1,t.UV1=!1,t.UV2=!1,t.VERTEXCOLOR=!1,t.VERTEXALPHA=!1,t.NUM_BONE_INFLUENCERS=0,t.BonesPerMesh=0,t.INSTANCES=!1,t.INSTANCESCOLOR=!1,t.HIGHLEVEL=!1,t.IMAGEPROCESSINGPOSTPROCESS=!1,t.SKIPFINALCOLORCLAMP=!1,t.LOGARITHMICDEPTH=!1,t.rebuild(),t}return(0,r.__extends)(t,e),t}(n.MaterialDefines)),a=function(e){function t(t,i){var r=e.call(this,t,i)||this;return r.diffuseColor=new n.Color3(1,1,1),r.furLength=1,r.furAngle=0,r.furColor=new n.Color3(.44,.21,.02),r.furOffset=0,r.furSpacing=12,r.furGravity=new n.Vector3(0,0,0),r.furSpeed=100,r.furDensity=20,r.furOcclusion=0,r._disableLighting=!1,r._maxSimultaneousLights=4,r.highLevelFur=!0,r._furTime=0,r}return(0,r.__extends)(t,e),Object.defineProperty(t.prototype,"furTime",{get:function(){return this._furTime},set:function(e){this._furTime=e},enumerable:!1,configurable:!0}),t.prototype.needAlphaBlending=function(){return this.alpha<1},t.prototype.needAlphaTesting=function(){return!1},t.prototype.getAlphaTestTexture=function(){return null},t.prototype.updateFur=function(){for(var e=1;e<this._meshes.length;e++){var t=this._meshes[e].material;t.furLength=this.furLength,t.furAngle=this.furAngle,t.furGravity=this.furGravity,t.furSpacing=this.furSpacing,t.furSpeed=this.furSpeed,t.furColor=this.furColor,t.diffuseTexture=this.diffuseTexture,t.furTexture=this.furTexture,t.highLevelFur=this.highLevelFur,t.furTime=this.furTime,t.furDensity=this.furDensity}},t.prototype.isReadyForSubMesh=function(e,t,i){var r=t._drawWrapper;if(this.isFrozen&&r.effect&&r._wasPreviouslyReady&&r._wasPreviouslyUsingInstances===i)return!0;t.materialDefines||(t.materialDefines=new o);var a=t.materialDefines,s=this.getScene();if(this._isReadyForSubMesh(t))return!0;var l=s.getEngine();if(a._areTexturesDirty&&s.texturesEnabled){if(this.diffuseTexture&&n.MaterialFlags.DiffuseTextureEnabled){if(!this.diffuseTexture.isReady())return!1;a._needUVs=!0,a.DIFFUSE=!0}if(this.heightTexture&&l.getCaps().maxVertexTextureImageUnits){if(!this.heightTexture.isReady())return!1;a._needUVs=!0,a.HEIGHTMAP=!0}}if(this.highLevelFur!==a.HIGHLEVEL&&(a.HIGHLEVEL=!0,a.markAsUnprocessed()),n.MaterialHelper.PrepareDefinesForMisc(e,s,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this._shouldTurnAlphaTestOn(e),a),a._needNormals=n.MaterialHelper.PrepareDefinesForLights(s,e,a,!1,this._maxSimultaneousLights,this._disableLighting),n.MaterialHelper.PrepareDefinesForFrameBoundValues(s,l,this,a,!!i),n.MaterialHelper.PrepareDefinesForAttributes(e,a,!0,!0),a.isDirty){a.markAsProcessed(),s.resetCachedMaterial();var f=new n.EffectFallbacks;a.FOG&&f.addFallback(1,"FOG"),n.MaterialHelper.HandleFallbacksForShadows(a,f,this.maxSimultaneousLights),a.NUM_BONE_INFLUENCERS>0&&f.addCPUSkinningFallback(0,e),a.IMAGEPROCESSINGPOSTPROCESS=s.imageProcessingConfiguration.applyByPostProcess;var u=[n.VertexBuffer.PositionKind];a.NORMAL&&u.push(n.VertexBuffer.NormalKind),a.UV1&&u.push(n.VertexBuffer.UVKind),a.UV2&&u.push(n.VertexBuffer.UV2Kind),a.VERTEXCOLOR&&u.push(n.VertexBuffer.ColorKind),n.MaterialHelper.PrepareAttributesForBones(u,e,a,f),n.MaterialHelper.PrepareAttributesForInstances(u,a);var d=a.toString(),c=["world","view","viewProjection","vEyePosition","vLightsType","vDiffuseColor","vFogInfos","vFogColor","pointSize","vDiffuseInfos","mBones","diffuseMatrix","logarithmicDepthConstant","furLength","furAngle","furColor","furOffset","furGravity","furTime","furSpacing","furDensity","furOcclusion"];(0,n.addClipPlaneUniforms)(c);var p=["diffuseSampler","heightTexture","furTexture"],h=[];n.MaterialHelper.PrepareUniformsAndSamplersList({uniformsNames:c,uniformBuffersNames:h,samplers:p,defines:a,maxSimultaneousLights:this.maxSimultaneousLights}),t.setEffect(s.getEngine().createEffect("fur",{attributes:u,uniformsNames:c,uniformBuffersNames:h,samplers:p,defines:d,fallbacks:f,onCompiled:this.onCompiled,onError:this.onError,indexParameters:{maxSimultaneousLights:this.maxSimultaneousLights}},l),a,this._materialContext)}return!(!t.effect||!t.effect.isReady())&&(a._renderId=s.getRenderId(),r._wasPreviouslyReady=!0,r._wasPreviouslyUsingInstances=!!i,!0)},t.prototype.bindForSubMesh=function(e,t,i){var r=this.getScene(),o=i.materialDefines;if(o){var a=i.effect;a&&(this._activeEffect=a,this.bindOnlyWorldMatrix(e),this._activeEffect.setMatrix("viewProjection",r.getTransformMatrix()),n.MaterialHelper.BindBonesParameters(t,this._activeEffect),this._mustRebind(r,a,i)&&(this._diffuseTexture&&n.MaterialFlags.DiffuseTextureEnabled&&(this._activeEffect.setTexture("diffuseSampler",this._diffuseTexture),this._activeEffect.setFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),this._activeEffect.setMatrix("diffuseMatrix",this._diffuseTexture.getTextureMatrix())),this._heightTexture&&this._activeEffect.setTexture("heightTexture",this._heightTexture),(0,n.bindClipPlane)(this._activeEffect,this,r),this.pointsCloud&&this._activeEffect.setFloat("pointSize",this.pointSize),this._useLogarithmicDepth&&n.MaterialHelper.BindLogDepth(o,a,r),r.bindEyePosition(a)),this._activeEffect.setColor4("vDiffuseColor",this.diffuseColor,this.alpha*t.visibility),r.lightsEnabled&&!this.disableLighting&&n.MaterialHelper.BindLights(r,t,this._activeEffect,o,this.maxSimultaneousLights),r.fogEnabled&&t.applyFog&&r.fogMode!==n.Scene.FOGMODE_NONE&&this._activeEffect.setMatrix("view",r.getViewMatrix()),n.MaterialHelper.BindFogParameters(r,t,this._activeEffect),this._activeEffect.setFloat("furLength",this.furLength),this._activeEffect.setFloat("furAngle",this.furAngle),this._activeEffect.setColor4("furColor",this.furColor,1),this.highLevelFur&&(this._activeEffect.setVector3("furGravity",this.furGravity),this._activeEffect.setFloat("furOffset",this.furOffset),this._activeEffect.setFloat("furSpacing",this.furSpacing),this._activeEffect.setFloat("furDensity",this.furDensity),this._activeEffect.setFloat("furOcclusion",this.furOcclusion),this._furTime+=this.getScene().getEngine().getDeltaTime()/this.furSpeed,this._activeEffect.setFloat("furTime",this._furTime),this._activeEffect.setTexture("furTexture",this.furTexture)),this._afterBind(t,this._activeEffect,i))}},t.prototype.getAnimatables=function(){var e=[];return this.diffuseTexture&&this.diffuseTexture.animations&&this.diffuseTexture.animations.length>0&&e.push(this.diffuseTexture),this.heightTexture&&this.heightTexture.animations&&this.heightTexture.animations.length>0&&e.push(this.heightTexture),e},t.prototype.getActiveTextures=function(){var t=e.prototype.getActiveTextures.call(this);return this._diffuseTexture&&t.push(this._diffuseTexture),this._heightTexture&&t.push(this._heightTexture),t},t.prototype.hasTexture=function(t){return!!e.prototype.hasTexture.call(this,t)||(this.diffuseTexture===t||this._heightTexture===t)},t.prototype.dispose=function(t){if(this.diffuseTexture&&this.diffuseTexture.dispose(),this._meshes)for(var i=1;i<this._meshes.length;i++){var r=this._meshes[i].material;r&&r.dispose(t),this._meshes[i].dispose()}e.prototype.dispose.call(this,t)},t.prototype.clone=function(e){var i=this;return n.SerializationHelper.Clone((function(){return new t(e,i.getScene())}),this)},t.prototype.serialize=function(){var t=e.prototype.serialize.call(this);return t.customType="BABYLON.FurMaterial",this._meshes&&(t.sourceMeshName=this._meshes[0].name,t.quality=this._meshes.length),t},t.prototype.getClassName=function(){return"FurMaterial"},t.Parse=function(e,i,r){var o=n.SerializationHelper.Parse((function(){return new t(e.name,i)}),e,i,r);return e.sourceMeshName&&o.highLevelFur&&i.executeWhenReady((function(){var r=i.getMeshByName(e.sourceMeshName);if(r){var n=t.GenerateTexture("Fur Texture",i);o.furTexture=n,t.FurifyMesh(r,e.quality)}})),o},t.GenerateTexture=function(e,t){for(var i=new n.DynamicTexture("FurTexture "+e,256,t,!0),r=i.getContext(),o=0;o<2e4;++o)r.fillStyle="rgba(255, "+Math.floor(255*Math.random())+", "+Math.floor(255*Math.random())+", 1)",r.fillRect(Math.random()*i.getSize().width,Math.random()*i.getSize().height,2,2);return i.update(!1),i.wrapU=n.Texture.WRAP_ADDRESSMODE,i.wrapV=n.Texture.WRAP_ADDRESSMODE,i},t.FurifyMesh=function(e,i){var r,o=[e],a=e.material;if(!(a instanceof t))throw"The material of the source mesh must be a Fur Material";for(r=1;r<i;r++){var s=new t(a.name+r,e.getScene());e.getScene().materials.pop(),n.Tags.EnableFor(s),n.Tags.AddTagsTo(s,"furShellMaterial"),s.furLength=a.furLength,s.furAngle=a.furAngle,s.furGravity=a.furGravity,s.furSpacing=a.furSpacing,s.furSpeed=a.furSpeed,s.furColor=a.furColor,s.diffuseTexture=a.diffuseTexture,s.furOffset=r/i,s.furTexture=a.furTexture,s.highLevelFur=a.highLevelFur,s.furTime=a.furTime,s.furDensity=a.furDensity;var l=e.clone(e.name+r);l.material=s,l.skeleton=e.skeleton,l.position=n.Vector3.Zero(),o.push(l)}for(r=1;r<o.length;r++)o[r].parent=e;return e.material._meshes=o,o},(0,r.__decorate)([(0,n.serializeAsTexture)("diffuseTexture")],t.prototype,"_diffuseTexture",void 0),(0,r.__decorate)([(0,n.expandToProperty)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"diffuseTexture",void 0),(0,r.__decorate)([(0,n.serializeAsTexture)("heightTexture")],t.prototype,"_heightTexture",void 0),(0,r.__decorate)([(0,n.expandToProperty)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"heightTexture",void 0),(0,r.__decorate)([(0,n.serializeAsColor3)()],t.prototype,"diffuseColor",void 0),(0,r.__decorate)([(0,n.serialize)()],t.prototype,"furLength",void 0),(0,r.__decorate)([(0,n.serialize)()],t.prototype,"furAngle",void 0),(0,r.__decorate)([(0,n.serializeAsColor3)()],t.prototype,"furColor",void 0),(0,r.__decorate)([(0,n.serialize)()],t.prototype,"furOffset",void 0),(0,r.__decorate)([(0,n.serialize)()],t.prototype,"furSpacing",void 0),(0,r.__decorate)([(0,n.serializeAsVector3)()],t.prototype,"furGravity",void 0),(0,r.__decorate)([(0,n.serialize)()],t.prototype,"furSpeed",void 0),(0,r.__decorate)([(0,n.serialize)()],t.prototype,"furDensity",void 0),(0,r.__decorate)([(0,n.serialize)()],t.prototype,"furOcclusion",void 0),(0,r.__decorate)([(0,n.serialize)("disableLighting")],t.prototype,"_disableLighting",void 0),(0,r.__decorate)([(0,n.expandToProperty)("_markAllSubMeshesAsLightsDirty")],t.prototype,"disableLighting",void 0),(0,r.__decorate)([(0,n.serialize)("maxSimultaneousLights")],t.prototype,"_maxSimultaneousLights",void 0),(0,r.__decorate)([(0,n.expandToProperty)("_markAllSubMeshesAsLightsDirty")],t.prototype,"maxSimultaneousLights",void 0),(0,r.__decorate)([(0,n.serialize)()],t.prototype,"highLevelFur",void 0),(0,r.__decorate)([(0,n.serialize)()],t.prototype,"furTime",null),t}(n.PushMaterial);(0,n.RegisterClass)("BABYLON.FurMaterial",a)},"../../../dev/materials/src/fur/index.ts":
/*!***********************************************!*\
  !*** ../../../dev/materials/src/fur/index.ts ***!
  \***********************************************/(e,t,i)=>{i.r(t),i.d(t,{FurMaterial:()=>r.FurMaterial});var r=i(/*! ./furMaterial */"../../../dev/materials/src/fur/furMaterial.ts")},"../../../dev/materials/src/gradient/gradient.fragment.ts":
/*!****************************************************************!*\
  !*** ../../../dev/materials/src/gradient/gradient.fragment.ts ***!
  \****************************************************************/(e,t,i)=>{i.r(t),i.d(t,{gradientPixelShader:()=>a});var r=i(/*! babylonjs/Shaders/ShadersInclude/imageProcessingCompatibility */"babylonjs/Materials/effect"),n="gradientPixelShader",o="precision highp float;uniform vec4 vEyePosition;uniform vec4 topColor;uniform vec4 bottomColor;uniform float offset;uniform float scale;uniform float smoothness;varying vec3 vPositionW;varying vec3 vPosition;\n#ifdef NORMAL\nvarying vec3 vNormalW;\n#endif\n#ifdef VERTEXCOLOR\nvarying vec4 vColor;\n#endif\n#include<helperFunctions>\n#include<__decl__lightFragment>[0]\n#include<__decl__lightFragment>[1]\n#include<__decl__lightFragment>[2]\n#include<__decl__lightFragment>[3]\n#include<lightsFragmentFunctions>\n#include<shadowsFragmentFunctions>\n#include<clipPlaneFragmentDeclaration>\n#ifdef LOGARITHMICDEPTH\n#extension GL_EXT_frag_depth : enable\n#endif\n#include<logDepthDeclaration>\n#include<fogFragmentDeclaration>\n#define CUSTOM_FRAGMENT_DEFINITIONS\nvoid main(void) {\n#define CUSTOM_FRAGMENT_MAIN_BEGIN\n#include<clipPlaneFragment>\nvec3 viewDirectionW=normalize(vEyePosition.xyz-vPositionW);float h=vPosition.y*scale+offset;float mysmoothness=clamp(smoothness,0.01,max(smoothness,10.));vec4 baseColor=mix(bottomColor,topColor,max(pow(max(h,0.0),mysmoothness),0.0));vec3 diffuseColor=baseColor.rgb;float alpha=baseColor.a;\n#ifdef ALPHATEST\nif (baseColor.a<0.4)\ndiscard;\n#endif\n#include<depthPrePass>\n#ifdef VERTEXCOLOR\nbaseColor.rgb*=vColor.rgb;\n#endif\n#ifdef NORMAL\nvec3 normalW=normalize(vNormalW);\n#else\nvec3 normalW=vec3(1.0,1.0,1.0);\n#endif\n#ifdef EMISSIVE\nvec3 diffuseBase=baseColor.rgb;\n#else\nvec3 diffuseBase=vec3(0.,0.,0.);\n#endif\nlightingInfo info;float shadow=1.;float glossiness=0.;float aggShadow=0.;float numLights=0.;\n#include<lightFragment>[0..maxSimultaneousLights]\n#if defined(VERTEXALPHA) || defined(INSTANCESCOLOR) && defined(INSTANCES)\nalpha*=vColor.a;\n#endif\nvec3 finalDiffuse=clamp(diffuseBase*diffuseColor,0.0,1.0)*baseColor.rgb;vec4 color=vec4(finalDiffuse,alpha);\n#include<logDepthFragment>\n#include<fogFragment>\ngl_FragColor=color;\n#include<imageProcessingCompatibility>\n#define CUSTOM_FRAGMENT_MAIN_END\n}\n";r.ShaderStore.ShadersStore[n]=o;var a={name:n,shader:o}},"../../../dev/materials/src/gradient/gradient.vertex.ts":
/*!**************************************************************!*\
  !*** ../../../dev/materials/src/gradient/gradient.vertex.ts ***!
  \**************************************************************/(e,t,i)=>{i.r(t),i.d(t,{gradientVertexShader:()=>a});var r=i(/*! babylonjs/Shaders/ShadersInclude/vertexColorMixing */"babylonjs/Materials/effect"),n="gradientVertexShader",o="precision highp float;attribute vec3 position;\n#ifdef NORMAL\nattribute vec3 normal;\n#endif\n#ifdef UV1\nattribute vec2 uv;\n#endif\n#ifdef UV2\nattribute vec2 uv2;\n#endif\n#ifdef VERTEXCOLOR\nattribute vec4 color;\n#endif\n#include<bonesDeclaration>\n#include<bakedVertexAnimationDeclaration>\n#include<instancesDeclaration>\nuniform mat4 view;uniform mat4 viewProjection;\n#ifdef POINTSIZE\nuniform float pointSize;\n#endif\nvarying vec3 vPositionW;varying vec3 vPosition;\n#ifdef NORMAL\nvarying vec3 vNormalW;\n#endif\n#ifdef VERTEXCOLOR\nvarying vec4 vColor;\n#endif\n#include<clipPlaneVertexDeclaration>\n#include<logDepthDeclaration>\n#include<fogVertexDeclaration>\n#include<__decl__lightFragment>[0..maxSimultaneousLights]\n#define CUSTOM_VERTEX_DEFINITIONS\nvoid main(void) {\n#define CUSTOM_VERTEX_MAIN_BEGIN\n#include<instancesVertex>\n#include<bonesVertex>\n#include<bakedVertexAnimation>\nvec4 worldPos=finalWorld*vec4(position,1.0);gl_Position=viewProjection*worldPos;vPositionW=vec3(worldPos);vPosition=position;\n#ifdef NORMAL\nvNormalW=normalize(vec3(finalWorld*vec4(normal,0.0)));\n#endif\n#ifndef UV1\nvec2 uv=vec2(0.,0.);\n#endif\n#ifndef UV2\nvec2 uv2=vec2(0.,0.);\n#endif\n#include<clipPlaneVertex>\n#include<logDepthVertex>\n#include<fogVertex>\n#include<shadowsVertex>[0..maxSimultaneousLights]\n#include<vertexColorMixing>\n#if defined(POINTSIZE) && !defined(WEBGPU)\ngl_PointSize=pointSize;\n#endif\n#define CUSTOM_VERTEX_MAIN_END\n}\n";r.ShaderStore.ShadersStore[n]=o;var a={name:n,shader:o}},"../../../dev/materials/src/gradient/gradientMaterial.ts":
/*!***************************************************************!*\
  !*** ../../../dev/materials/src/gradient/gradientMaterial.ts ***!
  \***************************************************************/(e,t,i)=>{i.r(t),i.d(t,{GradientMaterial:()=>a});var r=i(/*! tslib */"../../../../node_modules/tslib/tslib.es6.mjs"),n=i(/*! babylonjs/Materials/clipPlaneMaterialHelper */"babylonjs/Materials/effect"),o=(i(/*! ./gradient.fragment */"../../../dev/materials/src/gradient/gradient.fragment.ts"),i(/*! ./gradient.vertex */"../../../dev/materials/src/gradient/gradient.vertex.ts"),function(e){function t(){var t=e.call(this)||this;return t.EMISSIVE=!1,t.CLIPPLANE=!1,t.CLIPPLANE2=!1,t.CLIPPLANE3=!1,t.CLIPPLANE4=!1,t.CLIPPLANE5=!1,t.CLIPPLANE6=!1,t.ALPHATEST=!1,t.DEPTHPREPASS=!1,t.POINTSIZE=!1,t.FOG=!1,t.NORMAL=!1,t.UV1=!1,t.UV2=!1,t.VERTEXCOLOR=!1,t.VERTEXALPHA=!1,t.NUM_BONE_INFLUENCERS=0,t.BonesPerMesh=0,t.INSTANCES=!1,t.INSTANCESCOLOR=!1,t.IMAGEPROCESSINGPOSTPROCESS=!1,t.SKIPFINALCOLORCLAMP=!1,t.LOGARITHMICDEPTH=!1,t.rebuild(),t}return(0,r.__extends)(t,e),t}(n.MaterialDefines)),a=function(e){function t(t,i){var r=e.call(this,t,i)||this;return r._maxSimultaneousLights=4,r.topColor=new n.Color3(1,0,0),r.topColorAlpha=1,r.bottomColor=new n.Color3(0,0,1),r.bottomColorAlpha=1,r.offset=0,r.scale=1,r.smoothness=1,r._disableLighting=!1,r}return(0,r.__extends)(t,e),t.prototype.needAlphaBlending=function(){return this.alpha<1||this.topColorAlpha<1||this.bottomColorAlpha<1},t.prototype.needAlphaTesting=function(){return!0},t.prototype.getAlphaTestTexture=function(){return null},t.prototype.isReadyForSubMesh=function(e,t,i){var r=t._drawWrapper;if(this.isFrozen&&r.effect&&r._wasPreviouslyReady&&r._wasPreviouslyUsingInstances===i)return!0;t.materialDefines||(t.materialDefines=new o);var a=t.materialDefines,s=this.getScene();if(this._isReadyForSubMesh(t))return!0;var l=s.getEngine();if(n.MaterialHelper.PrepareDefinesForFrameBoundValues(s,l,this,a,!!i),n.MaterialHelper.PrepareDefinesForMisc(e,s,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this._shouldTurnAlphaTestOn(e),a),a._needNormals=n.MaterialHelper.PrepareDefinesForLights(s,e,a,!1,this._maxSimultaneousLights,this._disableLighting),a.EMISSIVE=this._disableLighting,n.MaterialHelper.PrepareDefinesForAttributes(e,a,!1,!0),a.isDirty){a.markAsProcessed(),s.resetCachedMaterial();var f=new n.EffectFallbacks;a.FOG&&f.addFallback(1,"FOG"),n.MaterialHelper.HandleFallbacksForShadows(a,f),a.NUM_BONE_INFLUENCERS>0&&f.addCPUSkinningFallback(0,e),a.IMAGEPROCESSINGPOSTPROCESS=s.imageProcessingConfiguration.applyByPostProcess;var u=[n.VertexBuffer.PositionKind];a.NORMAL&&u.push(n.VertexBuffer.NormalKind),a.UV1&&u.push(n.VertexBuffer.UVKind),a.UV2&&u.push(n.VertexBuffer.UV2Kind),a.VERTEXCOLOR&&u.push(n.VertexBuffer.ColorKind),n.MaterialHelper.PrepareAttributesForBones(u,e,a,f),n.MaterialHelper.PrepareAttributesForInstances(u,a);var d=a.toString(),c=["world","view","viewProjection","vEyePosition","vLightsType","vFogInfos","vFogColor","pointSize","mBones","logarithmicDepthConstant","topColor","bottomColor","offset","smoothness","scale"];(0,n.addClipPlaneUniforms)(c);var p=[],h=[];n.MaterialHelper.PrepareUniformsAndSamplersList({uniformsNames:c,uniformBuffersNames:h,samplers:p,defines:a,maxSimultaneousLights:4}),t.setEffect(s.getEngine().createEffect("gradient",{attributes:u,uniformsNames:c,uniformBuffersNames:h,samplers:p,defines:d,fallbacks:f,onCompiled:this.onCompiled,onError:this.onError,indexParameters:{maxSimultaneousLights:4}},l),a,this._materialContext)}return!(!t.effect||!t.effect.isReady())&&(a._renderId=s.getRenderId(),r._wasPreviouslyReady=!0,r._wasPreviouslyUsingInstances=!!i,!0)},t.prototype.bindForSubMesh=function(e,t,i){var r=this.getScene(),o=i.materialDefines;if(o){var a=i.effect;a&&(this._activeEffect=a,this.bindOnlyWorldMatrix(e),this._activeEffect.setMatrix("viewProjection",r.getTransformMatrix()),n.MaterialHelper.BindBonesParameters(t,a),this._mustRebind(r,a,i)&&((0,n.bindClipPlane)(a,this,r),this.pointsCloud&&this._activeEffect.setFloat("pointSize",this.pointSize),this._useLogarithmicDepth&&n.MaterialHelper.BindLogDepth(o,a,r),r.bindEyePosition(a)),r.lightsEnabled&&!this.disableLighting&&n.MaterialHelper.BindLights(r,t,this._activeEffect,o,this.maxSimultaneousLights),r.fogEnabled&&t.applyFog&&r.fogMode!==n.Scene.FOGMODE_NONE&&this._activeEffect.setMatrix("view",r.getViewMatrix()),n.MaterialHelper.BindFogParameters(r,t,this._activeEffect),this._activeEffect.setColor4("topColor",this.topColor,this.topColorAlpha),this._activeEffect.setColor4("bottomColor",this.bottomColor,this.bottomColorAlpha),this._activeEffect.setFloat("offset",this.offset),this._activeEffect.setFloat("scale",this.scale),this._activeEffect.setFloat("smoothness",this.smoothness),this._afterBind(t,this._activeEffect,i))}},t.prototype.getAnimatables=function(){return[]},t.prototype.dispose=function(t){e.prototype.dispose.call(this,t)},t.prototype.clone=function(e){var i=this;return n.SerializationHelper.Clone((function(){return new t(e,i.getScene())}),this)},t.prototype.serialize=function(){var t=e.prototype.serialize.call(this);return t.customType="BABYLON.GradientMaterial",t},t.prototype.getClassName=function(){return"GradientMaterial"},t.Parse=function(e,i,r){return n.SerializationHelper.Parse((function(){return new t(e.name,i)}),e,i,r)},(0,r.__decorate)([(0,n.serialize)("maxSimultaneousLights")],t.prototype,"_maxSimultaneousLights",void 0),(0,r.__decorate)([(0,n.expandToProperty)("_markAllSubMeshesAsLightsDirty")],t.prototype,"maxSimultaneousLights",void 0),(0,r.__decorate)([(0,n.serializeAsColor3)()],t.prototype,"topColor",void 0),(0,r.__decorate)([(0,n.serialize)()],t.prototype,"topColorAlpha",void 0),(0,r.__decorate)([(0,n.serializeAsColor3)()],t.prototype,"bottomColor",void 0),(0,r.__decorate)([(0,n.serialize)()],t.prototype,"bottomColorAlpha",void 0),(0,r.__decorate)([(0,n.serialize)()],t.prototype,"offset",void 0),(0,r.__decorate)([(0,n.serialize)()],t.prototype,"scale",void 0),(0,r.__decorate)([(0,n.serialize)()],t.prototype,"smoothness",void 0),(0,r.__decorate)([(0,n.serialize)("disableLighting")],t.prototype,"_disableLighting",void 0),(0,r.__decorate)([(0,n.expandToProperty)("_markAllSubMeshesAsLightsDirty")],t.prototype,"disableLighting",void 0),t}(n.PushMaterial);(0,n.RegisterClass)("BABYLON.GradientMaterial",a)},"../../../dev/materials/src/gradient/index.ts":
/*!****************************************************!*\
  !*** ../../../dev/materials/src/gradient/index.ts ***!
  \****************************************************/(e,t,i)=>{i.r(t),i.d(t,{GradientMaterial:()=>r.GradientMaterial});var r=i(/*! ./gradientMaterial */"../../../dev/materials/src/gradient/gradientMaterial.ts")},"../../../dev/materials/src/grid/grid.fragment.ts":
/*!********************************************************!*\
  !*** ../../../dev/materials/src/grid/grid.fragment.ts ***!
  \********************************************************/(e,t,i)=>{i.r(t),i.d(t,{gridPixelShader:()=>a});var r=i(/*! babylonjs/Shaders/ShadersInclude/imageProcessingCompatibility */"babylonjs/Materials/effect"),n="gridPixelShader",o="#extension GL_OES_standard_derivatives : enable\n#define SQRT2 1.41421356\n#define PI 3.14159\nprecision highp float;uniform float visibility;uniform vec3 mainColor;uniform vec3 lineColor;uniform vec4 gridControl;uniform vec3 gridOffset;varying vec3 vPosition;varying vec3 vNormal;\n#ifdef LOGARITHMICDEPTH\n#extension GL_EXT_frag_depth : enable\n#endif\n#include<logDepthDeclaration>\n#include<fogFragmentDeclaration>\n#ifdef OPACITY\nvarying vec2 vOpacityUV;uniform sampler2D opacitySampler;uniform vec2 vOpacityInfos;\n#endif\nfloat getDynamicVisibility(float position) {float majorGridFrequency=gridControl.y;if (floor(position+0.5)==floor(position/majorGridFrequency+0.5)*majorGridFrequency)\n{return 1.0;}\nreturn gridControl.z;}\nfloat getAnisotropicAttenuation(float differentialLength) {const float maxNumberOfLines=10.0;return clamp(1.0/(differentialLength+1.0)-1.0/maxNumberOfLines,0.0,1.0);}\nfloat isPointOnLine(float position,float differentialLength) {float fractionPartOfPosition=position-floor(position+0.5); \nfractionPartOfPosition/=differentialLength; \n#ifdef ANTIALIAS\nfractionPartOfPosition=clamp(fractionPartOfPosition,-1.,1.);float result=0.5+0.5*cos(fractionPartOfPosition*PI); \nreturn result;\n#else\nreturn abs(fractionPartOfPosition)<SQRT2/4. ? 1. : 0.;\n#endif\n}\nfloat contributionOnAxis(float position) {float differentialLength=length(vec2(dFdx(position),dFdy(position)));differentialLength*=SQRT2; \nfloat result=isPointOnLine(position,differentialLength);float dynamicVisibility=getDynamicVisibility(position);result*=dynamicVisibility;float anisotropicAttenuation=getAnisotropicAttenuation(differentialLength);result*=anisotropicAttenuation;return result;}\nfloat normalImpactOnAxis(float x) {float normalImpact=clamp(1.0-3.0*abs(x*x*x),0.0,1.0);return normalImpact;}\n#define CUSTOM_FRAGMENT_DEFINITIONS\nvoid main(void) {\n#define CUSTOM_FRAGMENT_MAIN_BEGIN\nfloat gridRatio=gridControl.x;vec3 gridPos=(vPosition+gridOffset.xyz)/gridRatio;float x=contributionOnAxis(gridPos.x);float y=contributionOnAxis(gridPos.y);float z=contributionOnAxis(gridPos.z);vec3 normal=normalize(vNormal);x*=normalImpactOnAxis(normal.x);y*=normalImpactOnAxis(normal.y);z*=normalImpactOnAxis(normal.z);\n#ifdef MAX_LINE\nfloat grid=clamp(max(max(x,y),z),0.,1.);\n#else\nfloat grid=clamp(x+y+z,0.,1.);\n#endif\nvec3 color=mix(mainColor,lineColor,grid);\n#ifdef FOG\n#include<fogFragment>\n#endif\nfloat opacity=1.0;\n#ifdef TRANSPARENT\nopacity=clamp(grid,0.08,gridControl.w*grid);\n#endif\n#ifdef OPACITY\nopacity*=texture2D(opacitySampler,vOpacityUV).a;\n#endif\ngl_FragColor=vec4(color.rgb,opacity*visibility);\n#ifdef TRANSPARENT\n#ifdef PREMULTIPLYALPHA\ngl_FragColor.rgb*=opacity;\n#endif\n#else\n#endif\n#include<logDepthFragment>\n#include<imageProcessingCompatibility>\n#define CUSTOM_FRAGMENT_MAIN_END\n}\n";r.ShaderStore.ShadersStore[n]=o;var a={name:n,shader:o}},"../../../dev/materials/src/grid/grid.vertex.ts":
/*!******************************************************!*\
  !*** ../../../dev/materials/src/grid/grid.vertex.ts ***!
  \******************************************************/(e,t,i)=>{i.r(t),i.d(t,{gridVertexShader:()=>a});var r=i(/*! babylonjs/Shaders/ShadersInclude/logDepthVertex */"babylonjs/Materials/effect"),n="gridVertexShader",o="precision highp float;attribute vec3 position;attribute vec3 normal;\n#ifdef UV1\nattribute vec2 uv;\n#endif\n#ifdef UV2\nattribute vec2 uv2;\n#endif\n#include<instancesDeclaration>\nuniform mat4 projection;uniform mat4 view;varying vec3 vPosition;varying vec3 vNormal;\n#include<logDepthDeclaration>\n#include<fogVertexDeclaration>\n#ifdef OPACITY\nvarying vec2 vOpacityUV;uniform mat4 opacityMatrix;uniform vec2 vOpacityInfos;\n#endif\n#define CUSTOM_VERTEX_DEFINITIONS\nvoid main(void) {\n#define CUSTOM_VERTEX_MAIN_BEGIN\n#include<instancesVertex>\nvec4 worldPos=finalWorld*vec4(position,1.0);\n#include<fogVertex>\nvec4 cameraSpacePosition=view*worldPos;gl_Position=projection*cameraSpacePosition;\n#ifdef OPACITY\n#ifndef UV1\nvec2 uv=vec2(0.,0.);\n#endif\n#ifndef UV2\nvec2 uv2=vec2(0.,0.);\n#endif\nif (vOpacityInfos.x==0.)\n{vOpacityUV=vec2(opacityMatrix*vec4(uv,1.0,0.0));}\nelse\n{vOpacityUV=vec2(opacityMatrix*vec4(uv2,1.0,0.0));}\n#endif \n#include<logDepthVertex>\nvPosition=position;vNormal=normal;\n#define CUSTOM_VERTEX_MAIN_END\n}";r.ShaderStore.ShadersStore[n]=o;var a={name:n,shader:o}},"../../../dev/materials/src/grid/gridMaterial.ts":
/*!*******************************************************!*\
  !*** ../../../dev/materials/src/grid/gridMaterial.ts ***!
  \*******************************************************/(e,t,i)=>{i.r(t),i.d(t,{GridMaterial:()=>a});var r=i(/*! tslib */"../../../../node_modules/tslib/tslib.es6.mjs"),n=i(/*! babylonjs/Misc/typeStore */"babylonjs/Materials/effect"),o=(i(/*! ./grid.fragment */"../../../dev/materials/src/grid/grid.fragment.ts"),i(/*! ./grid.vertex */"../../../dev/materials/src/grid/grid.vertex.ts"),function(e){function t(){var t=e.call(this)||this;return t.OPACITY=!1,t.ANTIALIAS=!1,t.TRANSPARENT=!1,t.FOG=!1,t.PREMULTIPLYALPHA=!1,t.MAX_LINE=!1,t.UV1=!1,t.UV2=!1,t.INSTANCES=!1,t.THIN_INSTANCES=!1,t.IMAGEPROCESSINGPOSTPROCESS=!1,t.SKIPFINALCOLORCLAMP=!1,t.LOGARITHMICDEPTH=!1,t.rebuild(),t}return(0,r.__extends)(t,e),t}(n.MaterialDefines)),a=function(e){function t(t,i){var r=e.call(this,t,i)||this;return r.mainColor=n.Color3.Black(),r.lineColor=n.Color3.Teal(),r.gridRatio=1,r.gridOffset=n.Vector3.Zero(),r.majorUnitFrequency=10,r.minorUnitVisibility=.33,r.opacity=1,r.antialias=!0,r.preMultiplyAlpha=!1,r.useMaxLine=!1,r._gridControl=new n.Vector4(r.gridRatio,r.majorUnitFrequency,r.minorUnitVisibility,r.opacity),r}return(0,r.__extends)(t,e),t.prototype.needAlphaBlending=function(){return this.opacity<1||this._opacityTexture&&this._opacityTexture.isReady()},t.prototype.needAlphaBlendingForMesh=function(e){return e.visibility<1||this.needAlphaBlending()},t.prototype.isReadyForSubMesh=function(e,t,i){var r=t._drawWrapper;if(this.isFrozen&&r.effect&&r._wasPreviouslyReady&&r._wasPreviouslyUsingInstances===i)return!0;t.materialDefines||(t.materialDefines=new o);var a=t.materialDefines,s=this.getScene();if(this._isReadyForSubMesh(t))return!0;if(a.TRANSPARENT!==this.opacity<1&&(a.TRANSPARENT=!a.TRANSPARENT,a.markAsUnprocessed()),a.PREMULTIPLYALPHA!=this.preMultiplyAlpha&&(a.PREMULTIPLYALPHA=!a.PREMULTIPLYALPHA,a.markAsUnprocessed()),a.MAX_LINE!==this.useMaxLine&&(a.MAX_LINE=!a.MAX_LINE,a.markAsUnprocessed()),a.ANTIALIAS!==this.antialias&&(a.ANTIALIAS=!a.ANTIALIAS,a.markAsUnprocessed()),a._areTexturesDirty&&(a._needUVs=!1,s.texturesEnabled&&this._opacityTexture&&n.MaterialFlags.OpacityTextureEnabled)){if(!this._opacityTexture.isReady())return!1;a._needUVs=!0,a.OPACITY=!0}if(n.MaterialHelper.PrepareDefinesForMisc(e,s,this._useLogarithmicDepth,!1,this.fogEnabled,!1,a),n.MaterialHelper.PrepareDefinesForFrameBoundValues(s,s.getEngine(),this,a,!!i),a.isDirty){a.markAsProcessed(),s.resetCachedMaterial(),n.MaterialHelper.PrepareDefinesForAttributes(e,a,!1,!1);var l=[n.VertexBuffer.PositionKind,n.VertexBuffer.NormalKind];a.UV1&&l.push(n.VertexBuffer.UVKind),a.UV2&&l.push(n.VertexBuffer.UV2Kind),a.IMAGEPROCESSINGPOSTPROCESS=s.imageProcessingConfiguration.applyByPostProcess,n.MaterialHelper.PrepareAttributesForInstances(l,a);var f=a.toString();t.setEffect(s.getEngine().createEffect("grid",l,["projection","mainColor","lineColor","gridControl","gridOffset","vFogInfos","vFogColor","world","view","opacityMatrix","vOpacityInfos","visibility","logarithmicDepthConstant"],["opacitySampler"],f,void 0,this.onCompiled,this.onError),a,this._materialContext)}return!(!t.effect||!t.effect.isReady())&&(a._renderId=s.getRenderId(),r._wasPreviouslyReady=!0,r._wasPreviouslyUsingInstances=!!i,!0)},t.prototype.bindForSubMesh=function(e,t,i){var r=this.getScene(),o=i.materialDefines;if(o){var a=i.effect;a&&(this._activeEffect=a,this._activeEffect.setFloat("visibility",t.visibility),o.INSTANCES&&!o.THIN_INSTANCE||this.bindOnlyWorldMatrix(e),this._activeEffect.setMatrix("view",r.getViewMatrix()),this._activeEffect.setMatrix("projection",r.getProjectionMatrix()),this._mustRebind(r,a,i)&&(this._activeEffect.setColor3("mainColor",this.mainColor),this._activeEffect.setColor3("lineColor",this.lineColor),this._activeEffect.setVector3("gridOffset",this.gridOffset),this._gridControl.x=this.gridRatio,this._gridControl.y=Math.round(this.majorUnitFrequency),this._gridControl.z=this.minorUnitVisibility,this._gridControl.w=this.opacity,this._activeEffect.setVector4("gridControl",this._gridControl),this._opacityTexture&&n.MaterialFlags.OpacityTextureEnabled&&(this._activeEffect.setTexture("opacitySampler",this._opacityTexture),this._activeEffect.setFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),this._activeEffect.setMatrix("opacityMatrix",this._opacityTexture.getTextureMatrix())),this._useLogarithmicDepth&&n.MaterialHelper.BindLogDepth(o,a,r)),n.MaterialHelper.BindFogParameters(r,t,this._activeEffect),this._afterBind(t,this._activeEffect,i))}},t.prototype.dispose=function(t){e.prototype.dispose.call(this,t)},t.prototype.clone=function(e){var i=this;return n.SerializationHelper.Clone((function(){return new t(e,i.getScene())}),this)},t.prototype.serialize=function(){var t=e.prototype.serialize.call(this);return t.customType="BABYLON.GridMaterial",t},t.prototype.getClassName=function(){return"GridMaterial"},t.Parse=function(e,i,r){return n.SerializationHelper.Parse((function(){return new t(e.name,i)}),e,i,r)},(0,r.__decorate)([(0,n.serializeAsColor3)()],t.prototype,"mainColor",void 0),(0,r.__decorate)([(0,n.serializeAsColor3)()],t.prototype,"lineColor",void 0),(0,r.__decorate)([(0,n.serialize)()],t.prototype,"gridRatio",void 0),(0,r.__decorate)([(0,n.serializeAsVector3)()],t.prototype,"gridOffset",void 0),(0,r.__decorate)([(0,n.serialize)()],t.prototype,"majorUnitFrequency",void 0),(0,r.__decorate)([(0,n.serialize)()],t.prototype,"minorUnitVisibility",void 0),(0,r.__decorate)([(0,n.serialize)()],t.prototype,"opacity",void 0),(0,r.__decorate)([(0,n.serialize)()],t.prototype,"antialias",void 0),(0,r.__decorate)([(0,n.serialize)()],t.prototype,"preMultiplyAlpha",void 0),(0,r.__decorate)([(0,n.serialize)()],t.prototype,"useMaxLine",void 0),(0,r.__decorate)([(0,n.serializeAsTexture)("opacityTexture")],t.prototype,"_opacityTexture",void 0),(0,r.__decorate)([(0,n.expandToProperty)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"opacityTexture",void 0),t}(n.PushMaterial);(0,n.RegisterClass)("BABYLON.GridMaterial",a)},"../../../dev/materials/src/grid/index.ts":
/*!************************************************!*\
  !*** ../../../dev/materials/src/grid/index.ts ***!
  \************************************************/(e,t,i)=>{i.r(t),i.d(t,{GridMaterial:()=>r.GridMaterial});var r=i(/*! ./gridMaterial */"../../../dev/materials/src/grid/gridMaterial.ts")},"../../../dev/materials/src/index.ts":
/*!*******************************************!*\
  !*** ../../../dev/materials/src/index.ts ***!
  \*******************************************/(e,t,i)=>{i.r(t),i.d(t,{CellMaterial:()=>r.CellMaterial,CustomMaterial:()=>n.CustomMaterial,CustomShaderStructure:()=>n.CustomShaderStructure,FireMaterial:()=>o.FireMaterial,FurMaterial:()=>a.FurMaterial,GradientMaterial:()=>s.GradientMaterial,GridMaterial:()=>l.GridMaterial,LavaMaterial:()=>f.LavaMaterial,MixMaterial:()=>u.MixMaterial,NormalMaterial:()=>d.NormalMaterial,PBRCustomMaterial:()=>n.PBRCustomMaterial,ShaderAlbedoParts:()=>n.ShaderAlbedoParts,ShaderAlebdoParts:()=>n.ShaderAlebdoParts,ShaderSpecialParts:()=>n.ShaderSpecialParts,ShadowOnlyMaterial:()=>c.ShadowOnlyMaterial,SimpleMaterial:()=>p.SimpleMaterial,SkyMaterial:()=>h.SkyMaterial,TerrainMaterial:()=>m.TerrainMaterial,TriPlanarMaterial:()=>v.TriPlanarMaterial,WaterMaterial:()=>_.WaterMaterial});var r=i(/*! ./cell/index */"../../../dev/materials/src/cell/index.ts"),n=i(/*! ./custom/index */"../../../dev/materials/src/custom/index.ts"),o=i(/*! ./fire/index */"../../../dev/materials/src/fire/index.ts"),a=i(/*! ./fur/index */"../../../dev/materials/src/fur/index.ts"),s=i(/*! ./gradient/index */"../../../dev/materials/src/gradient/index.ts"),l=i(/*! ./grid/index */"../../../dev/materials/src/grid/index.ts"),f=i(/*! ./lava/index */"../../../dev/materials/src/lava/index.ts"),u=i(/*! ./mix/index */"../../../dev/materials/src/mix/index.ts"),d=i(/*! ./normal/index */"../../../dev/materials/src/normal/index.ts"),c=i(/*! ./shadowOnly/index */"../../../dev/materials/src/shadowOnly/index.ts"),p=i(/*! ./simple/index */"../../../dev/materials/src/simple/index.ts"),h=i(/*! ./sky/index */"../../../dev/materials/src/sky/index.ts"),m=i(/*! ./terrain/index */"../../../dev/materials/src/terrain/index.ts"),v=i(/*! ./triPlanar/index */"../../../dev/materials/src/triPlanar/index.ts"),_=i(/*! ./water/index */"../../../dev/materials/src/water/index.ts")},"../../../dev/materials/src/lava/index.ts":
/*!************************************************!*\
  !*** ../../../dev/materials/src/lava/index.ts ***!
  \************************************************/(e,t,i)=>{i.r(t),i.d(t,{LavaMaterial:()=>r.LavaMaterial});var r=i(/*! ./lavaMaterial */"../../../dev/materials/src/lava/lavaMaterial.ts")},"../../../dev/materials/src/lava/lava.fragment.ts":
/*!********************************************************!*\
  !*** ../../../dev/materials/src/lava/lava.fragment.ts ***!
  \********************************************************/(e,t,i)=>{i.r(t),i.d(t,{lavaPixelShader:()=>a});var r=i(/*! babylonjs/Shaders/ShadersInclude/imageProcessingCompatibility */"babylonjs/Materials/effect"),n="lavaPixelShader",o="precision highp float;uniform vec4 vEyePosition;uniform vec4 vDiffuseColor;varying vec3 vPositionW;uniform float time;uniform float speed;uniform float movingSpeed;uniform vec3 fogColor;uniform sampler2D noiseTexture;uniform float fogDensity;varying float noise;\n#ifdef NORMAL\nvarying vec3 vNormalW;\n#endif\n#ifdef VERTEXCOLOR\nvarying vec4 vColor;\n#endif\n#include<helperFunctions>\n#include<__decl__lightFragment>[0]\n#include<__decl__lightFragment>[1]\n#include<__decl__lightFragment>[2]\n#include<__decl__lightFragment>[3]\n#include<lightsFragmentFunctions>\n#include<shadowsFragmentFunctions>\n#ifdef DIFFUSE\nvarying vec2 vDiffuseUV;uniform sampler2D diffuseSampler;uniform vec2 vDiffuseInfos;\n#endif\n#include<clipPlaneFragmentDeclaration>\n#ifdef LOGARITHMICDEPTH\n#extension GL_EXT_frag_depth : enable\n#endif\n#include<logDepthDeclaration>\n#include<fogFragmentDeclaration>\nfloat random( vec3 scale,float seed ){return fract( sin( dot( gl_FragCoord.xyz+seed,scale ) )*43758.5453+seed ) ;}\n#define CUSTOM_FRAGMENT_DEFINITIONS\nvoid main(void) {\n#define CUSTOM_FRAGMENT_MAIN_BEGIN\n#include<clipPlaneFragment>\nvec3 viewDirectionW=normalize(vEyePosition.xyz-vPositionW);vec4 baseColor=vec4(1.,1.,1.,1.);vec3 diffuseColor=vDiffuseColor.rgb;float alpha=vDiffuseColor.a;\n#ifdef DIFFUSE\nvec4 noiseTex=texture2D( noiseTexture,vDiffuseUV );vec2 T1=vDiffuseUV+vec2( 1.5,-1.5 )*time *0.02;vec2 T2=vDiffuseUV+vec2( -0.5,2.0 )*time*0.01*speed;T1.x+=noiseTex.x*2.0;T1.y+=noiseTex.y*2.0;T2.x-=noiseTex.y*0.2+time*0.001*movingSpeed;T2.y+=noiseTex.z*0.2+time*0.002*movingSpeed;float p=texture2D( noiseTexture,T1*3.0 ).a;vec4 lavaColor=texture2D( diffuseSampler,T2*4.0);vec4 temp=lavaColor*( vec4( p,p,p,p )*2. )+( lavaColor*lavaColor-0.1 );baseColor=temp;float depth=gl_FragCoord.z*4.0;const float LOG2=1.442695;float fogFactor=exp2(-fogDensity*fogDensity*depth*depth*LOG2 );fogFactor=1.0-clamp( fogFactor,0.0,1.0 );baseColor=mix( baseColor,vec4( fogColor,baseColor.w ),fogFactor );diffuseColor=baseColor.rgb;\n#ifdef ALPHATEST\nif (baseColor.a<0.4)\ndiscard;\n#endif\n#include<depthPrePass>\nbaseColor.rgb*=vDiffuseInfos.y;\n#endif\n#ifdef VERTEXCOLOR\nbaseColor.rgb*=vColor.rgb;\n#endif\n#ifdef NORMAL\nvec3 normalW=normalize(vNormalW);\n#else\nvec3 normalW=vec3(1.0,1.0,1.0);\n#endif\n#ifdef UNLIT\nvec3 diffuseBase=vec3(1.,1.,1.);\n#else\nvec3 diffuseBase=vec3(0.,0.,0.);lightingInfo info;float shadow=1.;float glossiness=0.;float aggShadow=0.;float numLights=0.;\n#include<lightFragment>[0]\n#include<lightFragment>[1]\n#include<lightFragment>[2]\n#include<lightFragment>[3]\n#endif\n#if defined(VERTEXALPHA) || defined(INSTANCESCOLOR) && defined(INSTANCES)\nalpha*=vColor.a;\n#endif\nvec3 finalDiffuse=clamp(diffuseBase*diffuseColor,0.0,1.0)*baseColor.rgb;vec4 color=vec4(finalDiffuse,alpha);\n#include<logDepthFragment>\n#include<fogFragment>\ngl_FragColor=color;\n#include<imageProcessingCompatibility>\n#define CUSTOM_FRAGMENT_MAIN_END\n}";r.ShaderStore.ShadersStore[n]=o;var a={name:n,shader:o}},"../../../dev/materials/src/lava/lava.vertex.ts":
/*!******************************************************!*\
  !*** ../../../dev/materials/src/lava/lava.vertex.ts ***!
  \******************************************************/(e,t,i)=>{i.r(t),i.d(t,{lavaVertexShader:()=>a});var r=i(/*! babylonjs/Shaders/ShadersInclude/logDepthVertex */"babylonjs/Materials/effect"),n="lavaVertexShader",o="precision highp float;uniform float time;uniform float lowFrequencySpeed;varying float noise;attribute vec3 position;\n#ifdef NORMAL\nattribute vec3 normal;\n#endif\n#ifdef UV1\nattribute vec2 uv;\n#endif\n#ifdef UV2\nattribute vec2 uv2;\n#endif\n#ifdef VERTEXCOLOR\nattribute vec4 color;\n#endif\n#include<bonesDeclaration>\n#include<bakedVertexAnimationDeclaration>\n#include<instancesDeclaration>\nuniform mat4 view;uniform mat4 viewProjection;\n#ifdef DIFFUSE\nvarying vec2 vDiffuseUV;uniform mat4 diffuseMatrix;uniform vec2 vDiffuseInfos;\n#endif\n#ifdef POINTSIZE\nuniform float pointSize;\n#endif\nvarying vec3 vPositionW;\n#ifdef NORMAL\nvarying vec3 vNormalW;\n#endif\n#ifdef VERTEXCOLOR\nvarying vec4 vColor;\n#endif\n#include<clipPlaneVertexDeclaration>\n#include<logDepthDeclaration>\n#include<fogVertexDeclaration>\n#include<__decl__lightFragment>[0..maxSimultaneousLights]\n/* NOISE FUNCTIONS */\nvec3 mod289(vec3 x)\n{return x-floor(x*(1.0/289.0))*289.0;}\nvec4 mod289(vec4 x)\n{return x-floor(x*(1.0/289.0))*289.0;}\nvec4 permute(vec4 x)\n{return mod289(((x*34.0)+1.0)*x);}\nvec4 taylorInvSqrt(vec4 r)\n{return 1.79284291400159-0.85373472095314*r;}\nvec3 fade(vec3 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\nfloat pnoise(vec3 P,vec3 rep)\n{vec3 Pi0=mod(floor(P),rep); \nvec3 Pi1=mod(Pi0+vec3(1.0),rep); \nPi0=mod289(Pi0);Pi1=mod289(Pi1);vec3 Pf0=fract(P); \nvec3 Pf1=Pf0-vec3(1.0); \nvec4 ix=vec4(Pi0.x,Pi1.x,Pi0.x,Pi1.x);vec4 iy=vec4(Pi0.yy,Pi1.yy);vec4 iz0=Pi0.zzzz;vec4 iz1=Pi1.zzzz;vec4 ixy=permute(permute(ix)+iy);vec4 ixy0=permute(ixy+iz0);vec4 ixy1=permute(ixy+iz1);vec4 gx0=ixy0*(1.0/7.0);vec4 gy0=fract(floor(gx0)*(1.0/7.0))-0.5;gx0=fract(gx0);vec4 gz0=vec4(0.5)-abs(gx0)-abs(gy0);vec4 sz0=step(gz0,vec4(0.0));gx0-=sz0*(step(0.0,gx0)-0.5);gy0-=sz0*(step(0.0,gy0)-0.5);vec4 gx1=ixy1*(1.0/7.0);vec4 gy1=fract(floor(gx1)*(1.0/7.0))-0.5;gx1=fract(gx1);vec4 gz1=vec4(0.5)-abs(gx1)-abs(gy1);vec4 sz1=step(gz1,vec4(0.0));gx1-=sz1*(step(0.0,gx1)-0.5);gy1-=sz1*(step(0.0,gy1)-0.5);vec3 g000=vec3(gx0.x,gy0.x,gz0.x);vec3 g100=vec3(gx0.y,gy0.y,gz0.y);vec3 g010=vec3(gx0.z,gy0.z,gz0.z);vec3 g110=vec3(gx0.w,gy0.w,gz0.w);vec3 g001=vec3(gx1.x,gy1.x,gz1.x);vec3 g101=vec3(gx1.y,gy1.y,gz1.y);vec3 g011=vec3(gx1.z,gy1.z,gz1.z);vec3 g111=vec3(gx1.w,gy1.w,gz1.w);vec4 norm0=taylorInvSqrt(vec4(dot(g000,g000),dot(g010,g010),dot(g100,g100),dot(g110,g110)));g000*=norm0.x;g010*=norm0.y;g100*=norm0.z;g110*=norm0.w;vec4 norm1=taylorInvSqrt(vec4(dot(g001,g001),dot(g011,g011),dot(g101,g101),dot(g111,g111)));g001*=norm1.x;g011*=norm1.y;g101*=norm1.z;g111*=norm1.w;float n000=dot(g000,Pf0);float n100=dot(g100,vec3(Pf1.x,Pf0.yz));float n010=dot(g010,vec3(Pf0.x,Pf1.y,Pf0.z));float n110=dot(g110,vec3(Pf1.xy,Pf0.z));float n001=dot(g001,vec3(Pf0.xy,Pf1.z));float n101=dot(g101,vec3(Pf1.x,Pf0.y,Pf1.z));float n011=dot(g011,vec3(Pf0.x,Pf1.yz));float n111=dot(g111,Pf1);vec3 fade_xyz=fade(Pf0);vec4 n_z=mix(vec4(n000,n100,n010,n110),vec4(n001,n101,n011,n111),fade_xyz.z);vec2 n_yz=mix(n_z.xy,n_z.zw,fade_xyz.y);float n_xyz=mix(n_yz.x,n_yz.y,fade_xyz.x);return 2.2*n_xyz;}\n/* END FUNCTION */\nfloat turbulence( vec3 p ) {float w=100.0;float t=-.5;for (float f=1.0 ; f<=10.0 ; f++ ){float power=pow( 2.0,f );t+=abs( pnoise( vec3( power*p ),vec3( 10.0,10.0,10.0 ) )/power );}\nreturn t;}\n#define CUSTOM_VERTEX_DEFINITIONS\nvoid main(void) {\n#define CUSTOM_VERTEX_MAIN_BEGIN\n#include<instancesVertex>\n#include<bonesVertex>\n#include<bakedVertexAnimation>\n#ifdef NORMAL\nnoise=10.0* -.10*turbulence( .5*normal+time*1.15 );float b=lowFrequencySpeed*5.0*pnoise( 0.05*position +vec3(time*1.025),vec3( 100.0 ) );float displacement=- 1.5*noise+b;vec3 newPosition=position+normal*displacement;gl_Position=viewProjection*finalWorld*vec4( newPosition,1.0 );vec4 worldPos=finalWorld*vec4(newPosition,1.0);vPositionW=vec3(worldPos);vNormalW=normalize(vec3(finalWorld*vec4(normal,0.0)));\n#endif\n#ifndef UV1\nvec2 uv=vec2(0.,0.);\n#endif\n#ifndef UV2\nvec2 uv2=vec2(0.,0.);\n#endif\n#ifdef DIFFUSE\nif (vDiffuseInfos.x==0.)\n{vDiffuseUV=vec2(diffuseMatrix*vec4(uv,1.0,0.0));}\nelse\n{vDiffuseUV=vec2(diffuseMatrix*vec4(uv2,1.0,0.0));}\n#endif\n#include<clipPlaneVertex>\n#include<fogVertex>\n#include<shadowsVertex>[0..maxSimultaneousLights]\n#include<vertexColorMixing>\n#include<logDepthVertex>\n#if defined(POINTSIZE) && !defined(WEBGPU)\ngl_PointSize=pointSize;\n#endif\n#define CUSTOM_VERTEX_MAIN_END\n}";r.ShaderStore.ShadersStore[n]=o;var a={name:n,shader:o}},"../../../dev/materials/src/lava/lavaMaterial.ts":
/*!*******************************************************!*\
  !*** ../../../dev/materials/src/lava/lavaMaterial.ts ***!
  \*******************************************************/(e,t,i)=>{i.r(t),i.d(t,{LavaMaterial:()=>a});var r=i(/*! tslib */"../../../../node_modules/tslib/tslib.es6.mjs"),n=i(/*! babylonjs/Materials/clipPlaneMaterialHelper */"babylonjs/Materials/effect"),o=(i(/*! ./lava.fragment */"../../../dev/materials/src/lava/lava.fragment.ts"),i(/*! ./lava.vertex */"../../../dev/materials/src/lava/lava.vertex.ts"),function(e){function t(){var t=e.call(this)||this;return t.DIFFUSE=!1,t.CLIPPLANE=!1,t.CLIPPLANE2=!1,t.CLIPPLANE3=!1,t.CLIPPLANE4=!1,t.CLIPPLANE5=!1,t.CLIPPLANE6=!1,t.ALPHATEST=!1,t.DEPTHPREPASS=!1,t.POINTSIZE=!1,t.FOG=!1,t.LIGHT0=!1,t.LIGHT1=!1,t.LIGHT2=!1,t.LIGHT3=!1,t.SPOTLIGHT0=!1,t.SPOTLIGHT1=!1,t.SPOTLIGHT2=!1,t.SPOTLIGHT3=!1,t.HEMILIGHT0=!1,t.HEMILIGHT1=!1,t.HEMILIGHT2=!1,t.HEMILIGHT3=!1,t.DIRLIGHT0=!1,t.DIRLIGHT1=!1,t.DIRLIGHT2=!1,t.DIRLIGHT3=!1,t.POINTLIGHT0=!1,t.POINTLIGHT1=!1,t.POINTLIGHT2=!1,t.POINTLIGHT3=!1,t.SHADOW0=!1,t.SHADOW1=!1,t.SHADOW2=!1,t.SHADOW3=!1,t.SHADOWS=!1,t.SHADOWESM0=!1,t.SHADOWESM1=!1,t.SHADOWESM2=!1,t.SHADOWESM3=!1,t.SHADOWPOISSON0=!1,t.SHADOWPOISSON1=!1,t.SHADOWPOISSON2=!1,t.SHADOWPOISSON3=!1,t.SHADOWPCF0=!1,t.SHADOWPCF1=!1,t.SHADOWPCF2=!1,t.SHADOWPCF3=!1,t.SHADOWPCSS0=!1,t.SHADOWPCSS1=!1,t.SHADOWPCSS2=!1,t.SHADOWPCSS3=!1,t.NORMAL=!1,t.UV1=!1,t.UV2=!1,t.VERTEXCOLOR=!1,t.VERTEXALPHA=!1,t.NUM_BONE_INFLUENCERS=0,t.BonesPerMesh=0,t.INSTANCES=!1,t.INSTANCESCOLOR=!1,t.UNLIT=!1,t.IMAGEPROCESSINGPOSTPROCESS=!1,t.SKIPFINALCOLORCLAMP=!1,t.LOGARITHMICDEPTH=!1,t.rebuild(),t}return(0,r.__extends)(t,e),t}(n.MaterialDefines)),a=function(e){function t(t,i){var r=e.call(this,t,i)||this;return r.speed=1,r.movingSpeed=1,r.lowFrequencySpeed=1,r.fogDensity=.15,r._lastTime=0,r.diffuseColor=new n.Color3(1,1,1),r._disableLighting=!1,r._unlit=!1,r._maxSimultaneousLights=4,r._scaledDiffuse=new n.Color3,r}return(0,r.__extends)(t,e),t.prototype.needAlphaBlending=function(){return this.alpha<1},t.prototype.needAlphaTesting=function(){return!1},t.prototype.getAlphaTestTexture=function(){return null},t.prototype.isReadyForSubMesh=function(e,t,i){var r=t._drawWrapper;if(this.isFrozen&&r.effect&&r._wasPreviouslyReady&&r._wasPreviouslyUsingInstances===i)return!0;t.materialDefines||(t.materialDefines=new o);var a=t.materialDefines,s=this.getScene();if(this._isReadyForSubMesh(t))return!0;var l=s.getEngine();if(a._areTexturesDirty&&(a._needUVs=!1,s.texturesEnabled&&this._diffuseTexture&&n.MaterialFlags.DiffuseTextureEnabled)){if(!this._diffuseTexture.isReady())return!1;a._needUVs=!0,a.DIFFUSE=!0}if(n.MaterialHelper.PrepareDefinesForMisc(e,s,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this._shouldTurnAlphaTestOn(e),a),a._needNormals=!0,n.MaterialHelper.PrepareDefinesForLights(s,e,a,!1,this._maxSimultaneousLights,this._disableLighting),n.MaterialHelper.PrepareDefinesForFrameBoundValues(s,l,this,a,!!i),n.MaterialHelper.PrepareDefinesForAttributes(e,a,!0,!0),a.isDirty){a.markAsProcessed(),s.resetCachedMaterial();var f=new n.EffectFallbacks;a.FOG&&f.addFallback(1,"FOG"),n.MaterialHelper.HandleFallbacksForShadows(a,f),a.NUM_BONE_INFLUENCERS>0&&f.addCPUSkinningFallback(0,e),a.IMAGEPROCESSINGPOSTPROCESS=s.imageProcessingConfiguration.applyByPostProcess;var u=[n.VertexBuffer.PositionKind];a.NORMAL&&u.push(n.VertexBuffer.NormalKind),a.UV1&&u.push(n.VertexBuffer.UVKind),a.UV2&&u.push(n.VertexBuffer.UV2Kind),a.VERTEXCOLOR&&u.push(n.VertexBuffer.ColorKind),n.MaterialHelper.PrepareAttributesForBones(u,e,a,f),n.MaterialHelper.PrepareAttributesForInstances(u,a);var d=a.toString(),c=["world","view","viewProjection","vEyePosition","vLightsType","vDiffuseColor","vFogInfos","vFogColor","pointSize","vDiffuseInfos","mBones","diffuseMatrix","logarithmicDepthConstant","time","speed","movingSpeed","fogColor","fogDensity","lowFrequencySpeed"];(0,n.addClipPlaneUniforms)(c);var p=["diffuseSampler","noiseTexture"],h=[];n.MaterialHelper.PrepareUniformsAndSamplersList({uniformsNames:c,uniformBuffersNames:h,samplers:p,defines:a,maxSimultaneousLights:this.maxSimultaneousLights}),t.setEffect(s.getEngine().createEffect("lava",{attributes:u,uniformsNames:c,uniformBuffersNames:h,samplers:p,defines:d,fallbacks:f,onCompiled:this.onCompiled,onError:this.onError,indexParameters:{maxSimultaneousLights:this.maxSimultaneousLights}},l),a,this._materialContext)}return!(!t.effect||!t.effect.isReady())&&(a._renderId=s.getRenderId(),r._wasPreviouslyReady=!0,r._wasPreviouslyUsingInstances=!!i,!0)},t.prototype.bindForSubMesh=function(e,t,i){var r=this.getScene(),o=i.materialDefines;if(o){var a=i.effect;a&&(this._activeEffect=a,o.UNLIT=this._unlit,this.bindOnlyWorldMatrix(e),this._activeEffect.setMatrix("viewProjection",r.getTransformMatrix()),n.MaterialHelper.BindBonesParameters(t,this._activeEffect),this._mustRebind(r,a,i)&&(this.diffuseTexture&&n.MaterialFlags.DiffuseTextureEnabled&&(this._activeEffect.setTexture("diffuseSampler",this.diffuseTexture),this._activeEffect.setFloat2("vDiffuseInfos",this.diffuseTexture.coordinatesIndex,this.diffuseTexture.level),this._activeEffect.setMatrix("diffuseMatrix",this.diffuseTexture.getTextureMatrix())),this.noiseTexture&&this._activeEffect.setTexture("noiseTexture",this.noiseTexture),(0,n.bindClipPlane)(a,this,r),this.pointsCloud&&this._activeEffect.setFloat("pointSize",this.pointSize),this._useLogarithmicDepth&&n.MaterialHelper.BindLogDepth(o,a,r),r.bindEyePosition(a)),this._activeEffect.setColor4("vDiffuseColor",this._scaledDiffuse,this.alpha*t.visibility),r.lightsEnabled&&!this.disableLighting&&n.MaterialHelper.BindLights(r,t,this._activeEffect,o),r.fogEnabled&&t.applyFog&&r.fogMode!==n.Scene.FOGMODE_NONE&&this._activeEffect.setMatrix("view",r.getViewMatrix()),n.MaterialHelper.BindFogParameters(r,t,this._activeEffect),this._lastTime+=r.getEngine().getDeltaTime(),this._activeEffect.setFloat("time",this._lastTime*this.speed/1e3),this.fogColor||(this.fogColor=n.Color3.Black()),this._activeEffect.setColor3("fogColor",this.fogColor),this._activeEffect.setFloat("fogDensity",this.fogDensity),this._activeEffect.setFloat("lowFrequencySpeed",this.lowFrequencySpeed),this._activeEffect.setFloat("movingSpeed",this.movingSpeed),this._afterBind(t,this._activeEffect,i))}},t.prototype.getAnimatables=function(){var e=[];return this.diffuseTexture&&this.diffuseTexture.animations&&this.diffuseTexture.animations.length>0&&e.push(this.diffuseTexture),this.noiseTexture&&this.noiseTexture.animations&&this.noiseTexture.animations.length>0&&e.push(this.noiseTexture),e},t.prototype.getActiveTextures=function(){var t=e.prototype.getActiveTextures.call(this);return this._diffuseTexture&&t.push(this._diffuseTexture),t},t.prototype.hasTexture=function(t){return!!e.prototype.hasTexture.call(this,t)||this.diffuseTexture===t},t.prototype.dispose=function(t){this.diffuseTexture&&this.diffuseTexture.dispose(),this.noiseTexture&&this.noiseTexture.dispose(),e.prototype.dispose.call(this,t)},t.prototype.clone=function(e){var i=this;return n.SerializationHelper.Clone((function(){return new t(e,i.getScene())}),this)},t.prototype.serialize=function(){var t=e.prototype.serialize.call(this);return t.customType="BABYLON.LavaMaterial",t},t.prototype.getClassName=function(){return"LavaMaterial"},t.Parse=function(e,i,r){return n.SerializationHelper.Parse((function(){return new t(e.name,i)}),e,i,r)},(0,r.__decorate)([(0,n.serializeAsTexture)("diffuseTexture")],t.prototype,"_diffuseTexture",void 0),(0,r.__decorate)([(0,n.expandToProperty)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"diffuseTexture",void 0),(0,r.__decorate)([(0,n.serializeAsTexture)()],t.prototype,"noiseTexture",void 0),(0,r.__decorate)([(0,n.serializeAsColor3)()],t.prototype,"fogColor",void 0),(0,r.__decorate)([(0,n.serialize)()],t.prototype,"speed",void 0),(0,r.__decorate)([(0,n.serialize)()],t.prototype,"movingSpeed",void 0),(0,r.__decorate)([(0,n.serialize)()],t.prototype,"lowFrequencySpeed",void 0),(0,r.__decorate)([(0,n.serialize)()],t.prototype,"fogDensity",void 0),(0,r.__decorate)([(0,n.serializeAsColor3)()],t.prototype,"diffuseColor",void 0),(0,r.__decorate)([(0,n.serialize)("disableLighting")],t.prototype,"_disableLighting",void 0),(0,r.__decorate)([(0,n.expandToProperty)("_markAllSubMeshesAsLightsDirty")],t.prototype,"disableLighting",void 0),(0,r.__decorate)([(0,n.serialize)("unlit")],t.prototype,"_unlit",void 0),(0,r.__decorate)([(0,n.expandToProperty)("_markAllSubMeshesAsLightsDirty")],t.prototype,"unlit",void 0),(0,r.__decorate)([(0,n.serialize)("maxSimultaneousLights")],t.prototype,"_maxSimultaneousLights",void 0),(0,r.__decorate)([(0,n.expandToProperty)("_markAllSubMeshesAsLightsDirty")],t.prototype,"maxSimultaneousLights",void 0),t}(n.PushMaterial);(0,n.RegisterClass)("BABYLON.LavaMaterial",a)},"../../../dev/materials/src/mix/index.ts":
/*!***********************************************!*\
  !*** ../../../dev/materials/src/mix/index.ts ***!
  \***********************************************/(e,t,i)=>{i.r(t),i.d(t,{MixMaterial:()=>r.MixMaterial});var r=i(/*! ./mixMaterial */"../../../dev/materials/src/mix/mixMaterial.ts")},"../../../dev/materials/src/mix/mix.fragment.ts":
/*!******************************************************!*\
  !*** ../../../dev/materials/src/mix/mix.fragment.ts ***!
  \******************************************************/(e,t,i)=>{i.r(t),i.d(t,{mixPixelShader:()=>a});var r=i(/*! babylonjs/Shaders/ShadersInclude/imageProcessingCompatibility */"babylonjs/Materials/effect"),n="mixPixelShader",o="precision highp float;uniform vec4 vEyePosition;uniform vec4 vDiffuseColor;\n#ifdef SPECULARTERM\nuniform vec4 vSpecularColor;\n#endif\nvarying vec3 vPositionW;\n#ifdef NORMAL\nvarying vec3 vNormalW;\n#endif\n#ifdef VERTEXCOLOR\nvarying vec4 vColor;\n#endif\n#include<helperFunctions>\n#include<__decl__lightFragment>[0..maxSimultaneousLights]\n#ifdef DIFFUSE\nvarying vec2 vTextureUV;uniform sampler2D mixMap1Sampler;uniform vec2 vTextureInfos;\n#ifdef MIXMAP2\nuniform sampler2D mixMap2Sampler;\n#endif\nuniform sampler2D diffuse1Sampler;uniform sampler2D diffuse2Sampler;uniform sampler2D diffuse3Sampler;uniform sampler2D diffuse4Sampler;uniform vec2 diffuse1Infos;uniform vec2 diffuse2Infos;uniform vec2 diffuse3Infos;uniform vec2 diffuse4Infos;\n#ifdef MIXMAP2\nuniform sampler2D diffuse5Sampler;uniform sampler2D diffuse6Sampler;uniform sampler2D diffuse7Sampler;uniform sampler2D diffuse8Sampler;uniform vec2 diffuse5Infos;uniform vec2 diffuse6Infos;uniform vec2 diffuse7Infos;uniform vec2 diffuse8Infos;\n#endif\n#endif\n#include<lightsFragmentFunctions>\n#include<shadowsFragmentFunctions>\n#include<clipPlaneFragmentDeclaration>\n#ifdef LOGARITHMICDEPTH\n#extension GL_EXT_frag_depth : enable\n#endif\n#include<logDepthDeclaration>\n#include<fogFragmentDeclaration>\n#define CUSTOM_FRAGMENT_DEFINITIONS\nvoid main(void) {\n#define CUSTOM_FRAGMENT_MAIN_BEGIN\n#include<clipPlaneFragment>\nvec3 viewDirectionW=normalize(vEyePosition.xyz-vPositionW);vec4 finalMixColor=vec4(1.,1.,1.,1.);vec3 diffuseColor=vDiffuseColor.rgb;\n#ifdef MIXMAP2\nvec4 mixColor2=vec4(1.,1.,1.,1.);\n#endif\n#ifdef SPECULARTERM\nfloat glossiness=vSpecularColor.a;vec3 specularColor=vSpecularColor.rgb;\n#else\nfloat glossiness=0.;\n#endif\nfloat alpha=vDiffuseColor.a;\n#ifdef NORMAL\nvec3 normalW=normalize(vNormalW);\n#else\nvec3 normalW=vec3(1.0,1.0,1.0);\n#endif\n#ifdef DIFFUSE\nvec4 mixColor=texture2D(mixMap1Sampler,vTextureUV);\n#include<depthPrePass>\nmixColor.rgb*=vTextureInfos.y;vec4 diffuse1Color=texture2D(diffuse1Sampler,vTextureUV*diffuse1Infos);vec4 diffuse2Color=texture2D(diffuse2Sampler,vTextureUV*diffuse2Infos);vec4 diffuse3Color=texture2D(diffuse3Sampler,vTextureUV*diffuse3Infos);vec4 diffuse4Color=texture2D(diffuse4Sampler,vTextureUV*diffuse4Infos);diffuse1Color.rgb*=mixColor.r;diffuse2Color.rgb=mix(diffuse1Color.rgb,diffuse2Color.rgb,mixColor.g);diffuse3Color.rgb=mix(diffuse2Color.rgb,diffuse3Color.rgb,mixColor.b);finalMixColor.rgb=mix(diffuse3Color.rgb,diffuse4Color.rgb,1.0-mixColor.a);\n#ifdef MIXMAP2\nmixColor=texture2D(mixMap2Sampler,vTextureUV);mixColor.rgb*=vTextureInfos.y;vec4 diffuse5Color=texture2D(diffuse5Sampler,vTextureUV*diffuse5Infos);vec4 diffuse6Color=texture2D(diffuse6Sampler,vTextureUV*diffuse6Infos);vec4 diffuse7Color=texture2D(diffuse7Sampler,vTextureUV*diffuse7Infos);vec4 diffuse8Color=texture2D(diffuse8Sampler,vTextureUV*diffuse8Infos);diffuse5Color.rgb=mix(finalMixColor.rgb,diffuse5Color.rgb,mixColor.r);diffuse6Color.rgb=mix(diffuse5Color.rgb,diffuse6Color.rgb,mixColor.g);diffuse7Color.rgb=mix(diffuse6Color.rgb,diffuse7Color.rgb,mixColor.b);finalMixColor.rgb=mix(diffuse7Color.rgb,diffuse8Color.rgb,1.0-mixColor.a);\n#endif\n#endif\n#ifdef VERTEXCOLOR\nfinalMixColor.rgb*=vColor.rgb;\n#endif\nvec3 diffuseBase=vec3(0.,0.,0.);lightingInfo info;float shadow=1.;float aggShadow=0.;float numLights=0.;\n#ifdef SPECULARTERM\nvec3 specularBase=vec3(0.,0.,0.);\n#endif\n#include<lightFragment>[0..maxSimultaneousLights]\n#if defined(VERTEXALPHA) || defined(INSTANCESCOLOR) && defined(INSTANCES)\nalpha*=vColor.a;\n#endif\n#ifdef SPECULARTERM\nvec3 finalSpecular=specularBase*specularColor;\n#else\nvec3 finalSpecular=vec3(0.0);\n#endif\nvec3 finalDiffuse=clamp(diffuseBase*diffuseColor*finalMixColor.rgb,0.0,1.0);vec4 color=vec4(finalDiffuse+finalSpecular,alpha);\n#include<logDepthFragment>\n#include<fogFragment>\ngl_FragColor=color;\n#include<imageProcessingCompatibility>\n#define CUSTOM_FRAGMENT_MAIN_END\n}\n";r.ShaderStore.ShadersStore[n]=o;var a={name:n,shader:o}},"../../../dev/materials/src/mix/mix.vertex.ts":
/*!****************************************************!*\
  !*** ../../../dev/materials/src/mix/mix.vertex.ts ***!
  \****************************************************/(e,t,i)=>{i.r(t),i.d(t,{mixVertexShader:()=>a});var r=i(/*! babylonjs/Shaders/ShadersInclude/logDepthVertex */"babylonjs/Materials/effect"),n="mixVertexShader",o="precision highp float;attribute vec3 position;\n#ifdef NORMAL\nattribute vec3 normal;\n#endif\n#ifdef UV1\nattribute vec2 uv;\n#endif\n#ifdef UV2\nattribute vec2 uv2;\n#endif\n#ifdef VERTEXCOLOR\nattribute vec4 color;\n#endif\n#include<bonesDeclaration>\n#include<bakedVertexAnimationDeclaration>\n#include<instancesDeclaration>\nuniform mat4 view;uniform mat4 viewProjection;\n#ifdef DIFFUSE\nvarying vec2 vTextureUV;uniform mat4 textureMatrix;uniform vec2 vTextureInfos;\n#endif\n#ifdef POINTSIZE\nuniform float pointSize;\n#endif\nvarying vec3 vPositionW;\n#ifdef NORMAL\nvarying vec3 vNormalW;\n#endif\n#ifdef VERTEXCOLOR\nvarying vec4 vColor;\n#endif\n#include<clipPlaneVertexDeclaration>\n#include<logDepthDeclaration>\n#include<fogVertexDeclaration>\n#include<__decl__lightFragment>[0..maxSimultaneousLights]\n#define CUSTOM_VERTEX_DEFINITIONS\nvoid main(void) {\n#define CUSTOM_VERTEX_MAIN_BEGIN\n#include<instancesVertex>\n#include<bonesVertex>\n#include<bakedVertexAnimation>\nvec4 worldPos=finalWorld*vec4(position,1.0);gl_Position=viewProjection*worldPos;vPositionW=vec3(worldPos);\n#ifdef NORMAL\nvNormalW=normalize(vec3(finalWorld*vec4(normal,0.0)));\n#endif\n#ifndef UV1\nvec2 uv=vec2(0.,0.);\n#endif\n#ifndef UV2\nvec2 uv2=vec2(0.,0.);\n#endif\n#ifdef DIFFUSE\nif (vTextureInfos.x==0.)\n{vTextureUV=vec2(textureMatrix*vec4(uv,1.0,0.0));}\nelse\n{vTextureUV=vec2(textureMatrix*vec4(uv2,1.0,0.0));}\n#endif\n#include<clipPlaneVertex>\n#include<fogVertex>\n#include<shadowsVertex>[0..maxSimultaneousLights]\n#include<vertexColorMixing>\n#if defined(POINTSIZE) && !defined(WEBGPU)\ngl_PointSize=pointSize;\n#endif\n#include<logDepthVertex>\n#define CUSTOM_VERTEX_MAIN_END\n}\n";r.ShaderStore.ShadersStore[n]=o;var a={name:n,shader:o}},"../../../dev/materials/src/mix/mixMaterial.ts":
/*!*****************************************************!*\
  !*** ../../../dev/materials/src/mix/mixMaterial.ts ***!
  \*****************************************************/(e,t,i)=>{i.r(t),i.d(t,{MixMaterial:()=>a});var r=i(/*! tslib */"../../../../node_modules/tslib/tslib.es6.mjs"),n=i(/*! babylonjs/Materials/clipPlaneMaterialHelper */"babylonjs/Materials/effect"),o=(i(/*! ./mix.fragment */"../../../dev/materials/src/mix/mix.fragment.ts"),i(/*! ./mix.vertex */"../../../dev/materials/src/mix/mix.vertex.ts"),function(e){function t(){var t=e.call(this)||this;return t.DIFFUSE=!1,t.CLIPPLANE=!1,t.CLIPPLANE2=!1,t.CLIPPLANE3=!1,t.CLIPPLANE4=!1,t.CLIPPLANE5=!1,t.CLIPPLANE6=!1,t.ALPHATEST=!1,t.DEPTHPREPASS=!1,t.POINTSIZE=!1,t.FOG=!1,t.SPECULARTERM=!1,t.NORMAL=!1,t.UV1=!1,t.UV2=!1,t.VERTEXCOLOR=!1,t.VERTEXALPHA=!1,t.NUM_BONE_INFLUENCERS=0,t.BonesPerMesh=0,t.INSTANCES=!1,t.INSTANCESCOLOR=!1,t.MIXMAP2=!1,t.IMAGEPROCESSINGPOSTPROCESS=!1,t.SKIPFINALCOLORCLAMP=!1,t.LOGARITHMICDEPTH=!1,t.rebuild(),t}return(0,r.__extends)(t,e),t}(n.MaterialDefines)),a=function(e){function t(t,i){var r=e.call(this,t,i)||this;return r.diffuseColor=new n.Color3(1,1,1),r.specularColor=new n.Color3(0,0,0),r.specularPower=64,r._disableLighting=!1,r._maxSimultaneousLights=4,r}return(0,r.__extends)(t,e),t.prototype.needAlphaBlending=function(){return this.alpha<1},t.prototype.needAlphaTesting=function(){return!1},t.prototype.getAlphaTestTexture=function(){return null},t.prototype.isReadyForSubMesh=function(e,t,i){var r=t._drawWrapper;if(this.isFrozen&&r.effect&&r._wasPreviouslyReady&&r._wasPreviouslyUsingInstances===i)return!0;t.materialDefines||(t.materialDefines=new o);var a=t.materialDefines,s=this.getScene();if(this._isReadyForSubMesh(t))return!0;var l=s.getEngine();if(s.texturesEnabled){if(!this._mixTexture1||!this._mixTexture1.isReady())return!1;if(a._needUVs=!0,n.MaterialFlags.DiffuseTextureEnabled){if(!this._diffuseTexture1||!this._diffuseTexture1.isReady())return!1;if(a.DIFFUSE=!0,!this._diffuseTexture2||!this._diffuseTexture2.isReady())return!1;if(!this._diffuseTexture3||!this._diffuseTexture3.isReady())return!1;if(!this._diffuseTexture4||!this._diffuseTexture4.isReady())return!1;if(this._mixTexture2){if(!this._mixTexture2.isReady())return!1;if(a.MIXMAP2=!0,!this._diffuseTexture5||!this._diffuseTexture5.isReady())return!1;if(!this._diffuseTexture6||!this._diffuseTexture6.isReady())return!1;if(!this._diffuseTexture7||!this._diffuseTexture7.isReady())return!1;if(!this._diffuseTexture8||!this._diffuseTexture8.isReady())return!1}}}if(n.MaterialHelper.PrepareDefinesForMisc(e,s,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this._shouldTurnAlphaTestOn(e),a),a._needNormals=n.MaterialHelper.PrepareDefinesForLights(s,e,a,!1,this._maxSimultaneousLights,this._disableLighting),n.MaterialHelper.PrepareDefinesForFrameBoundValues(s,l,this,a,!!i),n.MaterialHelper.PrepareDefinesForAttributes(e,a,!0,!0),a.isDirty){a.markAsProcessed(),s.resetCachedMaterial();var f=new n.EffectFallbacks;a.FOG&&f.addFallback(1,"FOG"),n.MaterialHelper.HandleFallbacksForShadows(a,f,this.maxSimultaneousLights),a.NUM_BONE_INFLUENCERS>0&&f.addCPUSkinningFallback(0,e),a.IMAGEPROCESSINGPOSTPROCESS=s.imageProcessingConfiguration.applyByPostProcess;var u=[n.VertexBuffer.PositionKind];a.NORMAL&&u.push(n.VertexBuffer.NormalKind),a.UV1&&u.push(n.VertexBuffer.UVKind),a.UV2&&u.push(n.VertexBuffer.UV2Kind),a.VERTEXCOLOR&&u.push(n.VertexBuffer.ColorKind),n.MaterialHelper.PrepareAttributesForBones(u,e,a,f),n.MaterialHelper.PrepareAttributesForInstances(u,a);var d=a.toString(),c=["world","view","viewProjection","vEyePosition","vLightsType","vDiffuseColor","vSpecularColor","vFogInfos","vFogColor","pointSize","vTextureInfos","mBones","textureMatrix","logarithmicDepthConstant","diffuse1Infos","diffuse2Infos","diffuse3Infos","diffuse4Infos","diffuse5Infos","diffuse6Infos","diffuse7Infos","diffuse8Infos"],p=["mixMap1Sampler","mixMap2Sampler","diffuse1Sampler","diffuse2Sampler","diffuse3Sampler","diffuse4Sampler","diffuse5Sampler","diffuse6Sampler","diffuse7Sampler","diffuse8Sampler"],h=[];(0,n.addClipPlaneUniforms)(c),n.MaterialHelper.PrepareUniformsAndSamplersList({uniformsNames:c,uniformBuffersNames:h,samplers:p,defines:a,maxSimultaneousLights:this.maxSimultaneousLights}),t.setEffect(s.getEngine().createEffect("mix",{attributes:u,uniformsNames:c,uniformBuffersNames:h,samplers:p,defines:d,fallbacks:f,onCompiled:this.onCompiled,onError:this.onError,indexParameters:{maxSimultaneousLights:this.maxSimultaneousLights}},l),a,this._materialContext)}return!(!t.effect||!t.effect.isReady())&&(a._renderId=s.getRenderId(),r._wasPreviouslyReady=!0,r._wasPreviouslyUsingInstances=!!i,!0)},t.prototype.bindForSubMesh=function(e,t,i){var r=this.getScene(),o=i.materialDefines;if(o){var a=i.effect;a&&(this._activeEffect=a,this.bindOnlyWorldMatrix(e),this._activeEffect.setMatrix("viewProjection",r.getTransformMatrix()),n.MaterialHelper.BindBonesParameters(t,this._activeEffect),this._mustRebind(r,a,i)&&(this._mixTexture1&&(this._activeEffect.setTexture("mixMap1Sampler",this._mixTexture1),this._activeEffect.setFloat2("vTextureInfos",this._mixTexture1.coordinatesIndex,this._mixTexture1.level),this._activeEffect.setMatrix("textureMatrix",this._mixTexture1.getTextureMatrix()),n.MaterialFlags.DiffuseTextureEnabled&&(this._diffuseTexture1&&(this._activeEffect.setTexture("diffuse1Sampler",this._diffuseTexture1),this._activeEffect.setFloat2("diffuse1Infos",this._diffuseTexture1.uScale,this._diffuseTexture1.vScale)),this._diffuseTexture2&&(this._activeEffect.setTexture("diffuse2Sampler",this._diffuseTexture2),this._activeEffect.setFloat2("diffuse2Infos",this._diffuseTexture2.uScale,this._diffuseTexture2.vScale)),this._diffuseTexture3&&(this._activeEffect.setTexture("diffuse3Sampler",this._diffuseTexture3),this._activeEffect.setFloat2("diffuse3Infos",this._diffuseTexture3.uScale,this._diffuseTexture3.vScale)),this._diffuseTexture4&&(this._activeEffect.setTexture("diffuse4Sampler",this._diffuseTexture4),this._activeEffect.setFloat2("diffuse4Infos",this._diffuseTexture4.uScale,this._diffuseTexture4.vScale)))),this._mixTexture2&&(this._activeEffect.setTexture("mixMap2Sampler",this._mixTexture2),n.MaterialFlags.DiffuseTextureEnabled&&(this._diffuseTexture5&&(this._activeEffect.setTexture("diffuse5Sampler",this._diffuseTexture5),this._activeEffect.setFloat2("diffuse5Infos",this._diffuseTexture5.uScale,this._diffuseTexture5.vScale)),this._diffuseTexture6&&(this._activeEffect.setTexture("diffuse6Sampler",this._diffuseTexture6),this._activeEffect.setFloat2("diffuse6Infos",this._diffuseTexture6.uScale,this._diffuseTexture6.vScale)),this._diffuseTexture7&&(this._activeEffect.setTexture("diffuse7Sampler",this._diffuseTexture7),this._activeEffect.setFloat2("diffuse7Infos",this._diffuseTexture7.uScale,this._diffuseTexture7.vScale)),this._diffuseTexture8&&(this._activeEffect.setTexture("diffuse8Sampler",this._diffuseTexture8),this._activeEffect.setFloat2("diffuse8Infos",this._diffuseTexture8.uScale,this._diffuseTexture8.vScale)))),(0,n.bindClipPlane)(a,this,r),this.pointsCloud&&this._activeEffect.setFloat("pointSize",this.pointSize),this._useLogarithmicDepth&&n.MaterialHelper.BindLogDepth(o,a,r),r.bindEyePosition(a)),this._activeEffect.setColor4("vDiffuseColor",this.diffuseColor,this.alpha*t.visibility),o.SPECULARTERM&&this._activeEffect.setColor4("vSpecularColor",this.specularColor,this.specularPower),r.lightsEnabled&&!this.disableLighting&&n.MaterialHelper.BindLights(r,t,this._activeEffect,o,this.maxSimultaneousLights),r.fogEnabled&&t.applyFog&&r.fogMode!==n.Scene.FOGMODE_NONE&&this._activeEffect.setMatrix("view",r.getViewMatrix()),n.MaterialHelper.BindFogParameters(r,t,this._activeEffect),this._afterBind(t,this._activeEffect,i))}},t.prototype.getAnimatables=function(){var e=[];return this._mixTexture1&&this._mixTexture1.animations&&this._mixTexture1.animations.length>0&&e.push(this._mixTexture1),this._mixTexture2&&this._mixTexture2.animations&&this._mixTexture2.animations.length>0&&e.push(this._mixTexture2),e},t.prototype.getActiveTextures=function(){var t=e.prototype.getActiveTextures.call(this);return this._mixTexture1&&t.push(this._mixTexture1),this._diffuseTexture1&&t.push(this._diffuseTexture1),this._diffuseTexture2&&t.push(this._diffuseTexture2),this._diffuseTexture3&&t.push(this._diffuseTexture3),this._diffuseTexture4&&t.push(this._diffuseTexture4),this._mixTexture2&&t.push(this._mixTexture2),this._diffuseTexture5&&t.push(this._diffuseTexture5),this._diffuseTexture6&&t.push(this._diffuseTexture6),this._diffuseTexture7&&t.push(this._diffuseTexture7),this._diffuseTexture8&&t.push(this._diffuseTexture8),t},t.prototype.hasTexture=function(t){return!!e.prototype.hasTexture.call(this,t)||(this._mixTexture1===t||(this._diffuseTexture1===t||(this._diffuseTexture2===t||(this._diffuseTexture3===t||(this._diffuseTexture4===t||(this._mixTexture2===t||(this._diffuseTexture5===t||(this._diffuseTexture6===t||(this._diffuseTexture7===t||this._diffuseTexture8===t)))))))))},t.prototype.dispose=function(t){this._mixTexture1&&this._mixTexture1.dispose(),e.prototype.dispose.call(this,t)},t.prototype.clone=function(e){var i=this;return n.SerializationHelper.Clone((function(){return new t(e,i.getScene())}),this)},t.prototype.serialize=function(){var t=e.prototype.serialize.call(this);return t.customType="BABYLON.MixMaterial",t},t.prototype.getClassName=function(){return"MixMaterial"},t.Parse=function(e,i,r){return n.SerializationHelper.Parse((function(){return new t(e.name,i)}),e,i,r)},(0,r.__decorate)([(0,n.serializeAsTexture)("mixTexture1")],t.prototype,"_mixTexture1",void 0),(0,r.__decorate)([(0,n.expandToProperty)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"mixTexture1",void 0),(0,r.__decorate)([(0,n.serializeAsTexture)("mixTexture2")],t.prototype,"_mixTexture2",void 0),(0,r.__decorate)([(0,n.expandToProperty)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"mixTexture2",void 0),(0,r.__decorate)([(0,n.serializeAsTexture)("diffuseTexture1")],t.prototype,"_diffuseTexture1",void 0),(0,r.__decorate)([(0,n.expandToProperty)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"diffuseTexture1",void 0),(0,r.__decorate)([(0,n.serializeAsTexture)("diffuseTexture2")],t.prototype,"_diffuseTexture2",void 0),(0,r.__decorate)([(0,n.expandToProperty)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"diffuseTexture2",void 0),(0,r.__decorate)([(0,n.serializeAsTexture)("diffuseTexture3")],t.prototype,"_diffuseTexture3",void 0),(0,r.__decorate)([(0,n.expandToProperty)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"diffuseTexture3",void 0),(0,r.__decorate)([(0,n.serializeAsTexture)("diffuseTexture4")],t.prototype,"_diffuseTexture4",void 0),(0,r.__decorate)([(0,n.expandToProperty)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"diffuseTexture4",void 0),(0,r.__decorate)([(0,n.serializeAsTexture)("diffuseTexture1")],t.prototype,"_diffuseTexture5",void 0),(0,r.__decorate)([(0,n.expandToProperty)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"diffuseTexture5",void 0),(0,r.__decorate)([(0,n.serializeAsTexture)("diffuseTexture2")],t.prototype,"_diffuseTexture6",void 0),(0,r.__decorate)([(0,n.expandToProperty)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"diffuseTexture6",void 0),(0,r.__decorate)([(0,n.serializeAsTexture)("diffuseTexture3")],t.prototype,"_diffuseTexture7",void 0),(0,r.__decorate)([(0,n.expandToProperty)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"diffuseTexture7",void 0),(0,r.__decorate)([(0,n.serializeAsTexture)("diffuseTexture4")],t.prototype,"_diffuseTexture8",void 0),(0,r.__decorate)([(0,n.expandToProperty)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"diffuseTexture8",void 0),(0,r.__decorate)([(0,n.serializeAsColor3)()],t.prototype,"diffuseColor",void 0),(0,r.__decorate)([(0,n.serializeAsColor3)()],t.prototype,"specularColor",void 0),(0,r.__decorate)([(0,n.serialize)()],t.prototype,"specularPower",void 0),(0,r.__decorate)([(0,n.serialize)("disableLighting")],t.prototype,"_disableLighting",void 0),(0,r.__decorate)([(0,n.expandToProperty)("_markAllSubMeshesAsLightsDirty")],t.prototype,"disableLighting",void 0),(0,r.__decorate)([(0,n.serialize)("maxSimultaneousLights")],t.prototype,"_maxSimultaneousLights",void 0),(0,r.__decorate)([(0,n.expandToProperty)("_markAllSubMeshesAsLightsDirty")],t.prototype,"maxSimultaneousLights",void 0),t}(n.PushMaterial);(0,n.RegisterClass)("BABYLON.MixMaterial",a)},"../../../dev/materials/src/normal/index.ts":
/*!**************************************************!*\
  !*** ../../../dev/materials/src/normal/index.ts ***!
  \**************************************************/(e,t,i)=>{i.r(t),i.d(t,{NormalMaterial:()=>r.NormalMaterial});var r=i(/*! ./normalMaterial */"../../../dev/materials/src/normal/normalMaterial.ts")},"../../../dev/materials/src/normal/normal.fragment.ts":
/*!************************************************************!*\
  !*** ../../../dev/materials/src/normal/normal.fragment.ts ***!
  \************************************************************/(e,t,i)=>{i.r(t),i.d(t,{normalPixelShader:()=>a});var r=i(/*! babylonjs/Shaders/ShadersInclude/imageProcessingCompatibility */"babylonjs/Materials/effect"),n="normalPixelShader",o="precision highp float;uniform vec4 vEyePosition;uniform vec4 vDiffuseColor;varying vec3 vPositionW;\n#ifdef NORMAL\nvarying vec3 vNormalW;\n#endif\n#ifdef LIGHTING\n#include<helperFunctions>\n#include<__decl__lightFragment>[0]\n#include<__decl__lightFragment>[1]\n#include<__decl__lightFragment>[2]\n#include<__decl__lightFragment>[3]\n#include<lightsFragmentFunctions>\n#include<shadowsFragmentFunctions>\n#endif\n#ifdef DIFFUSE\nvarying vec2 vDiffuseUV;uniform sampler2D diffuseSampler;uniform vec2 vDiffuseInfos;\n#endif\n#include<clipPlaneFragmentDeclaration>\n#ifdef LOGARITHMICDEPTH\n#extension GL_EXT_frag_depth : enable\n#endif\n#include<logDepthDeclaration>\n#include<fogFragmentDeclaration>\n#define CUSTOM_FRAGMENT_DEFINITIONS\nvoid main(void) {\n#define CUSTOM_FRAGMENT_MAIN_BEGIN\n#include<clipPlaneFragment>\nvec3 viewDirectionW=normalize(vEyePosition.xyz-vPositionW);vec4 baseColor=vec4(1.,1.,1.,1.);vec3 diffuseColor=vDiffuseColor.rgb;float alpha=vDiffuseColor.a;\n#ifdef DIFFUSE\nbaseColor=texture2D(diffuseSampler,vDiffuseUV);\n#ifdef ALPHATEST\nif (baseColor.a<0.4)\ndiscard;\n#endif\n#include<depthPrePass>\nbaseColor.rgb*=vDiffuseInfos.y;\n#endif\n#ifdef NORMAL\nbaseColor=mix(baseColor,vec4(vNormalW,1.0),0.5);\n#endif\n#ifdef NORMAL\nvec3 normalW=normalize(vNormalW);\n#else\nvec3 normalW=vec3(1.0,1.0,1.0);\n#endif\n#ifdef LIGHTING\nvec3 diffuseBase=vec3(0.,0.,0.);lightingInfo info;float shadow=1.;float glossiness=0.;float aggShadow=0.;float numLights=0.;\n#include<lightFragment>[0]\n#include<lightFragment>[1]\n#include<lightFragment>[2]\n#include<lightFragment>[3]\nvec3 finalDiffuse=clamp(diffuseBase*diffuseColor,0.0,1.0)*baseColor.rgb;\n#else\nvec3 finalDiffuse= baseColor.rgb;\n#endif\nvec4 color=vec4(finalDiffuse,alpha);\n#include<logDepthFragment>\n#include<fogFragment>\ngl_FragColor=color;\n#include<imageProcessingCompatibility>\n#define CUSTOM_FRAGMENT_MAIN_END\n}";r.ShaderStore.ShadersStore[n]=o;var a={name:n,shader:o}},"../../../dev/materials/src/normal/normal.vertex.ts":
/*!**********************************************************!*\
  !*** ../../../dev/materials/src/normal/normal.vertex.ts ***!
  \**********************************************************/(e,t,i)=>{i.r(t),i.d(t,{normalVertexShader:()=>a});var r=i(/*! babylonjs/Shaders/ShadersInclude/shadowsVertex */"babylonjs/Materials/effect"),n="normalVertexShader",o="precision highp float;attribute vec3 position;\n#ifdef NORMAL\nattribute vec3 normal;\n#endif\n#ifdef UV1\nattribute vec2 uv;\n#endif\n#ifdef UV2\nattribute vec2 uv2;\n#endif\n#ifdef VERTEXCOLOR\nattribute vec4 color;\n#endif\n#include<bonesDeclaration>\n#include<bakedVertexAnimationDeclaration>\n#include<instancesDeclaration>\nuniform mat4 view;uniform mat4 viewProjection;\n#ifdef DIFFUSE\nvarying vec2 vDiffuseUV;uniform mat4 diffuseMatrix;uniform vec2 vDiffuseInfos;\n#endif\n#ifdef POINTSIZE\nuniform float pointSize;\n#endif\nvarying vec3 vPositionW;\n#ifdef NORMAL\nvarying vec3 vNormalW;\n#endif\n#include<clipPlaneVertexDeclaration>\n#include<logDepthDeclaration>\n#include<fogVertexDeclaration>\n#include<__decl__lightFragment>[0..maxSimultaneousLights]\n#define CUSTOM_VERTEX_DEFINITIONS\nvoid main(void) {\n#define CUSTOM_VERTEX_MAIN_BEGIN\n#include<instancesVertex>\n#include<bonesVertex>\n#include<bakedVertexAnimation>\nvec4 worldPos=finalWorld*vec4(position,1.0);gl_Position=viewProjection*worldPos;vPositionW=vec3(worldPos);\n#ifdef NORMAL\nvNormalW=normalize(vec3(finalWorld*vec4(normal,0.0)));\n#endif\n#ifndef UV1\nvec2 uv=vec2(0.,0.);\n#endif\n#ifndef UV2\nvec2 uv2=vec2(0.,0.);\n#endif\n#ifdef DIFFUSE\nif (vDiffuseInfos.x==0.)\n{vDiffuseUV=vec2(diffuseMatrix*vec4(uv,1.0,0.0));}\nelse\n{vDiffuseUV=vec2(diffuseMatrix*vec4(uv2,1.0,0.0));}\n#endif\n#include<clipPlaneVertex>\n#include<logDepthVertex>\n#include<fogVertex>\n#include<shadowsVertex>[0..maxSimultaneousLights]\n#if defined(POINTSIZE) && !defined(WEBGPU)\ngl_PointSize=pointSize;\n#endif\n#define CUSTOM_VERTEX_MAIN_END\n}\n";r.ShaderStore.ShadersStore[n]=o;var a={name:n,shader:o}},"../../../dev/materials/src/normal/normalMaterial.ts":
/*!***********************************************************!*\
  !*** ../../../dev/materials/src/normal/normalMaterial.ts ***!
  \***********************************************************/(e,t,i)=>{i.r(t),i.d(t,{NormalMaterial:()=>a});var r=i(/*! tslib */"../../../../node_modules/tslib/tslib.es6.mjs"),n=i(/*! babylonjs/Materials/clipPlaneMaterialHelper */"babylonjs/Materials/effect"),o=(i(/*! ./normal.fragment */"../../../dev/materials/src/normal/normal.fragment.ts"),i(/*! ./normal.vertex */"../../../dev/materials/src/normal/normal.vertex.ts"),function(e){function t(){var t=e.call(this)||this;return t.DIFFUSE=!1,t.CLIPPLANE=!1,t.CLIPPLANE2=!1,t.CLIPPLANE3=!1,t.CLIPPLANE4=!1,t.CLIPPLANE5=!1,t.CLIPPLANE6=!1,t.ALPHATEST=!1,t.DEPTHPREPASS=!1,t.POINTSIZE=!1,t.FOG=!1,t.LIGHT0=!1,t.LIGHT1=!1,t.LIGHT2=!1,t.LIGHT3=!1,t.SPOTLIGHT0=!1,t.SPOTLIGHT1=!1,t.SPOTLIGHT2=!1,t.SPOTLIGHT3=!1,t.HEMILIGHT0=!1,t.HEMILIGHT1=!1,t.HEMILIGHT2=!1,t.HEMILIGHT3=!1,t.DIRLIGHT0=!1,t.DIRLIGHT1=!1,t.DIRLIGHT2=!1,t.DIRLIGHT3=!1,t.POINTLIGHT0=!1,t.POINTLIGHT1=!1,t.POINTLIGHT2=!1,t.POINTLIGHT3=!1,t.SHADOW0=!1,t.SHADOW1=!1,t.SHADOW2=!1,t.SHADOW3=!1,t.SHADOWS=!1,t.SHADOWESM0=!1,t.SHADOWESM1=!1,t.SHADOWESM2=!1,t.SHADOWESM3=!1,t.SHADOWPOISSON0=!1,t.SHADOWPOISSON1=!1,t.SHADOWPOISSON2=!1,t.SHADOWPOISSON3=!1,t.SHADOWPCF0=!1,t.SHADOWPCF1=!1,t.SHADOWPCF2=!1,t.SHADOWPCF3=!1,t.SHADOWPCSS0=!1,t.SHADOWPCSS1=!1,t.SHADOWPCSS2=!1,t.SHADOWPCSS3=!1,t.NORMAL=!1,t.UV1=!1,t.UV2=!1,t.NUM_BONE_INFLUENCERS=0,t.BonesPerMesh=0,t.INSTANCES=!1,t.LIGHTING=!1,t.IMAGEPROCESSINGPOSTPROCESS=!1,t.SKIPFINALCOLORCLAMP=!1,t.LOGARITHMICDEPTH=!1,t.rebuild(),t}return(0,r.__extends)(t,e),t}(n.MaterialDefines)),a=function(e){function t(t,i){var r=e.call(this,t,i)||this;return r.diffuseColor=new n.Color3(1,1,1),r._disableLighting=!1,r._maxSimultaneousLights=4,r}return(0,r.__extends)(t,e),t.prototype.needAlphaBlending=function(){return this.alpha<1},t.prototype.needAlphaBlendingForMesh=function(e){return this.needAlphaBlending()||e.visibility<1},t.prototype.needAlphaTesting=function(){return!1},t.prototype.getAlphaTestTexture=function(){return null},t.prototype.isReadyForSubMesh=function(e,t,i){var r=t._drawWrapper;if(this.isFrozen&&r.effect&&r._wasPreviouslyReady&&r._wasPreviouslyUsingInstances===i)return!0;t.materialDefines||(t.materialDefines=new o);var a=t.materialDefines,s=this.getScene();if(this._isReadyForSubMesh(t))return!0;var l=s.getEngine();if(a._areTexturesDirty&&(a._needUVs=!1,s.texturesEnabled&&this._diffuseTexture&&n.MaterialFlags.DiffuseTextureEnabled)){if(!this._diffuseTexture.isReady())return!1;a._needUVs=!0,a.DIFFUSE=!0}if(n.MaterialHelper.PrepareDefinesForMisc(e,s,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this._shouldTurnAlphaTestOn(e),a),a._needNormals=!0,n.MaterialHelper.PrepareDefinesForLights(s,e,a,!1,this._maxSimultaneousLights,this._disableLighting),n.MaterialHelper.PrepareDefinesForFrameBoundValues(s,l,this,a,!!i),a.LIGHTING=!this._disableLighting,n.MaterialHelper.PrepareDefinesForAttributes(e,a,!0,!0),a.isDirty){a.markAsProcessed(),s.resetCachedMaterial();var f=new n.EffectFallbacks;a.FOG&&f.addFallback(1,"FOG"),n.MaterialHelper.HandleFallbacksForShadows(a,f),a.NUM_BONE_INFLUENCERS>0&&f.addCPUSkinningFallback(0,e),a.IMAGEPROCESSINGPOSTPROCESS=s.imageProcessingConfiguration.applyByPostProcess;var u=[n.VertexBuffer.PositionKind];a.NORMAL&&u.push(n.VertexBuffer.NormalKind),a.UV1&&u.push(n.VertexBuffer.UVKind),a.UV2&&u.push(n.VertexBuffer.UV2Kind),n.MaterialHelper.PrepareAttributesForBones(u,e,a,f),n.MaterialHelper.PrepareAttributesForInstances(u,a);var d=a.toString(),c=["world","view","viewProjection","vEyePosition","vLightsType","vDiffuseColor","vFogInfos","vFogColor","pointSize","vDiffuseInfos","mBones","diffuseMatrix","logarithmicDepthConstant"],p=["diffuseSampler"],h=[];(0,n.addClipPlaneUniforms)(c),n.MaterialHelper.PrepareUniformsAndSamplersList({uniformsNames:c,uniformBuffersNames:h,samplers:p,defines:a,maxSimultaneousLights:4}),t.setEffect(s.getEngine().createEffect("normal",{attributes:u,uniformsNames:c,uniformBuffersNames:h,samplers:p,defines:d,fallbacks:f,onCompiled:this.onCompiled,onError:this.onError,indexParameters:{maxSimultaneousLights:4}},l),a,this._materialContext)}return!(!t.effect||!t.effect.isReady())&&(a._renderId=s.getRenderId(),r._wasPreviouslyReady=!0,r._wasPreviouslyUsingInstances=!!i,!0)},t.prototype.bindForSubMesh=function(e,t,i){var r=this.getScene(),o=i.materialDefines;if(o){var a=i.effect;a&&(this._activeEffect=a,this.bindOnlyWorldMatrix(e),this._activeEffect.setMatrix("viewProjection",r.getTransformMatrix()),n.MaterialHelper.BindBonesParameters(t,this._activeEffect),this._mustRebind(r,a,i)&&(this.diffuseTexture&&n.MaterialFlags.DiffuseTextureEnabled&&(this._activeEffect.setTexture("diffuseSampler",this.diffuseTexture),this._activeEffect.setFloat2("vDiffuseInfos",this.diffuseTexture.coordinatesIndex,this.diffuseTexture.level),this._activeEffect.setMatrix("diffuseMatrix",this.diffuseTexture.getTextureMatrix())),(0,n.bindClipPlane)(a,this,r),this.pointsCloud&&this._activeEffect.setFloat("pointSize",this.pointSize),this._useLogarithmicDepth&&n.MaterialHelper.BindLogDepth(o,a,r),r.bindEyePosition(a)),this._activeEffect.setColor4("vDiffuseColor",this.diffuseColor,this.alpha*t.visibility),r.lightsEnabled&&!this.disableLighting&&n.MaterialHelper.BindLights(r,t,this._activeEffect,o),r.fogEnabled&&t.applyFog&&r.fogMode!==n.Scene.FOGMODE_NONE&&this._activeEffect.setMatrix("view",r.getViewMatrix()),n.MaterialHelper.BindFogParameters(r,t,this._activeEffect),this._afterBind(t,this._activeEffect,i))}},t.prototype.getAnimatables=function(){var e=[];return this.diffuseTexture&&this.diffuseTexture.animations&&this.diffuseTexture.animations.length>0&&e.push(this.diffuseTexture),e},t.prototype.getActiveTextures=function(){var t=e.prototype.getActiveTextures.call(this);return this._diffuseTexture&&t.push(this._diffuseTexture),t},t.prototype.hasTexture=function(t){return!!e.prototype.hasTexture.call(this,t)||this.diffuseTexture===t},t.prototype.dispose=function(t){this.diffuseTexture&&this.diffuseTexture.dispose(),e.prototype.dispose.call(this,t)},t.prototype.clone=function(e){var i=this;return n.SerializationHelper.Clone((function(){return new t(e,i.getScene())}),this)},t.prototype.serialize=function(){var t=e.prototype.serialize.call(this);return t.customType="BABYLON.NormalMaterial",t},t.prototype.getClassName=function(){return"NormalMaterial"},t.Parse=function(e,i,r){return n.SerializationHelper.Parse((function(){return new t(e.name,i)}),e,i,r)},(0,r.__decorate)([(0,n.serializeAsTexture)("diffuseTexture")],t.prototype,"_diffuseTexture",void 0),(0,r.__decorate)([(0,n.expandToProperty)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"diffuseTexture",void 0),(0,r.__decorate)([(0,n.serializeAsColor3)()],t.prototype,"diffuseColor",void 0),(0,r.__decorate)([(0,n.serialize)("disableLighting")],t.prototype,"_disableLighting",void 0),(0,r.__decorate)([(0,n.expandToProperty)("_markAllSubMeshesAsLightsDirty")],t.prototype,"disableLighting",void 0),(0,r.__decorate)([(0,n.serialize)("maxSimultaneousLights")],t.prototype,"_maxSimultaneousLights",void 0),(0,r.__decorate)([(0,n.expandToProperty)("_markAllSubMeshesAsLightsDirty")],t.prototype,"maxSimultaneousLights",void 0),t}(n.PushMaterial);(0,n.RegisterClass)("BABYLON.NormalMaterial",a)},"../../../dev/materials/src/shadowOnly/index.ts":
/*!******************************************************!*\
  !*** ../../../dev/materials/src/shadowOnly/index.ts ***!
  \******************************************************/(e,t,i)=>{i.r(t),i.d(t,{ShadowOnlyMaterial:()=>r.ShadowOnlyMaterial});var r=i(/*! ./shadowOnlyMaterial */"../../../dev/materials/src/shadowOnly/shadowOnlyMaterial.ts")},"../../../dev/materials/src/shadowOnly/shadowOnly.fragment.ts":
/*!********************************************************************!*\
  !*** ../../../dev/materials/src/shadowOnly/shadowOnly.fragment.ts ***!
  \********************************************************************/(e,t,i)=>{i.r(t),i.d(t,{shadowOnlyPixelShader:()=>a});var r=i(/*! babylonjs/Shaders/ShadersInclude/imageProcessingCompatibility */"babylonjs/Materials/effect"),n="shadowOnlyPixelShader",o="precision highp float;uniform vec4 vEyePosition;uniform float alpha;uniform vec3 shadowColor;varying vec3 vPositionW;\n#ifdef NORMAL\nvarying vec3 vNormalW;\n#endif\n#include<helperFunctions>\n#include<__decl__lightFragment>[0..maxSimultaneousLights]\n#include<lightsFragmentFunctions>\n#include<shadowsFragmentFunctions>\n#include<clipPlaneFragmentDeclaration>\n#ifdef LOGARITHMICDEPTH\n#extension GL_EXT_frag_depth : enable\n#endif\n#include<logDepthDeclaration>\n#include<fogFragmentDeclaration>\n#define CUSTOM_FRAGMENT_DEFINITIONS\nvoid main(void) {\n#define CUSTOM_FRAGMENT_MAIN_BEGIN\n#include<clipPlaneFragment>\nvec3 viewDirectionW=normalize(vEyePosition.xyz-vPositionW);\n#ifdef NORMAL\nvec3 normalW=normalize(vNormalW);\n#else\nvec3 normalW=vec3(1.0,1.0,1.0);\n#endif\nvec3 diffuseBase=vec3(0.,0.,0.);lightingInfo info;float shadow=1.;float glossiness=0.;float aggShadow=0.;float numLights=0.;\n#include<lightFragment>[0..1]\nvec4 color=vec4(shadowColor,(1.0-clamp(shadow,0.,1.))*alpha);\n#include<logDepthFragment>\n#include<fogFragment>\ngl_FragColor=color;\n#include<imageProcessingCompatibility>\n#define CUSTOM_FRAGMENT_MAIN_END\n}";r.ShaderStore.ShadersStore[n]=o;var a={name:n,shader:o}},"../../../dev/materials/src/shadowOnly/shadowOnly.vertex.ts":
/*!******************************************************************!*\
  !*** ../../../dev/materials/src/shadowOnly/shadowOnly.vertex.ts ***!
  \******************************************************************/(e,t,i)=>{i.r(t),i.d(t,{shadowOnlyVertexShader:()=>a});var r=i(/*! babylonjs/Shaders/ShadersInclude/shadowsVertex */"babylonjs/Materials/effect"),n="shadowOnlyVertexShader",o="precision highp float;attribute vec3 position;\n#ifdef NORMAL\nattribute vec3 normal;\n#endif\n#include<bonesDeclaration>\n#include<bakedVertexAnimationDeclaration>\n#include<instancesDeclaration>\nuniform mat4 view;uniform mat4 viewProjection;\n#ifdef POINTSIZE\nuniform float pointSize;\n#endif\nvarying vec3 vPositionW;\n#ifdef NORMAL\nvarying vec3 vNormalW;\n#endif\n#ifdef VERTEXCOLOR\nvarying vec4 vColor;\n#endif\n#include<clipPlaneVertexDeclaration>\n#include<logDepthDeclaration>\n#include<fogVertexDeclaration>\n#include<__decl__lightFragment>[0..maxSimultaneousLights]\n#define CUSTOM_VERTEX_DEFINITIONS\nvoid main(void) {\n#define CUSTOM_VERTEX_MAIN_BEGIN\n#include<instancesVertex>\n#include<bonesVertex>\n#include<bakedVertexAnimation>\nvec4 worldPos=finalWorld*vec4(position,1.0);gl_Position=viewProjection*worldPos;vPositionW=vec3(worldPos);\n#ifdef NORMAL\nvNormalW=normalize(vec3(finalWorld*vec4(normal,0.0)));\n#endif\n#include<clipPlaneVertex>\n#include<logDepthVertex>\n#include<fogVertex>\n#include<shadowsVertex>[0..maxSimultaneousLights]\n#if defined(POINTSIZE) && !defined(WEBGPU)\ngl_PointSize=pointSize;\n#endif\n#define CUSTOM_VERTEX_MAIN_END\n}\n";r.ShaderStore.ShadersStore[n]=o;var a={name:n,shader:o}},"../../../dev/materials/src/shadowOnly/shadowOnlyMaterial.ts":
/*!*******************************************************************!*\
  !*** ../../../dev/materials/src/shadowOnly/shadowOnlyMaterial.ts ***!
  \*******************************************************************/(e,t,i)=>{i.r(t),i.d(t,{ShadowOnlyMaterial:()=>a});var r=i(/*! tslib */"../../../../node_modules/tslib/tslib.es6.mjs"),n=i(/*! babylonjs/Materials/clipPlaneMaterialHelper */"babylonjs/Materials/effect"),o=(i(/*! ./shadowOnly.fragment */"../../../dev/materials/src/shadowOnly/shadowOnly.fragment.ts"),i(/*! ./shadowOnly.vertex */"../../../dev/materials/src/shadowOnly/shadowOnly.vertex.ts"),function(e){function t(){var t=e.call(this)||this;return t.CLIPPLANE=!1,t.CLIPPLANE2=!1,t.CLIPPLANE3=!1,t.CLIPPLANE4=!1,t.CLIPPLANE5=!1,t.CLIPPLANE6=!1,t.POINTSIZE=!1,t.FOG=!1,t.NORMAL=!1,t.NUM_BONE_INFLUENCERS=0,t.BonesPerMesh=0,t.INSTANCES=!1,t.IMAGEPROCESSINGPOSTPROCESS=!1,t.SKIPFINALCOLORCLAMP=!1,t.LOGARITHMICDEPTH=!1,t.rebuild(),t}return(0,r.__extends)(t,e),t}(n.MaterialDefines)),a=function(e){function t(t,i){var r=e.call(this,t,i)||this;return r._needAlphaBlending=!0,r.shadowColor=n.Color3.Black(),r}return(0,r.__extends)(t,e),t.prototype.needAlphaBlending=function(){return this._needAlphaBlending},t.prototype.needAlphaTesting=function(){return!1},t.prototype.getAlphaTestTexture=function(){return null},Object.defineProperty(t.prototype,"activeLight",{get:function(){return this._activeLight},set:function(e){this._activeLight=e},enumerable:!1,configurable:!0}),t.prototype._getFirstShadowLightForMesh=function(e){for(var t=0,i=e.lightSources;t<i.length;t++){var r=i[t];if(r.shadowEnabled)return r}return null},t.prototype.isReadyForSubMesh=function(e,t,i){var r,a=t._drawWrapper;if(this.isFrozen&&a.effect&&a._wasPreviouslyReady&&a._wasPreviouslyUsingInstances===i)return!0;t.materialDefines||(t.materialDefines=new o);var s=t.materialDefines,l=this.getScene();if(this._isReadyForSubMesh(t))return!0;var f=l.getEngine();if(this._activeLight)for(var u=0,d=e.lightSources;u<d.length;u++){var c=d[u];if(c.shadowEnabled){if(this._activeLight===c)break;var p=e.lightSources.indexOf(this._activeLight);-1!==p&&(e.lightSources.splice(p,1),e.lightSources.splice(0,0,this._activeLight));break}}n.MaterialHelper.PrepareDefinesForFrameBoundValues(l,f,this,s,!!i),n.MaterialHelper.PrepareDefinesForMisc(e,l,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this._shouldTurnAlphaTestOn(e),s),s._needNormals=n.MaterialHelper.PrepareDefinesForLights(l,e,s,!1,1);var h=null===(r=this._getFirstShadowLightForMesh(e))||void 0===r?void 0:r.getShadowGenerator();if(this._needAlphaBlending=!0,h&&h.getClassName&&"CascadedShadowGenerator"===h.getClassName()){var m=h;this._needAlphaBlending=!m.autoCalcDepthBounds}if(n.MaterialHelper.PrepareDefinesForAttributes(e,s,!1,!0),s.isDirty){s.markAsProcessed(),l.resetCachedMaterial();var v=new n.EffectFallbacks;s.FOG&&v.addFallback(1,"FOG"),n.MaterialHelper.HandleFallbacksForShadows(s,v,1),s.NUM_BONE_INFLUENCERS>0&&v.addCPUSkinningFallback(0,e),s.IMAGEPROCESSINGPOSTPROCESS=l.imageProcessingConfiguration.applyByPostProcess;var _=[n.VertexBuffer.PositionKind];s.NORMAL&&_.push(n.VertexBuffer.NormalKind),n.MaterialHelper.PrepareAttributesForBones(_,e,s,v),n.MaterialHelper.PrepareAttributesForInstances(_,s);var g=s.toString(),x=["world","view","viewProjection","vEyePosition","vLightsType","vFogInfos","vFogColor","pointSize","alpha","shadowColor","mBones","logarithmicDepthConstant"],T=[],S=[];(0,n.addClipPlaneUniforms)(x),n.MaterialHelper.PrepareUniformsAndSamplersList({uniformsNames:x,uniformBuffersNames:S,samplers:T,defines:s,maxSimultaneousLights:1}),t.setEffect(l.getEngine().createEffect("shadowOnly",{attributes:_,uniformsNames:x,uniformBuffersNames:S,samplers:T,defines:g,fallbacks:v,onCompiled:this.onCompiled,onError:this.onError,indexParameters:{maxSimultaneousLights:1}},f),s,this._materialContext)}return!(!t.effect||!t.effect.isReady())&&(s._renderId=l.getRenderId(),a._wasPreviouslyReady=!0,a._wasPreviouslyUsingInstances=!!i,!0)},t.prototype.bindForSubMesh=function(e,t,i){var r=this.getScene(),o=i.materialDefines;if(o){var a=i.effect;if(a){if(this._activeEffect=a,this.bindOnlyWorldMatrix(e),this._activeEffect.setMatrix("viewProjection",r.getTransformMatrix()),n.MaterialHelper.BindBonesParameters(t,this._activeEffect),this._mustRebind(r,a,i)&&((0,n.bindClipPlane)(a,this,r),this.pointsCloud&&this._activeEffect.setFloat("pointSize",this.pointSize),this._activeEffect.setFloat("alpha",this.alpha),this._activeEffect.setColor3("shadowColor",this.shadowColor),this._useLogarithmicDepth&&n.MaterialHelper.BindLogDepth(o,a,r),r.bindEyePosition(a)),r.lightsEnabled){n.MaterialHelper.BindLights(r,t,this._activeEffect,o,1);var s=this._getFirstShadowLightForMesh(t);s&&(s._renderId=-1)}(r.fogEnabled&&t.applyFog&&r.fogMode!==n.Scene.FOGMODE_NONE||o.SHADOWCSM0)&&this._activeEffect.setMatrix("view",r.getViewMatrix()),n.MaterialHelper.BindFogParameters(r,t,this._activeEffect),this._afterBind(t,this._activeEffect,i)}}},t.prototype.clone=function(e){var i=this;return n.SerializationHelper.Clone((function(){return new t(e,i.getScene())}),this)},t.prototype.serialize=function(){var t=e.prototype.serialize.call(this);return t.customType="BABYLON.ShadowOnlyMaterial",t},t.prototype.getClassName=function(){return"ShadowOnlyMaterial"},t.Parse=function(e,i,r){return n.SerializationHelper.Parse((function(){return new t(e.name,i)}),e,i,r)},t}(n.PushMaterial);(0,n.RegisterClass)("BABYLON.ShadowOnlyMaterial",a)},"../../../dev/materials/src/simple/index.ts":
/*!**************************************************!*\
  !*** ../../../dev/materials/src/simple/index.ts ***!
  \**************************************************/(e,t,i)=>{i.r(t),i.d(t,{SimpleMaterial:()=>r.SimpleMaterial});var r=i(/*! ./simpleMaterial */"../../../dev/materials/src/simple/simpleMaterial.ts")},"../../../dev/materials/src/simple/simple.fragment.ts":
/*!************************************************************!*\
  !*** ../../../dev/materials/src/simple/simple.fragment.ts ***!
  \************************************************************/(e,t,i)=>{i.r(t),i.d(t,{simplePixelShader:()=>a});var r=i(/*! babylonjs/Shaders/ShadersInclude/imageProcessingCompatibility */"babylonjs/Materials/effect"),n="simplePixelShader",o="precision highp float;uniform vec4 vEyePosition;uniform vec4 vDiffuseColor;varying vec3 vPositionW;\n#ifdef NORMAL\nvarying vec3 vNormalW;\n#endif\n#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR) && defined(INSTANCES)\nvarying vec4 vColor;\n#endif\n#include<helperFunctions>\n#include<__decl__lightFragment>[0..maxSimultaneousLights]\n#include<lightsFragmentFunctions>\n#include<shadowsFragmentFunctions>\n#ifdef DIFFUSE\nvarying vec2 vDiffuseUV;uniform sampler2D diffuseSampler;uniform vec2 vDiffuseInfos;\n#endif\n#include<clipPlaneFragmentDeclaration>\n#ifdef LOGARITHMICDEPTH\n#extension GL_EXT_frag_depth : enable\n#endif\n#include<logDepthDeclaration>\n#include<fogFragmentDeclaration>\n#define CUSTOM_FRAGMENT_DEFINITIONS\nvoid main(void) {\n#define CUSTOM_FRAGMENT_MAIN_BEGIN\n#include<clipPlaneFragment>\nvec3 viewDirectionW=normalize(vEyePosition.xyz-vPositionW);vec4 baseColor=vec4(1.,1.,1.,1.);vec3 diffuseColor=vDiffuseColor.rgb;float alpha=vDiffuseColor.a;\n#ifdef DIFFUSE\nbaseColor=texture2D(diffuseSampler,vDiffuseUV);\n#ifdef ALPHATEST\nif (baseColor.a<0.4)\ndiscard;\n#endif\n#include<depthPrePass>\nbaseColor.rgb*=vDiffuseInfos.y;\n#endif\n#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR) && defined(INSTANCES)\nbaseColor.rgb*=vColor.rgb;\n#endif\n#ifdef NORMAL\nvec3 normalW=normalize(vNormalW);\n#else\nvec3 normalW=vec3(1.0,1.0,1.0);\n#endif\nvec3 diffuseBase=vec3(0.,0.,0.);lightingInfo info;float shadow=1.;float glossiness=0.;float aggShadow=0.;float numLights=0.;\n#ifdef SPECULARTERM\nvec3 specularBase=vec3(0.,0.,0.);\n#endif \n#include<lightFragment>[0..maxSimultaneousLights]\n#if defined(VERTEXALPHA) || defined(INSTANCESCOLOR) && defined(INSTANCES)\nalpha*=vColor.a;\n#endif\nvec3 finalDiffuse=clamp(diffuseBase*diffuseColor,0.0,1.0)*baseColor.rgb;vec4 color=vec4(finalDiffuse,alpha);\n#include<logDepthFragment>\n#include<fogFragment>\ngl_FragColor=color;\n#include<imageProcessingCompatibility>\n#define CUSTOM_FRAGMENT_MAIN_END\n}";r.ShaderStore.ShadersStore[n]=o;var a={name:n,shader:o}},"../../../dev/materials/src/simple/simple.vertex.ts":
/*!**********************************************************!*\
  !*** ../../../dev/materials/src/simple/simple.vertex.ts ***!
  \**********************************************************/(e,t,i)=>{i.r(t),i.d(t,{simpleVertexShader:()=>a});var r=i(/*! babylonjs/Shaders/ShadersInclude/vertexColorMixing */"babylonjs/Materials/effect"),n="simpleVertexShader",o="precision highp float;attribute vec3 position;\n#ifdef NORMAL\nattribute vec3 normal;\n#endif\n#ifdef UV1\nattribute vec2 uv;\n#endif\n#ifdef UV2\nattribute vec2 uv2;\n#endif\n#ifdef VERTEXCOLOR\nattribute vec4 color;\n#endif\n#include<bonesDeclaration>\n#include<bakedVertexAnimationDeclaration>\n#include<instancesDeclaration>\nuniform mat4 view;uniform mat4 viewProjection;\n#ifdef DIFFUSE\nvarying vec2 vDiffuseUV;uniform mat4 diffuseMatrix;uniform vec2 vDiffuseInfos;\n#endif\n#ifdef POINTSIZE\nuniform float pointSize;\n#endif\nvarying vec3 vPositionW;\n#ifdef NORMAL\nvarying vec3 vNormalW;\n#endif\n#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR) && defined(INSTANCES)\nvarying vec4 vColor;\n#endif\n#include<clipPlaneVertexDeclaration>\n#include<logDepthDeclaration>\n#include<fogVertexDeclaration>\n#include<__decl__lightFragment>[0..maxSimultaneousLights]\n#define CUSTOM_VERTEX_DEFINITIONS\nvoid main(void) {\n#define CUSTOM_VERTEX_MAIN_BEGIN\n#include<instancesVertex>\n#include<bonesVertex>\n#include<bakedVertexAnimation>\nvec4 worldPos=finalWorld*vec4(position,1.0);gl_Position=viewProjection*worldPos;vPositionW=vec3(worldPos);\n#ifdef NORMAL\nvNormalW=normalize(vec3(finalWorld*vec4(normal,0.0)));\n#endif\n#ifndef UV1\nvec2 uv=vec2(0.,0.);\n#endif\n#ifndef UV2\nvec2 uv2=vec2(0.,0.);\n#endif\n#ifdef DIFFUSE\nif (vDiffuseInfos.x==0.)\n{vDiffuseUV=vec2(diffuseMatrix*vec4(uv,1.0,0.0));}\nelse\n{vDiffuseUV=vec2(diffuseMatrix*vec4(uv2,1.0,0.0));}\n#endif\n#include<clipPlaneVertex>\n#include<logDepthVertex>\n#include<fogVertex>\n#include<shadowsVertex>[0..maxSimultaneousLights]\n#include<vertexColorMixing>\n#if defined(POINTSIZE) && !defined(WEBGPU)\ngl_PointSize=pointSize;\n#endif\n#define CUSTOM_VERTEX_MAIN_END\n}\n";r.ShaderStore.ShadersStore[n]=o;var a={name:n,shader:o}},"../../../dev/materials/src/simple/simpleMaterial.ts":
/*!***********************************************************!*\
  !*** ../../../dev/materials/src/simple/simpleMaterial.ts ***!
  \***********************************************************/(e,t,i)=>{i.r(t),i.d(t,{SimpleMaterial:()=>a});var r=i(/*! tslib */"../../../../node_modules/tslib/tslib.es6.mjs"),n=i(/*! babylonjs/Materials/clipPlaneMaterialHelper */"babylonjs/Materials/effect"),o=(i(/*! ./simple.fragment */"../../../dev/materials/src/simple/simple.fragment.ts"),i(/*! ./simple.vertex */"../../../dev/materials/src/simple/simple.vertex.ts"),function(e){function t(){var t=e.call(this)||this;return t.DIFFUSE=!1,t.CLIPPLANE=!1,t.CLIPPLANE2=!1,t.CLIPPLANE3=!1,t.CLIPPLANE4=!1,t.CLIPPLANE5=!1,t.CLIPPLANE6=!1,t.ALPHATEST=!1,t.DEPTHPREPASS=!1,t.POINTSIZE=!1,t.FOG=!1,t.NORMAL=!1,t.UV1=!1,t.UV2=!1,t.VERTEXCOLOR=!1,t.VERTEXALPHA=!1,t.NUM_BONE_INFLUENCERS=0,t.BonesPerMesh=0,t.INSTANCES=!1,t.INSTANCESCOLOR=!1,t.IMAGEPROCESSINGPOSTPROCESS=!1,t.SKIPFINALCOLORCLAMP=!1,t.LOGARITHMICDEPTH=!1,t.rebuild(),t}return(0,r.__extends)(t,e),t}(n.MaterialDefines)),a=function(e){function t(t,i){var r=e.call(this,t,i)||this;return r.diffuseColor=new n.Color3(1,1,1),r._disableLighting=!1,r._maxSimultaneousLights=4,r}return(0,r.__extends)(t,e),t.prototype.needAlphaBlending=function(){return this.alpha<1},t.prototype.needAlphaTesting=function(){return!1},t.prototype.getAlphaTestTexture=function(){return null},t.prototype.isReadyForSubMesh=function(e,t,i){var r=t._drawWrapper;if(this.isFrozen&&r.effect&&r._wasPreviouslyReady&&r._wasPreviouslyUsingInstances===i)return!0;t.materialDefines||(t.materialDefines=new o);var a=t.materialDefines,s=this.getScene();if(this._isReadyForSubMesh(t))return!0;var l=s.getEngine();if(a._areTexturesDirty&&(a._needUVs=!1,s.texturesEnabled&&this._diffuseTexture&&n.MaterialFlags.DiffuseTextureEnabled)){if(!this._diffuseTexture.isReady())return!1;a._needUVs=!0,a.DIFFUSE=!0}if(n.MaterialHelper.PrepareDefinesForMisc(e,s,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this._shouldTurnAlphaTestOn(e),a),a._needNormals=n.MaterialHelper.PrepareDefinesForLights(s,e,a,!1,this._maxSimultaneousLights,this._disableLighting),n.MaterialHelper.PrepareDefinesForFrameBoundValues(s,l,this,a,!!i),n.MaterialHelper.PrepareDefinesForAttributes(e,a,!0,!0),a.isDirty){a.markAsProcessed(),s.resetCachedMaterial();var f=new n.EffectFallbacks;a.FOG&&f.addFallback(1,"FOG"),n.MaterialHelper.HandleFallbacksForShadows(a,f,this.maxSimultaneousLights),a.NUM_BONE_INFLUENCERS>0&&f.addCPUSkinningFallback(0,e),a.IMAGEPROCESSINGPOSTPROCESS=s.imageProcessingConfiguration.applyByPostProcess;var u=[n.VertexBuffer.PositionKind];a.NORMAL&&u.push(n.VertexBuffer.NormalKind),a.UV1&&u.push(n.VertexBuffer.UVKind),a.UV2&&u.push(n.VertexBuffer.UV2Kind),a.VERTEXCOLOR&&u.push(n.VertexBuffer.ColorKind),n.MaterialHelper.PrepareAttributesForBones(u,e,a,f),n.MaterialHelper.PrepareAttributesForInstances(u,a);var d=a.toString(),c=["world","view","viewProjection","vEyePosition","vLightsType","vDiffuseColor","vFogInfos","vFogColor","pointSize","vDiffuseInfos","mBones","diffuseMatrix","logarithmicDepthConstant"],p=["diffuseSampler"],h=[];(0,n.addClipPlaneUniforms)(c),n.MaterialHelper.PrepareUniformsAndSamplersList({uniformsNames:c,uniformBuffersNames:h,samplers:p,defines:a,maxSimultaneousLights:this.maxSimultaneousLights}),t.setEffect(s.getEngine().createEffect("simple",{attributes:u,uniformsNames:c,uniformBuffersNames:h,samplers:p,defines:d,fallbacks:f,onCompiled:this.onCompiled,onError:this.onError,indexParameters:{maxSimultaneousLights:this._maxSimultaneousLights-1}},l),a,this._materialContext)}return!(!t.effect||!t.effect.isReady())&&(a._renderId=s.getRenderId(),r._wasPreviouslyReady=!0,r._wasPreviouslyUsingInstances=!!i,!0)},t.prototype.bindForSubMesh=function(e,t,i){var r=this.getScene(),o=i.materialDefines;if(o){var a=i.effect;a&&(this._activeEffect=a,this.bindOnlyWorldMatrix(e),this._activeEffect.setMatrix("viewProjection",r.getTransformMatrix()),n.MaterialHelper.BindBonesParameters(t,this._activeEffect),this._mustRebind(r,a,i)&&(this._diffuseTexture&&n.MaterialFlags.DiffuseTextureEnabled&&(this._activeEffect.setTexture("diffuseSampler",this._diffuseTexture),this._activeEffect.setFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),this._activeEffect.setMatrix("diffuseMatrix",this._diffuseTexture.getTextureMatrix())),(0,n.bindClipPlane)(a,this,r),this.pointsCloud&&this._activeEffect.setFloat("pointSize",this.pointSize),this._useLogarithmicDepth&&n.MaterialHelper.BindLogDepth(o,a,r),r.bindEyePosition(a)),this._activeEffect.setColor4("vDiffuseColor",this.diffuseColor,this.alpha*t.visibility),r.lightsEnabled&&!this.disableLighting&&n.MaterialHelper.BindLights(r,t,this._activeEffect,o,this.maxSimultaneousLights),r.fogEnabled&&t.applyFog&&r.fogMode!==n.Scene.FOGMODE_NONE&&this._activeEffect.setMatrix("view",r.getViewMatrix()),n.MaterialHelper.BindFogParameters(r,t,this._activeEffect),this._afterBind(t,this._activeEffect,i))}},t.prototype.getAnimatables=function(){var e=[];return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&e.push(this._diffuseTexture),e},t.prototype.getActiveTextures=function(){var t=e.prototype.getActiveTextures.call(this);return this._diffuseTexture&&t.push(this._diffuseTexture),t},t.prototype.hasTexture=function(t){return!!e.prototype.hasTexture.call(this,t)||this.diffuseTexture===t},t.prototype.dispose=function(t){this._diffuseTexture&&this._diffuseTexture.dispose(),e.prototype.dispose.call(this,t)},t.prototype.clone=function(e){var i=this;return n.SerializationHelper.Clone((function(){return new t(e,i.getScene())}),this)},t.prototype.serialize=function(){var t=e.prototype.serialize.call(this);return t.customType="BABYLON.SimpleMaterial",t},t.prototype.getClassName=function(){return"SimpleMaterial"},t.Parse=function(e,i,r){return n.SerializationHelper.Parse((function(){return new t(e.name,i)}),e,i,r)},(0,r.__decorate)([(0,n.serializeAsTexture)("diffuseTexture")],t.prototype,"_diffuseTexture",void 0),(0,r.__decorate)([(0,n.expandToProperty)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"diffuseTexture",void 0),(0,r.__decorate)([(0,n.serializeAsColor3)("diffuse")],t.prototype,"diffuseColor",void 0),(0,r.__decorate)([(0,n.serialize)("disableLighting")],t.prototype,"_disableLighting",void 0),(0,r.__decorate)([(0,n.expandToProperty)("_markAllSubMeshesAsLightsDirty")],t.prototype,"disableLighting",void 0),(0,r.__decorate)([(0,n.serialize)("maxSimultaneousLights")],t.prototype,"_maxSimultaneousLights",void 0),(0,r.__decorate)([(0,n.expandToProperty)("_markAllSubMeshesAsLightsDirty")],t.prototype,"maxSimultaneousLights",void 0),t}(n.PushMaterial);(0,n.RegisterClass)("BABYLON.SimpleMaterial",a)},"../../../dev/materials/src/sky/index.ts":
/*!***********************************************!*\
  !*** ../../../dev/materials/src/sky/index.ts ***!
  \***********************************************/(e,t,i)=>{i.r(t),i.d(t,{SkyMaterial:()=>r.SkyMaterial});var r=i(/*! ./skyMaterial */"../../../dev/materials/src/sky/skyMaterial.ts")},"../../../dev/materials/src/sky/sky.fragment.ts":
/*!******************************************************!*\
  !*** ../../../dev/materials/src/sky/sky.fragment.ts ***!
  \******************************************************/(e,t,i)=>{i.r(t),i.d(t,{skyPixelShader:()=>a});var r=i(/*! babylonjs/Shaders/ShadersInclude/imageProcessingCompatibility */"babylonjs/Materials/effect"),n="skyPixelShader",o="precision highp float;varying vec3 vPositionW;\n#ifdef VERTEXCOLOR\nvarying vec4 vColor;\n#endif\n#include<clipPlaneFragmentDeclaration>\nuniform vec3 cameraPosition;uniform vec3 cameraOffset;uniform vec3 up;uniform float luminance;uniform float turbidity;uniform float rayleigh;uniform float mieCoefficient;uniform float mieDirectionalG;uniform vec3 sunPosition;\n#ifdef LOGARITHMICDEPTH\n#extension GL_EXT_frag_depth : enable\n#endif\n#include<logDepthDeclaration>\n#include<fogFragmentDeclaration>\nconst float e=2.71828182845904523536028747135266249775724709369995957;const float pi=3.141592653589793238462643383279502884197169;const float n=1.0003;const float N=2.545E25;const float pn=0.035;const vec3 lambda=vec3(680E-9,550E-9,450E-9);const vec3 K=vec3(0.686,0.678,0.666);const float v=4.0;const float rayleighZenithLength=8.4E3;const float mieZenithLength=1.25E3;const float EE=1000.0;const float sunAngularDiameterCos=0.999956676946448443553574619906976478926848692873900859324;const float cutoffAngle=pi/1.95;const float steepness=1.5;vec3 totalRayleigh(vec3 lambda)\n{return (8.0*pow(pi,3.0)*pow(pow(n,2.0)-1.0,2.0)*(6.0+3.0*pn))/(3.0*N*pow(lambda,vec3(4.0))*(6.0-7.0*pn));}\nvec3 simplifiedRayleigh()\n{return 0.0005/vec3(94,40,18);}\nfloat rayleighPhase(float cosTheta)\n{ \nreturn (3.0/(16.0*pi))*(1.0+pow(cosTheta,2.0));}\nvec3 totalMie(vec3 lambda,vec3 K,float T)\n{float c=(0.2*T )*10E-18;return 0.434*c*pi*pow((2.0*pi)/lambda,vec3(v-2.0))*K;}\nfloat hgPhase(float cosTheta,float g)\n{return (1.0/(4.0*pi))*((1.0-pow(g,2.0))/pow(1.0-2.0*g*cosTheta+pow(g,2.0),1.5));}\nfloat sunIntensity(float zenithAngleCos)\n{return EE*max(0.0,1.0-exp((-(cutoffAngle-acos(zenithAngleCos))/steepness)));}\nfloat A=0.15;float B=0.50;float C=0.10;float D=0.20;float EEE=0.02;float F=0.30;float W=1000.0;vec3 Uncharted2Tonemap(vec3 x)\n{return ((x*(A*x+C*B)+D*EEE)/(x*(A*x+B)+D*F))-EEE/F;}\n#if DITHER\n#include<helperFunctions>\n#endif\n#define CUSTOM_FRAGMENT_DEFINITIONS\nvoid main(void) {\n#define CUSTOM_FRAGMENT_MAIN_BEGIN\n#include<clipPlaneFragment>\n/**\n*--------------------------------------------------------------------------------------------------\n* Sky Color\n*--------------------------------------------------------------------------------------------------\n*/\nfloat sunfade=1.0-clamp(1.0-exp((sunPosition.y/450000.0)),0.0,1.0);float rayleighCoefficient=rayleigh-(1.0*(1.0-sunfade));vec3 sunDirection=normalize(sunPosition);float sunE=sunIntensity(dot(sunDirection,up));vec3 betaR=simplifiedRayleigh()*rayleighCoefficient;vec3 betaM=totalMie(lambda,K,turbidity)*mieCoefficient;float zenithAngle=acos(max(0.0,dot(up,normalize(vPositionW-cameraPosition+cameraOffset))));float sR=rayleighZenithLength/(cos(zenithAngle)+0.15*pow(93.885-((zenithAngle*180.0)/pi),-1.253));float sM=mieZenithLength/(cos(zenithAngle)+0.15*pow(93.885-((zenithAngle*180.0)/pi),-1.253));vec3 Fex=exp(-(betaR*sR+betaM*sM));float cosTheta=dot(normalize(vPositionW-cameraPosition),sunDirection);float rPhase=rayleighPhase(cosTheta*0.5+0.5);vec3 betaRTheta=betaR*rPhase;float mPhase=hgPhase(cosTheta,mieDirectionalG);vec3 betaMTheta=betaM*mPhase;vec3 Lin=pow(sunE*((betaRTheta+betaMTheta)/(betaR+betaM))*(1.0-Fex),vec3(1.5));Lin*=mix(vec3(1.0),pow(sunE*((betaRTheta+betaMTheta)/(betaR+betaM))*Fex,vec3(1.0/2.0)),clamp(pow(1.0-dot(up,sunDirection),5.0),0.0,1.0));vec3 direction=normalize(vPositionW-cameraPosition);float theta=acos(direction.y);float phi=atan(direction.z,direction.x);vec2 uv=vec2(phi,theta)/vec2(2.0*pi,pi)+vec2(0.5,0.0);vec3 L0=vec3(0.1)*Fex;float sundisk=smoothstep(sunAngularDiameterCos,sunAngularDiameterCos+0.00002,cosTheta);L0+=(sunE*19000.0*Fex)*sundisk;vec3 whiteScale=1.0/Uncharted2Tonemap(vec3(W));vec3 texColor=(Lin+L0);texColor*=0.04 ;texColor+=vec3(0.0,0.001,0.0025)*0.3;float g_fMaxLuminance=1.0;float fLumScaled=0.1/luminance; \nfloat fLumCompressed=(fLumScaled*(1.0+(fLumScaled/(g_fMaxLuminance*g_fMaxLuminance))))/(1.0+fLumScaled); \nfloat ExposureBias=fLumCompressed;vec3 curr=Uncharted2Tonemap((log2(2.0/pow(luminance,4.0)))*texColor);vec3 retColor=curr*whiteScale;/**\n*--------------------------------------------------------------------------------------------------\n* Sky Color\n*--------------------------------------------------------------------------------------------------\n*/\nfloat alpha=1.0;\n#ifdef VERTEXCOLOR\nretColor.rgb*=vColor.rgb;\n#endif\n#if defined(VERTEXALPHA) || defined(INSTANCESCOLOR) && defined(INSTANCES)\nalpha*=vColor.a;\n#endif\n#if DITHER\nretColor.rgb+=dither(gl_FragCoord.xy,0.5);\n#endif\nvec4 color=clamp(vec4(retColor.rgb,alpha),0.0,1.0);\n#include<logDepthFragment>\n#include<fogFragment>\ngl_FragColor=color;\n#include<imageProcessingCompatibility>\n#define CUSTOM_FRAGMENT_MAIN_END\n}\n";r.ShaderStore.ShadersStore[n]=o;var a={name:n,shader:o}},"../../../dev/materials/src/sky/sky.vertex.ts":
/*!****************************************************!*\
  !*** ../../../dev/materials/src/sky/sky.vertex.ts ***!
  \****************************************************/(e,t,i)=>{i.r(t),i.d(t,{skyVertexShader:()=>a});var r=i(/*! babylonjs/Shaders/ShadersInclude/fogVertex */"babylonjs/Materials/effect"),n="skyVertexShader",o="precision highp float;attribute vec3 position;\n#ifdef VERTEXCOLOR\nattribute vec4 color;\n#endif\nuniform mat4 world;uniform mat4 view;uniform mat4 viewProjection;\n#ifdef POINTSIZE\nuniform float pointSize;\n#endif\nvarying vec3 vPositionW;\n#ifdef VERTEXCOLOR\nvarying vec4 vColor;\n#endif\n#include<logDepthDeclaration>\n#include<clipPlaneVertexDeclaration>\n#include<fogVertexDeclaration>\n#define CUSTOM_VERTEX_DEFINITIONS\nvoid main(void) {\n#define CUSTOM_VERTEX_MAIN_BEGIN\ngl_Position=viewProjection*world*vec4(position,1.0);vec4 worldPos=world*vec4(position,1.0);vPositionW=vec3(worldPos);\n#include<clipPlaneVertex>\n#include<logDepthVertex>\n#include<fogVertex>\n#ifdef VERTEXCOLOR\nvColor=color;\n#endif\n#if defined(POINTSIZE) && !defined(WEBGPU)\ngl_PointSize=pointSize;\n#endif\n#define CUSTOM_VERTEX_MAIN_END\n}\n";r.ShaderStore.ShadersStore[n]=o;var a={name:n,shader:o}},"../../../dev/materials/src/sky/skyMaterial.ts":
/*!*****************************************************!*\
  !*** ../../../dev/materials/src/sky/skyMaterial.ts ***!
  \*****************************************************/(e,t,i)=>{i.r(t),i.d(t,{SkyMaterial:()=>a});var r=i(/*! tslib */"../../../../node_modules/tslib/tslib.es6.mjs"),n=i(/*! babylonjs/Materials/clipPlaneMaterialHelper */"babylonjs/Materials/effect"),o=(i(/*! ./sky.fragment */"../../../dev/materials/src/sky/sky.fragment.ts"),i(/*! ./sky.vertex */"../../../dev/materials/src/sky/sky.vertex.ts"),function(e){function t(){var t=e.call(this)||this;return t.CLIPPLANE=!1,t.CLIPPLANE2=!1,t.CLIPPLANE3=!1,t.CLIPPLANE4=!1,t.CLIPPLANE5=!1,t.CLIPPLANE6=!1,t.POINTSIZE=!1,t.FOG=!1,t.VERTEXCOLOR=!1,t.VERTEXALPHA=!1,t.IMAGEPROCESSINGPOSTPROCESS=!1,t.SKIPFINALCOLORCLAMP=!1,t.DITHER=!1,t.LOGARITHMICDEPTH=!1,t.rebuild(),t}return(0,r.__extends)(t,e),t}(n.MaterialDefines)),a=function(e){function t(t,i){var r=e.call(this,t,i)||this;return r.luminance=1,r.turbidity=10,r.rayleigh=2,r.mieCoefficient=.005,r.mieDirectionalG=.8,r.distance=500,r.inclination=.49,r.azimuth=.25,r.sunPosition=new n.Vector3(0,100,0),r.useSunPosition=!1,r.cameraOffset=n.Vector3.Zero(),r.up=n.Vector3.Up(),r.dithering=!1,r._cameraPosition=n.Vector3.Zero(),r._skyOrientation=new n.Quaternion,r}return(0,r.__extends)(t,e),t.prototype.needAlphaBlending=function(){return this.alpha<1},t.prototype.needAlphaTesting=function(){return!1},t.prototype.getAlphaTestTexture=function(){return null},t.prototype.isReadyForSubMesh=function(e,t){var i=t._drawWrapper;if(this.isFrozen&&i.effect&&i._wasPreviouslyReady)return!0;t.materialDefines||(t.materialDefines=new o);var r=t.materialDefines,a=this.getScene();if(this._isReadyForSubMesh(t))return!0;if(n.MaterialHelper.PrepareDefinesForMisc(e,a,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,!1,r),n.MaterialHelper.PrepareDefinesForAttributes(e,r,!0,!1),r.IMAGEPROCESSINGPOSTPROCESS!==a.imageProcessingConfiguration.applyByPostProcess&&r.markAsMiscDirty(),r.DITHER!==this.dithering&&r.markAsMiscDirty(),r.isDirty){r.markAsProcessed(),a.resetCachedMaterial();var s=new n.EffectFallbacks;r.FOG&&s.addFallback(1,"FOG"),r.IMAGEPROCESSINGPOSTPROCESS=a.imageProcessingConfiguration.applyByPostProcess,r.DITHER=this.dithering;var l=[n.VertexBuffer.PositionKind];r.VERTEXCOLOR&&l.push(n.VertexBuffer.ColorKind);var f=["world","viewProjection","view","vFogInfos","vFogColor","logarithmicDepthConstant","pointSize","luminance","turbidity","rayleigh","mieCoefficient","mieDirectionalG","sunPosition","cameraPosition","cameraOffset","up"];(0,n.addClipPlaneUniforms)(f);var u=r.toString();t.setEffect(a.getEngine().createEffect("sky",l,f,[],u,s,this.onCompiled,this.onError),r,this._materialContext)}return!(!t.effect||!t.effect.isReady())&&(r._renderId=a.getRenderId(),i._wasPreviouslyReady=!0,!0)},t.prototype.bindForSubMesh=function(e,t,i){var r=this.getScene(),o=i.materialDefines;if(o){var a=i.effect;if(a){this._activeEffect=a,this.bindOnlyWorldMatrix(e),this._activeEffect.setMatrix("viewProjection",r.getTransformMatrix()),this._mustRebind(r,a,i)&&((0,n.bindClipPlane)(a,this,r),this.pointsCloud&&this._activeEffect.setFloat("pointSize",this.pointSize),this._useLogarithmicDepth&&n.MaterialHelper.BindLogDepth(o,a,r)),r.fogEnabled&&t.applyFog&&r.fogMode!==n.Scene.FOGMODE_NONE&&this._activeEffect.setMatrix("view",r.getViewMatrix()),n.MaterialHelper.BindFogParameters(r,t,this._activeEffect);var s=r.activeCamera;if(s){var l=s.getWorldMatrix();this._cameraPosition.x=l.m[12],this._cameraPosition.y=l.m[13],this._cameraPosition.z=l.m[14],this._activeEffect.setVector3("cameraPosition",this._cameraPosition)}if(this._activeEffect.setVector3("cameraOffset",this.cameraOffset),this._activeEffect.setVector3("up",this.up),this.luminance>0&&this._activeEffect.setFloat("luminance",this.luminance),this._activeEffect.setFloat("turbidity",this.turbidity),this._activeEffect.setFloat("rayleigh",this.rayleigh),this._activeEffect.setFloat("mieCoefficient",this.mieCoefficient),this._activeEffect.setFloat("mieDirectionalG",this.mieDirectionalG),!this.useSunPosition){var f=Math.PI*(this.inclination-.5),u=2*Math.PI*(this.azimuth-.5);this.sunPosition.x=this.distance*Math.cos(u)*Math.cos(f),this.sunPosition.y=this.distance*Math.sin(-f),this.sunPosition.z=this.distance*Math.sin(u)*Math.cos(f),n.Quaternion.FromUnitVectorsToRef(n.Vector3.UpReadOnly,this.up,this._skyOrientation),this.sunPosition.rotateByQuaternionToRef(this._skyOrientation,this.sunPosition)}this._activeEffect.setVector3("sunPosition",this.sunPosition),this._afterBind(t,this._activeEffect,i)}}},t.prototype.getAnimatables=function(){return[]},t.prototype.dispose=function(t){e.prototype.dispose.call(this,t)},t.prototype.clone=function(e){var i=this;return n.SerializationHelper.Clone((function(){return new t(e,i.getScene())}),this)},t.prototype.serialize=function(){var t=e.prototype.serialize.call(this);return t.customType="BABYLON.SkyMaterial",t},t.prototype.getClassName=function(){return"SkyMaterial"},t.Parse=function(e,i,r){return n.SerializationHelper.Parse((function(){return new t(e.name,i)}),e,i,r)},(0,r.__decorate)([(0,n.serialize)()],t.prototype,"luminance",void 0),(0,r.__decorate)([(0,n.serialize)()],t.prototype,"turbidity",void 0),(0,r.__decorate)([(0,n.serialize)()],t.prototype,"rayleigh",void 0),(0,r.__decorate)([(0,n.serialize)()],t.prototype,"mieCoefficient",void 0),(0,r.__decorate)([(0,n.serialize)()],t.prototype,"mieDirectionalG",void 0),(0,r.__decorate)([(0,n.serialize)()],t.prototype,"distance",void 0),(0,r.__decorate)([(0,n.serialize)()],t.prototype,"inclination",void 0),(0,r.__decorate)([(0,n.serialize)()],t.prototype,"azimuth",void 0),(0,r.__decorate)([(0,n.serializeAsVector3)()],t.prototype,"sunPosition",void 0),(0,r.__decorate)([(0,n.serialize)()],t.prototype,"useSunPosition",void 0),(0,r.__decorate)([(0,n.serializeAsVector3)()],t.prototype,"cameraOffset",void 0),(0,r.__decorate)([(0,n.serializeAsVector3)()],t.prototype,"up",void 0),(0,r.__decorate)([(0,n.serialize)()],t.prototype,"dithering",void 0),t}(n.PushMaterial);(0,n.RegisterClass)("BABYLON.SkyMaterial",a)},"../../../dev/materials/src/terrain/index.ts":
/*!***************************************************!*\
  !*** ../../../dev/materials/src/terrain/index.ts ***!
  \***************************************************/(e,t,i)=>{i.r(t),i.d(t,{TerrainMaterial:()=>r.TerrainMaterial});var r=i(/*! ./terrainMaterial */"../../../dev/materials/src/terrain/terrainMaterial.ts")},"../../../dev/materials/src/terrain/terrain.fragment.ts":
/*!**************************************************************!*\
  !*** ../../../dev/materials/src/terrain/terrain.fragment.ts ***!
  \**************************************************************/(e,t,i)=>{i.r(t),i.d(t,{terrainPixelShader:()=>a});var r=i(/*! babylonjs/Shaders/ShadersInclude/imageProcessingCompatibility */"babylonjs/Materials/effect"),n="terrainPixelShader",o="precision highp float;uniform vec4 vEyePosition;uniform vec4 vDiffuseColor;\n#ifdef SPECULARTERM\nuniform vec4 vSpecularColor;\n#endif\nvarying vec3 vPositionW;\n#ifdef NORMAL\nvarying vec3 vNormalW;\n#endif\n#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR) && defined(INSTANCES)\nvarying vec4 vColor;\n#endif\n#include<helperFunctions>\n#include<__decl__lightFragment>[0..maxSimultaneousLights]\n#ifdef DIFFUSE\nvarying vec2 vTextureUV;uniform sampler2D textureSampler;uniform vec2 vTextureInfos;uniform sampler2D diffuse1Sampler;uniform sampler2D diffuse2Sampler;uniform sampler2D diffuse3Sampler;uniform vec2 diffuse1Infos;uniform vec2 diffuse2Infos;uniform vec2 diffuse3Infos;\n#endif\n#ifdef BUMP\nuniform sampler2D bump1Sampler;uniform sampler2D bump2Sampler;uniform sampler2D bump3Sampler;\n#endif\n#include<lightsFragmentFunctions>\n#include<shadowsFragmentFunctions>\n#include<clipPlaneFragmentDeclaration>\n#ifdef LOGARITHMICDEPTH\n#extension GL_EXT_frag_depth : enable\n#endif\n#include<logDepthDeclaration>\n#include<fogFragmentDeclaration>\n#ifdef BUMP\n#extension GL_OES_standard_derivatives : enable\nmat3 cotangent_frame(vec3 normal,vec3 p,vec2 uv)\n{vec3 dp1=dFdx(p);vec3 dp2=dFdy(p);vec2 duv1=dFdx(uv);vec2 duv2=dFdy(uv);vec3 dp2perp=cross(dp2,normal);vec3 dp1perp=cross(normal,dp1);vec3 tangent=dp2perp*duv1.x+dp1perp*duv2.x;vec3 binormal=dp2perp*duv1.y+dp1perp*duv2.y;float invmax=inversesqrt(max(dot(tangent,tangent),dot(binormal,binormal)));return mat3(tangent*invmax,binormal*invmax,normal);}\nvec3 perturbNormal(vec3 viewDir,vec3 mixColor)\n{vec3 bump1Color=texture2D(bump1Sampler,vTextureUV*diffuse1Infos).xyz;vec3 bump2Color=texture2D(bump2Sampler,vTextureUV*diffuse2Infos).xyz;vec3 bump3Color=texture2D(bump3Sampler,vTextureUV*diffuse3Infos).xyz;bump1Color.rgb*=mixColor.r;bump2Color.rgb=mix(bump1Color.rgb,bump2Color.rgb,mixColor.g);vec3 map=mix(bump2Color.rgb,bump3Color.rgb,mixColor.b);map=map*255./127.-128./127.;mat3 TBN=cotangent_frame(vNormalW*vTextureInfos.y,-viewDir,vTextureUV);return normalize(TBN*map);}\n#endif\n#define CUSTOM_FRAGMENT_DEFINITIONS\nvoid main(void) {\n#define CUSTOM_FRAGMENT_MAIN_BEGIN\n#include<clipPlaneFragment>\nvec3 viewDirectionW=normalize(vEyePosition.xyz-vPositionW);vec4 baseColor=vec4(1.,1.,1.,1.);vec3 diffuseColor=vDiffuseColor.rgb;\n#ifdef SPECULARTERM\nfloat glossiness=vSpecularColor.a;vec3 specularColor=vSpecularColor.rgb;\n#else\nfloat glossiness=0.;\n#endif\nfloat alpha=vDiffuseColor.a;\n#ifdef NORMAL\nvec3 normalW=normalize(vNormalW);\n#else\nvec3 normalW=vec3(1.0,1.0,1.0);\n#endif\n#ifdef DIFFUSE\nbaseColor=texture2D(textureSampler,vTextureUV);\n#if defined(BUMP) && defined(DIFFUSE)\nnormalW=perturbNormal(viewDirectionW,baseColor.rgb);\n#endif\n#ifdef ALPHATEST\nif (baseColor.a<0.4)\ndiscard;\n#endif\n#include<depthPrePass>\nbaseColor.rgb*=vTextureInfos.y;vec4 diffuse1Color=texture2D(diffuse1Sampler,vTextureUV*diffuse1Infos);vec4 diffuse2Color=texture2D(diffuse2Sampler,vTextureUV*diffuse2Infos);vec4 diffuse3Color=texture2D(diffuse3Sampler,vTextureUV*diffuse3Infos);diffuse1Color.rgb*=baseColor.r;diffuse2Color.rgb=mix(diffuse1Color.rgb,diffuse2Color.rgb,baseColor.g);baseColor.rgb=mix(diffuse2Color.rgb,diffuse3Color.rgb,baseColor.b);\n#endif\n#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR) && defined(INSTANCES)\nbaseColor.rgb*=vColor.rgb;\n#endif\nvec3 diffuseBase=vec3(0.,0.,0.);lightingInfo info;float shadow=1.;float aggShadow=0.;float numLights=0.;\n#ifdef SPECULARTERM\nvec3 specularBase=vec3(0.,0.,0.);\n#endif\n#include<lightFragment>[0..maxSimultaneousLights]\n#if defined(VERTEXALPHA) || defined(INSTANCESCOLOR) && defined(INSTANCES)\nalpha*=vColor.a;\n#endif\n#ifdef SPECULARTERM\nvec3 finalSpecular=specularBase*specularColor;\n#else\nvec3 finalSpecular=vec3(0.0);\n#endif\nvec3 finalDiffuse=clamp(diffuseBase*diffuseColor*baseColor.rgb,0.0,1.0);vec4 color=vec4(finalDiffuse+finalSpecular,alpha);\n#include<logDepthFragment>\n#include<fogFragment>\ngl_FragColor=color;\n#include<imageProcessingCompatibility>\n#define CUSTOM_FRAGMENT_MAIN_END\n}\n";r.ShaderStore.ShadersStore[n]=o;var a={name:n,shader:o}},"../../../dev/materials/src/terrain/terrain.vertex.ts":
/*!************************************************************!*\
  !*** ../../../dev/materials/src/terrain/terrain.vertex.ts ***!
  \************************************************************/(e,t,i)=>{i.r(t),i.d(t,{terrainVertexShader:()=>a});var r=i(/*! babylonjs/Shaders/ShadersInclude/vertexColorMixing */"babylonjs/Materials/effect"),n="terrainVertexShader",o="precision highp float;attribute vec3 position;\n#ifdef NORMAL\nattribute vec3 normal;\n#endif\n#ifdef UV1\nattribute vec2 uv;\n#endif\n#ifdef UV2\nattribute vec2 uv2;\n#endif\n#ifdef VERTEXCOLOR\nattribute vec4 color;\n#endif\n#include<bonesDeclaration>\n#include<bakedVertexAnimationDeclaration>\n#include<instancesDeclaration>\nuniform mat4 view;uniform mat4 viewProjection;\n#ifdef DIFFUSE\nvarying vec2 vTextureUV;uniform mat4 textureMatrix;uniform vec2 vTextureInfos;\n#endif\n#ifdef POINTSIZE\nuniform float pointSize;\n#endif\nvarying vec3 vPositionW;\n#ifdef NORMAL\nvarying vec3 vNormalW;\n#endif\n#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR) && defined(INSTANCES)\nvarying vec4 vColor;\n#endif\n#include<logDepthDeclaration>\n#include<clipPlaneVertexDeclaration>\n#include<fogVertexDeclaration>\n#include<__decl__lightFragment>[0..maxSimultaneousLights]\n#define CUSTOM_VERTEX_DEFINITIONS\nvoid main(void) {\n#define CUSTOM_VERTEX_MAIN_BEGIN\n#include<instancesVertex>\n#include<bonesVertex>\n#include<bakedVertexAnimation>\nvec4 worldPos=finalWorld*vec4(position,1.0);gl_Position=viewProjection*worldPos;vPositionW=vec3(worldPos);\n#ifdef NORMAL\nvNormalW=normalize(vec3(finalWorld*vec4(normal,0.0)));\n#endif\n#ifndef UV1\nvec2 uv=vec2(0.,0.);\n#endif\n#ifndef UV2\nvec2 uv2=vec2(0.,0.);\n#endif\n#ifdef DIFFUSE\nif (vTextureInfos.x==0.)\n{vTextureUV=vec2(textureMatrix*vec4(uv,1.0,0.0));}\nelse\n{vTextureUV=vec2(textureMatrix*vec4(uv2,1.0,0.0));}\n#endif\n#include<clipPlaneVertex>\n#include<logDepthVertex>\n#include<fogVertex>\n#include<shadowsVertex>[0..maxSimultaneousLights]\n#include<vertexColorMixing>\n#if defined(POINTSIZE) && !defined(WEBGPU)\ngl_PointSize=pointSize;\n#endif\n#define CUSTOM_VERTEX_MAIN_END\n}\n";r.ShaderStore.ShadersStore[n]=o;var a={name:n,shader:o}},"../../../dev/materials/src/terrain/terrainMaterial.ts":
/*!*************************************************************!*\
  !*** ../../../dev/materials/src/terrain/terrainMaterial.ts ***!
  \*************************************************************/(e,t,i)=>{i.r(t),i.d(t,{TerrainMaterial:()=>a});var r=i(/*! tslib */"../../../../node_modules/tslib/tslib.es6.mjs"),n=i(/*! babylonjs/Materials/clipPlaneMaterialHelper */"babylonjs/Materials/effect"),o=(i(/*! ./terrain.fragment */"../../../dev/materials/src/terrain/terrain.fragment.ts"),i(/*! ./terrain.vertex */"../../../dev/materials/src/terrain/terrain.vertex.ts"),function(e){function t(){var t=e.call(this)||this;return t.DIFFUSE=!1,t.BUMP=!1,t.CLIPPLANE=!1,t.CLIPPLANE2=!1,t.CLIPPLANE3=!1,t.CLIPPLANE4=!1,t.CLIPPLANE5=!1,t.CLIPPLANE6=!1,t.ALPHATEST=!1,t.DEPTHPREPASS=!1,t.POINTSIZE=!1,t.FOG=!1,t.SPECULARTERM=!1,t.NORMAL=!1,t.UV1=!1,t.UV2=!1,t.VERTEXCOLOR=!1,t.VERTEXALPHA=!1,t.NUM_BONE_INFLUENCERS=0,t.BonesPerMesh=0,t.INSTANCES=!1,t.INSTANCESCOLOR=!1,t.IMAGEPROCESSINGPOSTPROCESS=!1,t.SKIPFINALCOLORCLAMP=!1,t.LOGARITHMICDEPTH=!1,t.rebuild(),t}return(0,r.__extends)(t,e),t}(n.MaterialDefines)),a=function(e){function t(t,i){var r=e.call(this,t,i)||this;return r.diffuseColor=new n.Color3(1,1,1),r.specularColor=new n.Color3(0,0,0),r.specularPower=64,r._disableLighting=!1,r._maxSimultaneousLights=4,r}return(0,r.__extends)(t,e),t.prototype.needAlphaBlending=function(){return this.alpha<1},t.prototype.needAlphaTesting=function(){return!1},t.prototype.getAlphaTestTexture=function(){return null},t.prototype.isReadyForSubMesh=function(e,t,i){var r=t._drawWrapper;if(this.isFrozen&&r.effect&&r._wasPreviouslyReady&&r._wasPreviouslyUsingInstances===i)return!0;t.materialDefines||(t.materialDefines=new o);var a=t.materialDefines,s=this.getScene();if(this._isReadyForSubMesh(t))return!0;var l=s.getEngine();if(s.texturesEnabled){if(!this.mixTexture||!this.mixTexture.isReady())return!1;if(a._needUVs=!0,n.MaterialFlags.DiffuseTextureEnabled){if(!this.diffuseTexture1||!this.diffuseTexture1.isReady())return!1;if(!this.diffuseTexture2||!this.diffuseTexture2.isReady())return!1;if(!this.diffuseTexture3||!this.diffuseTexture3.isReady())return!1;a.DIFFUSE=!0}if(this.bumpTexture1&&this.bumpTexture2&&this.bumpTexture3&&n.MaterialFlags.BumpTextureEnabled){if(!this.bumpTexture1.isReady())return!1;if(!this.bumpTexture2.isReady())return!1;if(!this.bumpTexture3.isReady())return!1;a._needNormals=!0,a.BUMP=!0}}if(n.MaterialHelper.PrepareDefinesForMisc(e,s,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this._shouldTurnAlphaTestOn(e),a),a._needNormals=n.MaterialHelper.PrepareDefinesForLights(s,e,a,!1,this._maxSimultaneousLights,this._disableLighting),n.MaterialHelper.PrepareDefinesForFrameBoundValues(s,l,this,a,!!i),n.MaterialHelper.PrepareDefinesForAttributes(e,a,!0,!0),a.isDirty){a.markAsProcessed(),s.resetCachedMaterial();var f=new n.EffectFallbacks;a.FOG&&f.addFallback(1,"FOG"),n.MaterialHelper.HandleFallbacksForShadows(a,f,this.maxSimultaneousLights),a.NUM_BONE_INFLUENCERS>0&&f.addCPUSkinningFallback(0,e),a.IMAGEPROCESSINGPOSTPROCESS=s.imageProcessingConfiguration.applyByPostProcess;var u=[n.VertexBuffer.PositionKind];a.NORMAL&&u.push(n.VertexBuffer.NormalKind),a.UV1&&u.push(n.VertexBuffer.UVKind),a.UV2&&u.push(n.VertexBuffer.UV2Kind),a.VERTEXCOLOR&&u.push(n.VertexBuffer.ColorKind),n.MaterialHelper.PrepareAttributesForBones(u,e,a,f),n.MaterialHelper.PrepareAttributesForInstances(u,a);var d=a.toString(),c=["world","view","viewProjection","vEyePosition","vLightsType","vDiffuseColor","vSpecularColor","vFogInfos","vFogColor","pointSize","vTextureInfos","mBones","textureMatrix","diffuse1Infos","diffuse2Infos","diffuse3Infos"],p=["textureSampler","diffuse1Sampler","diffuse2Sampler","diffuse3Sampler","bump1Sampler","bump2Sampler","bump3Sampler","logarithmicDepthConstant"],h=[];(0,n.addClipPlaneUniforms)(c),n.MaterialHelper.PrepareUniformsAndSamplersList({uniformsNames:c,uniformBuffersNames:h,samplers:p,defines:a,maxSimultaneousLights:this.maxSimultaneousLights}),t.setEffect(s.getEngine().createEffect("terrain",{attributes:u,uniformsNames:c,uniformBuffersNames:h,samplers:p,defines:d,fallbacks:f,onCompiled:this.onCompiled,onError:this.onError,indexParameters:{maxSimultaneousLights:this.maxSimultaneousLights}},l),a,this._materialContext)}return!(!t.effect||!t.effect.isReady())&&(a._renderId=s.getRenderId(),r._wasPreviouslyReady=!0,r._wasPreviouslyUsingInstances=!!i,!0)},t.prototype.bindForSubMesh=function(e,t,i){var r=this.getScene(),o=i.materialDefines;if(o){var a=i.effect;a&&(this._activeEffect=a,this.bindOnlyWorldMatrix(e),this._activeEffect.setMatrix("viewProjection",r.getTransformMatrix()),n.MaterialHelper.BindBonesParameters(t,this._activeEffect),this._mustRebind(r,a,i)&&(this.mixTexture&&(this._activeEffect.setTexture("textureSampler",this._mixTexture),this._activeEffect.setFloat2("vTextureInfos",this._mixTexture.coordinatesIndex,this._mixTexture.level),this._activeEffect.setMatrix("textureMatrix",this._mixTexture.getTextureMatrix()),n.MaterialFlags.DiffuseTextureEnabled&&(this._diffuseTexture1&&(this._activeEffect.setTexture("diffuse1Sampler",this._diffuseTexture1),this._activeEffect.setFloat2("diffuse1Infos",this._diffuseTexture1.uScale,this._diffuseTexture1.vScale)),this._diffuseTexture2&&(this._activeEffect.setTexture("diffuse2Sampler",this._diffuseTexture2),this._activeEffect.setFloat2("diffuse2Infos",this._diffuseTexture2.uScale,this._diffuseTexture2.vScale)),this._diffuseTexture3&&(this._activeEffect.setTexture("diffuse3Sampler",this._diffuseTexture3),this._activeEffect.setFloat2("diffuse3Infos",this._diffuseTexture3.uScale,this._diffuseTexture3.vScale))),n.MaterialFlags.BumpTextureEnabled&&r.getEngine().getCaps().standardDerivatives&&(this._bumpTexture1&&this._activeEffect.setTexture("bump1Sampler",this._bumpTexture1),this._bumpTexture2&&this._activeEffect.setTexture("bump2Sampler",this._bumpTexture2),this._bumpTexture3&&this._activeEffect.setTexture("bump3Sampler",this._bumpTexture3))),(0,n.bindClipPlane)(a,this,r),this.pointsCloud&&this._activeEffect.setFloat("pointSize",this.pointSize),this._useLogarithmicDepth&&n.MaterialHelper.BindLogDepth(o,a,r),r.bindEyePosition(a)),this._activeEffect.setColor4("vDiffuseColor",this.diffuseColor,this.alpha*t.visibility),o.SPECULARTERM&&this._activeEffect.setColor4("vSpecularColor",this.specularColor,this.specularPower),r.lightsEnabled&&!this.disableLighting&&n.MaterialHelper.BindLights(r,t,this._activeEffect,o,this.maxSimultaneousLights),r.fogEnabled&&t.applyFog&&r.fogMode!==n.Scene.FOGMODE_NONE&&this._activeEffect.setMatrix("view",r.getViewMatrix()),n.MaterialHelper.BindFogParameters(r,t,this._activeEffect),this._afterBind(t,this._activeEffect,i))}},t.prototype.getAnimatables=function(){var e=[];return this.mixTexture&&this.mixTexture.animations&&this.mixTexture.animations.length>0&&e.push(this.mixTexture),e},t.prototype.getActiveTextures=function(){var t=e.prototype.getActiveTextures.call(this);return this._mixTexture&&t.push(this._mixTexture),this._diffuseTexture1&&t.push(this._diffuseTexture1),this._diffuseTexture2&&t.push(this._diffuseTexture2),this._diffuseTexture3&&t.push(this._diffuseTexture3),this._bumpTexture1&&t.push(this._bumpTexture1),this._bumpTexture2&&t.push(this._bumpTexture2),this._bumpTexture3&&t.push(this._bumpTexture3),t},t.prototype.hasTexture=function(t){return!!e.prototype.hasTexture.call(this,t)||(this._mixTexture===t||(this._diffuseTexture1===t||(this._diffuseTexture2===t||(this._diffuseTexture3===t||(this._bumpTexture1===t||(this._bumpTexture2===t||this._bumpTexture3===t))))))},t.prototype.dispose=function(t){this.mixTexture&&this.mixTexture.dispose(),e.prototype.dispose.call(this,t)},t.prototype.clone=function(e){var i=this;return n.SerializationHelper.Clone((function(){return new t(e,i.getScene())}),this)},t.prototype.serialize=function(){var t=e.prototype.serialize.call(this);return t.customType="BABYLON.TerrainMaterial",t},t.prototype.getClassName=function(){return"TerrainMaterial"},t.Parse=function(e,i,r){return n.SerializationHelper.Parse((function(){return new t(e.name,i)}),e,i,r)},(0,r.__decorate)([(0,n.serializeAsTexture)("mixTexture")],t.prototype,"_mixTexture",void 0),(0,r.__decorate)([(0,n.expandToProperty)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"mixTexture",void 0),(0,r.__decorate)([(0,n.serializeAsTexture)("diffuseTexture1")],t.prototype,"_diffuseTexture1",void 0),(0,r.__decorate)([(0,n.expandToProperty)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"diffuseTexture1",void 0),(0,r.__decorate)([(0,n.serializeAsTexture)("diffuseTexture2")],t.prototype,"_diffuseTexture2",void 0),(0,r.__decorate)([(0,n.expandToProperty)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"diffuseTexture2",void 0),(0,r.__decorate)([(0,n.serializeAsTexture)("diffuseTexture3")],t.prototype,"_diffuseTexture3",void 0),(0,r.__decorate)([(0,n.expandToProperty)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"diffuseTexture3",void 0),(0,r.__decorate)([(0,n.serializeAsTexture)("bumpTexture1")],t.prototype,"_bumpTexture1",void 0),(0,r.__decorate)([(0,n.expandToProperty)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"bumpTexture1",void 0),(0,r.__decorate)([(0,n.serializeAsTexture)("bumpTexture2")],t.prototype,"_bumpTexture2",void 0),(0,r.__decorate)([(0,n.expandToProperty)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"bumpTexture2",void 0),(0,r.__decorate)([(0,n.serializeAsTexture)("bumpTexture3")],t.prototype,"_bumpTexture3",void 0),(0,r.__decorate)([(0,n.expandToProperty)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"bumpTexture3",void 0),(0,r.__decorate)([(0,n.serializeAsColor3)()],t.prototype,"diffuseColor",void 0),(0,r.__decorate)([(0,n.serializeAsColor3)()],t.prototype,"specularColor",void 0),(0,r.__decorate)([(0,n.serialize)()],t.prototype,"specularPower",void 0),(0,r.__decorate)([(0,n.serialize)("disableLighting")],t.prototype,"_disableLighting",void 0),(0,r.__decorate)([(0,n.expandToProperty)("_markAllSubMeshesAsLightsDirty")],t.prototype,"disableLighting",void 0),(0,r.__decorate)([(0,n.serialize)("maxSimultaneousLights")],t.prototype,"_maxSimultaneousLights",void 0),(0,r.__decorate)([(0,n.expandToProperty)("_markAllSubMeshesAsLightsDirty")],t.prototype,"maxSimultaneousLights",void 0),t}(n.PushMaterial);(0,n.RegisterClass)("BABYLON.TerrainMaterial",a)},"../../../dev/materials/src/triPlanar/index.ts":
/*!*****************************************************!*\
  !*** ../../../dev/materials/src/triPlanar/index.ts ***!
  \*****************************************************/(e,t,i)=>{i.r(t),i.d(t,{TriPlanarMaterial:()=>r.TriPlanarMaterial});var r=i(/*! ./triPlanarMaterial */"../../../dev/materials/src/triPlanar/triPlanarMaterial.ts")},"../../../dev/materials/src/triPlanar/triPlanarMaterial.ts":
/*!*****************************************************************!*\
  !*** ../../../dev/materials/src/triPlanar/triPlanarMaterial.ts ***!
  \*****************************************************************/(e,t,i)=>{i.r(t),i.d(t,{TriPlanarMaterial:()=>a});var r=i(/*! tslib */"../../../../node_modules/tslib/tslib.es6.mjs"),n=i(/*! babylonjs/Materials/clipPlaneMaterialHelper */"babylonjs/Materials/effect"),o=(i(/*! ./triplanar.fragment */"../../../dev/materials/src/triPlanar/triplanar.fragment.ts"),i(/*! ./triplanar.vertex */"../../../dev/materials/src/triPlanar/triplanar.vertex.ts"),function(e){function t(){var t=e.call(this)||this;return t.DIFFUSEX=!1,t.DIFFUSEY=!1,t.DIFFUSEZ=!1,t.BUMPX=!1,t.BUMPY=!1,t.BUMPZ=!1,t.CLIPPLANE=!1,t.CLIPPLANE2=!1,t.CLIPPLANE3=!1,t.CLIPPLANE4=!1,t.CLIPPLANE5=!1,t.CLIPPLANE6=!1,t.ALPHATEST=!1,t.DEPTHPREPASS=!1,t.POINTSIZE=!1,t.FOG=!1,t.SPECULARTERM=!1,t.NORMAL=!1,t.VERTEXCOLOR=!1,t.VERTEXALPHA=!1,t.NUM_BONE_INFLUENCERS=0,t.BonesPerMesh=0,t.INSTANCES=!1,t.INSTANCESCOLOR=!1,t.IMAGEPROCESSINGPOSTPROCESS=!1,t.SKIPFINALCOLORCLAMP=!1,t.NONUNIFORMSCALING=!1,t.LOGARITHMICDEPTH=!1,t.rebuild(),t}return(0,r.__extends)(t,e),t}(n.MaterialDefines)),a=function(e){function t(t,i){var r=e.call(this,t,i)||this;return r.tileSize=1,r.diffuseColor=new n.Color3(1,1,1),r.specularColor=new n.Color3(.2,.2,.2),r.specularPower=64,r._disableLighting=!1,r._maxSimultaneousLights=4,r}return(0,r.__extends)(t,e),t.prototype.needAlphaBlending=function(){return this.alpha<1},t.prototype.needAlphaTesting=function(){return!1},t.prototype.getAlphaTestTexture=function(){return null},t.prototype.isReadyForSubMesh=function(e,t,i){var r=t._drawWrapper;if(this.isFrozen&&r.effect&&r._wasPreviouslyReady&&r._wasPreviouslyUsingInstances===i)return!0;t.materialDefines||(t.materialDefines=new o);var a=t.materialDefines,s=this.getScene();if(this._isReadyForSubMesh(t))return!0;var l=s.getEngine();if(a._areTexturesDirty&&s.texturesEnabled){if(n.MaterialFlags.DiffuseTextureEnabled)for(var f=[this.diffuseTextureX,this.diffuseTextureY,this.diffuseTextureZ],u=["DIFFUSEX","DIFFUSEY","DIFFUSEZ"],d=0;d<f.length;d++)if(f[d]){if(!f[d].isReady())return!1;a[u[d]]=!0}if(n.MaterialFlags.BumpTextureEnabled)for(f=[this.normalTextureX,this.normalTextureY,this.normalTextureZ],u=["BUMPX","BUMPY","BUMPZ"],d=0;d<f.length;d++)if(f[d]){if(!f[d].isReady())return!1;a[u[d]]=!0}}if(n.MaterialHelper.PrepareDefinesForMisc(e,s,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this._shouldTurnAlphaTestOn(e),a),a._needNormals=n.MaterialHelper.PrepareDefinesForLights(s,e,a,!1,this._maxSimultaneousLights,this._disableLighting),n.MaterialHelper.PrepareDefinesForFrameBoundValues(s,l,this,a,!!i),n.MaterialHelper.PrepareDefinesForAttributes(e,a,!0,!0),a.isDirty){a.markAsProcessed(),s.resetCachedMaterial();var c=new n.EffectFallbacks;a.FOG&&c.addFallback(1,"FOG"),n.MaterialHelper.HandleFallbacksForShadows(a,c,this.maxSimultaneousLights),a.NUM_BONE_INFLUENCERS>0&&c.addCPUSkinningFallback(0,e),a.IMAGEPROCESSINGPOSTPROCESS=s.imageProcessingConfiguration.applyByPostProcess;var p=[n.VertexBuffer.PositionKind];a.NORMAL&&p.push(n.VertexBuffer.NormalKind),a.VERTEXCOLOR&&p.push(n.VertexBuffer.ColorKind),n.MaterialHelper.PrepareAttributesForBones(p,e,a,c),n.MaterialHelper.PrepareAttributesForInstances(p,a);var h=a.toString(),m=["world","view","viewProjection","vEyePosition","vLightsType","vDiffuseColor","vSpecularColor","vFogInfos","vFogColor","pointSize","mBones","tileSize"],v=["diffuseSamplerX","diffuseSamplerY","diffuseSamplerZ","normalSamplerX","normalSamplerY","normalSamplerZ","logarithmicDepthConstant"],_=[];(0,n.addClipPlaneUniforms)(m),n.MaterialHelper.PrepareUniformsAndSamplersList({uniformsNames:m,uniformBuffersNames:_,samplers:v,defines:a,maxSimultaneousLights:this.maxSimultaneousLights}),t.setEffect(s.getEngine().createEffect("triplanar",{attributes:p,uniformsNames:m,uniformBuffersNames:_,samplers:v,defines:h,fallbacks:c,onCompiled:this.onCompiled,onError:this.onError,indexParameters:{maxSimultaneousLights:this.maxSimultaneousLights}},l),a,this._materialContext)}return!(!t.effect||!t.effect.isReady())&&(a._renderId=s.getRenderId(),r._wasPreviouslyReady=!0,r._wasPreviouslyUsingInstances=!!i,!0)},t.prototype.bindForSubMesh=function(e,t,i){var r=this.getScene(),o=i.materialDefines;if(o){var a=i.effect;a&&(this._activeEffect=a,this.bindOnlyWorldMatrix(e),this._activeEffect.setMatrix("viewProjection",r.getTransformMatrix()),n.MaterialHelper.BindBonesParameters(t,this._activeEffect),this._activeEffect.setFloat("tileSize",this.tileSize),this._mustRebind(r,a,i)&&(this.diffuseTextureX&&this._activeEffect.setTexture("diffuseSamplerX",this.diffuseTextureX),this.diffuseTextureY&&this._activeEffect.setTexture("diffuseSamplerY",this.diffuseTextureY),this.diffuseTextureZ&&this._activeEffect.setTexture("diffuseSamplerZ",this.diffuseTextureZ),this.normalTextureX&&this._activeEffect.setTexture("normalSamplerX",this.normalTextureX),this.normalTextureY&&this._activeEffect.setTexture("normalSamplerY",this.normalTextureY),this.normalTextureZ&&this._activeEffect.setTexture("normalSamplerZ",this.normalTextureZ),(0,n.bindClipPlane)(a,this,r),this.pointsCloud&&this._activeEffect.setFloat("pointSize",this.pointSize),this._useLogarithmicDepth&&n.MaterialHelper.BindLogDepth(o,a,r),r.bindEyePosition(a)),this._activeEffect.setColor4("vDiffuseColor",this.diffuseColor,this.alpha*t.visibility),o.SPECULARTERM&&this._activeEffect.setColor4("vSpecularColor",this.specularColor,this.specularPower),r.lightsEnabled&&!this.disableLighting&&n.MaterialHelper.BindLights(r,t,this._activeEffect,o,this.maxSimultaneousLights),r.fogEnabled&&t.applyFog&&r.fogMode!==n.Scene.FOGMODE_NONE&&this._activeEffect.setMatrix("view",r.getViewMatrix()),n.MaterialHelper.BindFogParameters(r,t,this._activeEffect),this._afterBind(t,this._activeEffect,i))}},t.prototype.getAnimatables=function(){var e=[];return this.mixTexture&&this.mixTexture.animations&&this.mixTexture.animations.length>0&&e.push(this.mixTexture),e},t.prototype.getActiveTextures=function(){var t=e.prototype.getActiveTextures.call(this);return this._diffuseTextureX&&t.push(this._diffuseTextureX),this._diffuseTextureY&&t.push(this._diffuseTextureY),this._diffuseTextureZ&&t.push(this._diffuseTextureZ),this._normalTextureX&&t.push(this._normalTextureX),this._normalTextureY&&t.push(this._normalTextureY),this._normalTextureZ&&t.push(this._normalTextureZ),t},t.prototype.hasTexture=function(t){return!!e.prototype.hasTexture.call(this,t)||(this._diffuseTextureX===t||(this._diffuseTextureY===t||(this._diffuseTextureZ===t||(this._normalTextureX===t||(this._normalTextureY===t||this._normalTextureZ===t)))))},t.prototype.dispose=function(t){this.mixTexture&&this.mixTexture.dispose(),e.prototype.dispose.call(this,t)},t.prototype.clone=function(e){var i=this;return n.SerializationHelper.Clone((function(){return new t(e,i.getScene())}),this)},t.prototype.serialize=function(){var t=e.prototype.serialize.call(this);return t.customType="BABYLON.TriPlanarMaterial",t},t.prototype.getClassName=function(){return"TriPlanarMaterial"},t.Parse=function(e,i,r){return n.SerializationHelper.Parse((function(){return new t(e.name,i)}),e,i,r)},(0,r.__decorate)([(0,n.serializeAsTexture)()],t.prototype,"mixTexture",void 0),(0,r.__decorate)([(0,n.serializeAsTexture)("diffuseTextureX")],t.prototype,"_diffuseTextureX",void 0),(0,r.__decorate)([(0,n.expandToProperty)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"diffuseTextureX",void 0),(0,r.__decorate)([(0,n.serializeAsTexture)("diffuseTexturY")],t.prototype,"_diffuseTextureY",void 0),(0,r.__decorate)([(0,n.expandToProperty)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"diffuseTextureY",void 0),(0,r.__decorate)([(0,n.serializeAsTexture)("diffuseTextureZ")],t.prototype,"_diffuseTextureZ",void 0),(0,r.__decorate)([(0,n.expandToProperty)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"diffuseTextureZ",void 0),(0,r.__decorate)([(0,n.serializeAsTexture)("normalTextureX")],t.prototype,"_normalTextureX",void 0),(0,r.__decorate)([(0,n.expandToProperty)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"normalTextureX",void 0),(0,r.__decorate)([(0,n.serializeAsTexture)("normalTextureY")],t.prototype,"_normalTextureY",void 0),(0,r.__decorate)([(0,n.expandToProperty)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"normalTextureY",void 0),(0,r.__decorate)([(0,n.serializeAsTexture)("normalTextureZ")],t.prototype,"_normalTextureZ",void 0),(0,r.__decorate)([(0,n.expandToProperty)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"normalTextureZ",void 0),(0,r.__decorate)([(0,n.serialize)()],t.prototype,"tileSize",void 0),(0,r.__decorate)([(0,n.serializeAsColor3)()],t.prototype,"diffuseColor",void 0),(0,r.__decorate)([(0,n.serializeAsColor3)()],t.prototype,"specularColor",void 0),(0,r.__decorate)([(0,n.serialize)()],t.prototype,"specularPower",void 0),(0,r.__decorate)([(0,n.serialize)("disableLighting")],t.prototype,"_disableLighting",void 0),(0,r.__decorate)([(0,n.expandToProperty)("_markAllSubMeshesAsLightsDirty")],t.prototype,"disableLighting",void 0),(0,r.__decorate)([(0,n.serialize)("maxSimultaneousLights")],t.prototype,"_maxSimultaneousLights",void 0),(0,r.__decorate)([(0,n.expandToProperty)("_markAllSubMeshesAsLightsDirty")],t.prototype,"maxSimultaneousLights",void 0),t}(n.PushMaterial);(0,n.RegisterClass)("BABYLON.TriPlanarMaterial",a)},"../../../dev/materials/src/triPlanar/triplanar.fragment.ts":
/*!******************************************************************!*\
  !*** ../../../dev/materials/src/triPlanar/triplanar.fragment.ts ***!
  \******************************************************************/(e,t,i)=>{i.r(t),i.d(t,{triplanarPixelShader:()=>a});var r=i(/*! babylonjs/Shaders/ShadersInclude/imageProcessingCompatibility */"babylonjs/Materials/effect"),n="triplanarPixelShader",o="precision highp float;uniform vec4 vEyePosition;uniform vec4 vDiffuseColor;\n#ifdef SPECULARTERM\nuniform vec4 vSpecularColor;\n#endif\nvarying vec3 vPositionW;\n#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR) && defined(INSTANCES)\nvarying vec4 vColor;\n#endif\n#include<helperFunctions>\n#include<__decl__lightFragment>[0..maxSimultaneousLights]\n#ifdef DIFFUSEX\nvarying vec2 vTextureUVX;uniform sampler2D diffuseSamplerX;\n#ifdef BUMPX\nuniform sampler2D normalSamplerX;\n#endif\n#endif\n#ifdef DIFFUSEY\nvarying vec2 vTextureUVY;uniform sampler2D diffuseSamplerY;\n#ifdef BUMPY\nuniform sampler2D normalSamplerY;\n#endif\n#endif\n#ifdef DIFFUSEZ\nvarying vec2 vTextureUVZ;uniform sampler2D diffuseSamplerZ;\n#ifdef BUMPZ\nuniform sampler2D normalSamplerZ;\n#endif\n#endif\n#ifdef NORMAL\nvarying mat3 tangentSpace;\n#endif\n#ifdef LOGARITHMICDEPTH\n#extension GL_EXT_frag_depth : enable\n#endif\n#include<logDepthDeclaration>\n#include<lightsFragmentFunctions>\n#include<shadowsFragmentFunctions>\n#include<clipPlaneFragmentDeclaration>\n#include<fogFragmentDeclaration>\n#define CUSTOM_FRAGMENT_DEFINITIONS\nvoid main(void) {\n#define CUSTOM_FRAGMENT_MAIN_BEGIN\n#include<clipPlaneFragment>\nvec3 viewDirectionW=normalize(vEyePosition.xyz-vPositionW);vec4 baseColor=vec4(0.,0.,0.,1.);vec3 diffuseColor=vDiffuseColor.rgb;float alpha=vDiffuseColor.a;\n#ifdef NORMAL\nvec3 normalW=tangentSpace[2];\n#else\nvec3 normalW=vec3(1.0,1.0,1.0);\n#endif\nvec4 baseNormal=vec4(0.0,0.0,0.0,1.0);normalW*=normalW;\n#ifdef DIFFUSEX\nbaseColor+=texture2D(diffuseSamplerX,vTextureUVX)*normalW.x;\n#ifdef BUMPX\nbaseNormal+=texture2D(normalSamplerX,vTextureUVX)*normalW.x;\n#endif\n#endif\n#ifdef DIFFUSEY\nbaseColor+=texture2D(diffuseSamplerY,vTextureUVY)*normalW.y;\n#ifdef BUMPY\nbaseNormal+=texture2D(normalSamplerY,vTextureUVY)*normalW.y;\n#endif\n#endif\n#ifdef DIFFUSEZ\nbaseColor+=texture2D(diffuseSamplerZ,vTextureUVZ)*normalW.z;\n#ifdef BUMPZ\nbaseNormal+=texture2D(normalSamplerZ,vTextureUVZ)*normalW.z;\n#endif\n#endif\n#ifdef NORMAL\nnormalW=normalize((2.0*baseNormal.xyz-1.0)*tangentSpace);\n#endif\n#ifdef ALPHATEST\nif (baseColor.a<0.4)\ndiscard;\n#endif\n#include<depthPrePass>\n#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR) && defined(INSTANCES)\nbaseColor.rgb*=vColor.rgb;\n#endif\nvec3 diffuseBase=vec3(0.,0.,0.);lightingInfo info;float shadow=1.;float aggShadow=0.;float numLights=0.;\n#ifdef SPECULARTERM\nfloat glossiness=vSpecularColor.a;vec3 specularBase=vec3(0.,0.,0.);vec3 specularColor=vSpecularColor.rgb;\n#else\nfloat glossiness=0.;\n#endif\n#include<lightFragment>[0..maxSimultaneousLights]\n#if defined(VERTEXALPHA) || defined(INSTANCESCOLOR) && defined(INSTANCES)\nalpha*=vColor.a;\n#endif\n#ifdef SPECULARTERM\nvec3 finalSpecular=specularBase*specularColor;\n#else\nvec3 finalSpecular=vec3(0.0);\n#endif\nvec3 finalDiffuse=clamp(diffuseBase*diffuseColor,0.0,1.0)*baseColor.rgb;vec4 color=vec4(finalDiffuse+finalSpecular,alpha);\n#include<logDepthFragment>\n#include<fogFragment>\ngl_FragColor=color;\n#include<imageProcessingCompatibility>\n#define CUSTOM_FRAGMENT_MAIN_END\n}\n";r.ShaderStore.ShadersStore[n]=o;var a={name:n,shader:o}},"../../../dev/materials/src/triPlanar/triplanar.vertex.ts":
/*!****************************************************************!*\
  !*** ../../../dev/materials/src/triPlanar/triplanar.vertex.ts ***!
  \****************************************************************/(e,t,i)=>{i.r(t),i.d(t,{triplanarVertexShader:()=>a});var r=i(/*! babylonjs/Shaders/ShadersInclude/vertexColorMixing */"babylonjs/Materials/effect"),n="triplanarVertexShader",o="precision highp float;attribute vec3 position;\n#ifdef NORMAL\nattribute vec3 normal;\n#endif\n#ifdef VERTEXCOLOR\nattribute vec4 color;\n#endif\n#include<helperFunctions>\n#include<bonesDeclaration>\n#include<bakedVertexAnimationDeclaration>\n#include<instancesDeclaration>\nuniform mat4 view;uniform mat4 viewProjection;\n#ifdef DIFFUSEX\nvarying vec2 vTextureUVX;\n#endif\n#ifdef DIFFUSEY\nvarying vec2 vTextureUVY;\n#endif\n#ifdef DIFFUSEZ\nvarying vec2 vTextureUVZ;\n#endif\nuniform float tileSize;\n#ifdef POINTSIZE\nuniform float pointSize;\n#endif\nvarying vec3 vPositionW;\n#ifdef NORMAL\nvarying mat3 tangentSpace;\n#endif\n#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR) && defined(INSTANCES)\nvarying vec4 vColor;\n#endif\n#include<clipPlaneVertexDeclaration>\n#include<logDepthDeclaration>\n#include<fogVertexDeclaration>\n#include<__decl__lightFragment>[0..maxSimultaneousLights]\n#define CUSTOM_VERTEX_DEFINITIONS\nvoid main(void)\n{\n#define CUSTOM_VERTEX_MAIN_BEGIN\n#include<instancesVertex>\n#include<bonesVertex>\n#include<bakedVertexAnimation>\nvec4 worldPos=finalWorld*vec4(position,1.0);gl_Position=viewProjection*worldPos;vPositionW=vec3(worldPos);\n#ifdef DIFFUSEX\nvTextureUVX=worldPos.zy/tileSize;\n#endif\n#ifdef DIFFUSEY\nvTextureUVY=worldPos.xz/tileSize;\n#endif\n#ifdef DIFFUSEZ\nvTextureUVZ=worldPos.xy/tileSize;\n#endif\n#ifdef NORMAL\nvec3 xtan=vec3(0,0,1);vec3 xbin=vec3(0,1,0);vec3 ytan=vec3(1,0,0);vec3 ybin=vec3(0,0,1);vec3 ztan=vec3(1,0,0);vec3 zbin=vec3(0,1,0);vec3 normalizedNormal=normalize(normal);normalizedNormal*=normalizedNormal;vec3 worldBinormal=normalize(xbin*normalizedNormal.x+ybin*normalizedNormal.y+zbin*normalizedNormal.z);vec3 worldTangent=normalize(xtan*normalizedNormal.x+ytan*normalizedNormal.y+ztan*normalizedNormal.z);mat3 normalWorld=mat3(finalWorld);\n#ifdef NONUNIFORMSCALING\nnormalWorld=transposeMat3(inverseMat3(normalWorld));\n#endif\nworldTangent=normalize((normalWorld*worldTangent).xyz);worldBinormal=normalize((normalWorld*worldBinormal).xyz);vec3 worldNormal=normalize((normalWorld*normalize(normal)).xyz);tangentSpace[0]=worldTangent;tangentSpace[1]=worldBinormal;tangentSpace[2]=worldNormal;\n#endif\n#include<clipPlaneVertex>\n#include<logDepthVertex>\n#include<fogVertex>\n#include<shadowsVertex>[0..maxSimultaneousLights]\n#include<vertexColorMixing>\n#if defined(POINTSIZE) && !defined(WEBGPU)\ngl_PointSize=pointSize;\n#endif\n#define CUSTOM_VERTEX_MAIN_END\n}\n";r.ShaderStore.ShadersStore[n]=o;var a={name:n,shader:o}},"../../../dev/materials/src/water/index.ts":
/*!*************************************************!*\
  !*** ../../../dev/materials/src/water/index.ts ***!
  \*************************************************/(e,t,i)=>{i.r(t),i.d(t,{WaterMaterial:()=>r.WaterMaterial});var r=i(/*! ./waterMaterial */"../../../dev/materials/src/water/waterMaterial.ts")},"../../../dev/materials/src/water/water.fragment.ts":
/*!**********************************************************!*\
  !*** ../../../dev/materials/src/water/water.fragment.ts ***!
  \**********************************************************/(e,t,i)=>{i.r(t),i.d(t,{waterPixelShader:()=>a});var r=i(/*! babylonjs/Shaders/ShadersInclude/fogFragment */"babylonjs/Materials/effect"),n="waterPixelShader",o="#ifdef LOGARITHMICDEPTH\n#extension GL_EXT_frag_depth : enable\n#endif\nprecision highp float;uniform vec4 vEyePosition;uniform vec4 vDiffuseColor;\n#ifdef SPECULARTERM\nuniform vec4 vSpecularColor;\n#endif\nvarying vec3 vPositionW;\n#ifdef NORMAL\nvarying vec3 vNormalW;\n#endif\n#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR) && defined(INSTANCES)\nvarying vec4 vColor;\n#endif\n#include<helperFunctions>\n#include<imageProcessingDeclaration>\n#include<imageProcessingFunctions>\n#include<__decl__lightFragment>[0..maxSimultaneousLights]\n#include<lightsFragmentFunctions>\n#include<shadowsFragmentFunctions>\n#ifdef BUMP\nvarying vec2 vNormalUV;\n#ifdef BUMPSUPERIMPOSE\nvarying vec2 vNormalUV2;\n#endif\nuniform sampler2D normalSampler;uniform vec2 vNormalInfos;\n#endif\nuniform sampler2D refractionSampler;uniform sampler2D reflectionSampler;const float LOG2=1.442695;uniform vec3 cameraPosition;uniform vec4 waterColor;uniform float colorBlendFactor;uniform vec4 waterColor2;uniform float colorBlendFactor2;uniform float bumpHeight;uniform float time;varying vec3 vRefractionMapTexCoord;varying vec3 vReflectionMapTexCoord;\n#include<clipPlaneFragmentDeclaration>\n#include<logDepthDeclaration>\n#include<fogFragmentDeclaration>\n#define CUSTOM_FRAGMENT_DEFINITIONS\nvoid main(void) {\n#define CUSTOM_FRAGMENT_MAIN_BEGIN\n#include<clipPlaneFragment>\nvec3 viewDirectionW=normalize(vEyePosition.xyz-vPositionW);vec4 baseColor=vec4(1.,1.,1.,1.);vec3 diffuseColor=vDiffuseColor.rgb;float alpha=vDiffuseColor.a;\n#ifdef BUMP\n#ifdef BUMPSUPERIMPOSE\nbaseColor=0.6*texture2D(normalSampler,vNormalUV)+0.4*texture2D(normalSampler,vec2(vNormalUV2.x,vNormalUV2.y));\n#else\nbaseColor=texture2D(normalSampler,vNormalUV);\n#endif\nvec3 bumpColor=baseColor.rgb;\n#ifdef ALPHATEST\nif (baseColor.a<0.4)\ndiscard;\n#endif\nbaseColor.rgb*=vNormalInfos.y;\n#else\nvec3 bumpColor=vec3(1.0);\n#endif\n#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR) && defined(INSTANCES)\nbaseColor.rgb*=vColor.rgb;\n#endif\n#ifdef NORMAL\nvec2 perturbation=bumpHeight*(baseColor.rg-0.5);\n#ifdef BUMPAFFECTSREFLECTION\nvec3 normalW=normalize(vNormalW+vec3(perturbation.x*8.0,0.0,perturbation.y*8.0));if (normalW.y<0.0) {normalW.y=-normalW.y;}\n#else\nvec3 normalW=normalize(vNormalW);\n#endif\n#else\nvec3 normalW=vec3(1.0,1.0,1.0);vec2 perturbation=bumpHeight*(vec2(1.0,1.0)-0.5);\n#endif\n#ifdef FRESNELSEPARATE\n#ifdef REFLECTION\nvec2 projectedRefractionTexCoords=clamp(vRefractionMapTexCoord.xy/vRefractionMapTexCoord.z+perturbation*0.5,0.0,1.0);vec4 refractiveColor=texture2D(refractionSampler,projectedRefractionTexCoords);\n#ifdef IS_REFRACTION_LINEAR\nrefractiveColor.rgb=toGammaSpace(refractiveColor.rgb);\n#endif\nvec2 projectedReflectionTexCoords=clamp(vec2(\nvReflectionMapTexCoord.x/vReflectionMapTexCoord.z+perturbation.x*0.3,\nvReflectionMapTexCoord.y/vReflectionMapTexCoord.z+perturbation.y\n),0.0,1.0);vec4 reflectiveColor=texture2D(reflectionSampler,projectedReflectionTexCoords);\n#ifdef IS_REFLECTION_LINEAR\nreflectiveColor.rgb=toGammaSpace(reflectiveColor.rgb);\n#endif\nvec3 upVector=vec3(0.0,1.0,0.0);float fresnelTerm=clamp(abs(pow(dot(viewDirectionW,upVector),3.0)),0.05,0.65);float IfresnelTerm=1.0-fresnelTerm;refractiveColor=colorBlendFactor*waterColor+(1.0-colorBlendFactor)*refractiveColor;reflectiveColor=IfresnelTerm*colorBlendFactor2*waterColor+(1.0-colorBlendFactor2*IfresnelTerm)*reflectiveColor;vec4 combinedColor=refractiveColor*fresnelTerm+reflectiveColor*IfresnelTerm;baseColor=combinedColor;\n#endif\nvec3 diffuseBase=vec3(0.,0.,0.);lightingInfo info;float shadow=1.;float aggShadow=0.;float numLights=0.;\n#ifdef SPECULARTERM\nfloat glossiness=vSpecularColor.a;vec3 specularBase=vec3(0.,0.,0.);vec3 specularColor=vSpecularColor.rgb;\n#else\nfloat glossiness=0.;\n#endif\n#include<lightFragment>[0..maxSimultaneousLights]\nvec3 finalDiffuse=clamp(baseColor.rgb,0.0,1.0);\n#if defined(VERTEXALPHA) || defined(INSTANCESCOLOR) && defined(INSTANCES)\nalpha*=vColor.a;\n#endif\n#ifdef SPECULARTERM\nvec3 finalSpecular=specularBase*specularColor;\n#else\nvec3 finalSpecular=vec3(0.0);\n#endif\n#else \n#ifdef REFLECTION\nvec2 projectedRefractionTexCoords=clamp(vRefractionMapTexCoord.xy/vRefractionMapTexCoord.z+perturbation,0.0,1.0);vec4 refractiveColor=texture2D(refractionSampler,projectedRefractionTexCoords);\n#ifdef IS_REFRACTION_LINEAR\nrefractiveColor.rgb=toGammaSpace(refractiveColor.rgb);\n#endif\nvec2 projectedReflectionTexCoords=clamp(vReflectionMapTexCoord.xy/vReflectionMapTexCoord.z+perturbation,0.0,1.0);vec4 reflectiveColor=texture2D(reflectionSampler,projectedReflectionTexCoords);\n#ifdef IS_REFLECTION_LINEAR\nreflectiveColor.rgb=toGammaSpace(reflectiveColor.rgb);\n#endif\nvec3 upVector=vec3(0.0,1.0,0.0);float fresnelTerm=max(dot(viewDirectionW,upVector),0.0);vec4 combinedColor=refractiveColor*fresnelTerm+reflectiveColor*(1.0-fresnelTerm);baseColor=colorBlendFactor*waterColor+(1.0-colorBlendFactor)*combinedColor;\n#endif\nvec3 diffuseBase=vec3(0.,0.,0.);lightingInfo info;float shadow=1.;float aggShadow=0.;float numLights=0.;\n#ifdef SPECULARTERM\nfloat glossiness=vSpecularColor.a;vec3 specularBase=vec3(0.,0.,0.);vec3 specularColor=vSpecularColor.rgb;\n#else\nfloat glossiness=0.;\n#endif\n#include<lightFragment>[0..maxSimultaneousLights]\nvec3 finalDiffuse=clamp(baseColor.rgb,0.0,1.0);\n#if defined(VERTEXALPHA) || defined(INSTANCESCOLOR) && defined(INSTANCES)\nalpha*=vColor.a;\n#endif\n#ifdef SPECULARTERM\nvec3 finalSpecular=specularBase*specularColor;\n#else\nvec3 finalSpecular=vec3(0.0);\n#endif\n#endif\nvec4 color=vec4(finalDiffuse+finalSpecular,alpha);\n#include<logDepthFragment>\n#include<fogFragment>\n#ifdef IMAGEPROCESSINGPOSTPROCESS\ncolor.rgb=toLinearSpace(color.rgb);\n#elif defined(IMAGEPROCESSING)\ncolor.rgb=toLinearSpace(color.rgb);color=applyImageProcessing(color);\n#endif\ngl_FragColor=color;\n#define CUSTOM_FRAGMENT_MAIN_END\n}\n";r.ShaderStore.ShadersStore[n]=o;var a={name:n,shader:o}},"../../../dev/materials/src/water/water.vertex.ts":
/*!********************************************************!*\
  !*** ../../../dev/materials/src/water/water.vertex.ts ***!
  \********************************************************/(e,t,i)=>{i.r(t),i.d(t,{waterVertexShader:()=>a});var r=i(/*! babylonjs/Shaders/ShadersInclude/logDepthVertex */"babylonjs/Materials/effect"),n="waterVertexShader",o="precision highp float;attribute vec3 position;\n#ifdef NORMAL\nattribute vec3 normal;\n#endif\n#ifdef UV1\nattribute vec2 uv;\n#endif\n#ifdef UV2\nattribute vec2 uv2;\n#endif\n#ifdef VERTEXCOLOR\nattribute vec4 color;\n#endif\n#include<bonesDeclaration>\n#include<bakedVertexAnimationDeclaration>\n#include<instancesDeclaration>\nuniform mat4 view;uniform mat4 viewProjection;\n#ifdef BUMP\nvarying vec2 vNormalUV;\n#ifdef BUMPSUPERIMPOSE\nvarying vec2 vNormalUV2;\n#endif\nuniform mat4 normalMatrix;uniform vec2 vNormalInfos;\n#endif\n#ifdef POINTSIZE\nuniform float pointSize;\n#endif\nvarying vec3 vPositionW;\n#ifdef NORMAL\nvarying vec3 vNormalW;\n#endif\n#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR) && defined(INSTANCES)\nvarying vec4 vColor;\n#endif\n#include<clipPlaneVertexDeclaration>\n#include<fogVertexDeclaration>\n#include<__decl__lightFragment>[0..maxSimultaneousLights]\n#include<logDepthDeclaration>\nuniform mat4 reflectionViewProjection;uniform vec2 windDirection;uniform float waveLength;uniform float time;uniform float windForce;uniform float waveHeight;uniform float waveSpeed;uniform float waveCount;varying vec3 vRefractionMapTexCoord;varying vec3 vReflectionMapTexCoord;\n#define CUSTOM_VERTEX_DEFINITIONS\nvoid main(void) {\n#define CUSTOM_VERTEX_MAIN_BEGIN\n#include<instancesVertex>\n#include<bonesVertex>\n#include<bakedVertexAnimation>\nvec4 worldPos=finalWorld*vec4(position,1.0);vPositionW=vec3(worldPos);\n#ifdef NORMAL\nvNormalW=normalize(vec3(finalWorld*vec4(normal,0.0)));\n#endif\n#ifndef UV1\nvec2 uv=vec2(0.,0.);\n#endif\n#ifndef UV2\nvec2 uv2=vec2(0.,0.);\n#endif\n#ifdef BUMP\nif (vNormalInfos.x==0.)\n{vNormalUV=vec2(normalMatrix*vec4((uv*1.0)/waveLength+time*windForce*windDirection,1.0,0.0));\n#ifdef BUMPSUPERIMPOSE\nvNormalUV2=vec2(normalMatrix*vec4((uv*0.721)/waveLength+time*1.2*windForce*windDirection,1.0,0.0));\n#endif\n}\nelse\n{vNormalUV=vec2(normalMatrix*vec4((uv2*1.0)/waveLength+time*windForce*windDirection ,1.0,0.0));\n#ifdef BUMPSUPERIMPOSE\nvNormalUV2=vec2(normalMatrix*vec4((uv2*0.721)/waveLength+time*1.2*windForce*windDirection ,1.0,0.0));\n#endif\n}\n#endif\n#include<clipPlaneVertex>\n#include<fogVertex>\n#include<shadowsVertex>[0..maxSimultaneousLights]\n#include<vertexColorMixing>\n#if defined(POINTSIZE) && !defined(WEBGPU)\ngl_PointSize=pointSize;\n#endif\nfloat finalWaveCount=1.0/(waveCount*0.5);\n#ifdef USE_WORLD_COORDINATES\nvec3 p=worldPos.xyz;\n#else\nvec3 p=position;\n#endif\nfloat newY=(sin(((p.x/finalWaveCount)+time*waveSpeed))*waveHeight*windDirection.x*5.0)\n+ (cos(((p.z/finalWaveCount)+ time*waveSpeed))*waveHeight*windDirection.y*5.0);p.y+=abs(newY);\n#ifdef USE_WORLD_COORDINATES\ngl_Position=viewProjection*vec4(p,1.0);\n#else\ngl_Position=viewProjection*finalWorld*vec4(p,1.0);\n#endif\n#ifdef REFLECTION\nvRefractionMapTexCoord.x=0.5*(gl_Position.w+gl_Position.x);vRefractionMapTexCoord.y=0.5*(gl_Position.w+gl_Position.y);vRefractionMapTexCoord.z=gl_Position.w;worldPos=reflectionViewProjection*finalWorld*vec4(position,1.0);vReflectionMapTexCoord.x=0.5*(worldPos.w+worldPos.x);vReflectionMapTexCoord.y=0.5*(worldPos.w+worldPos.y);vReflectionMapTexCoord.z=worldPos.w;\n#endif\n#include<logDepthVertex>\n#define CUSTOM_VERTEX_MAIN_END\n}\n";r.ShaderStore.ShadersStore[n]=o;var a={name:n,shader:o}},"../../../dev/materials/src/water/waterMaterial.ts":
/*!*********************************************************!*\
  !*** ../../../dev/materials/src/water/waterMaterial.ts ***!
  \*********************************************************/(e,t,i)=>{i.r(t),i.d(t,{WaterMaterial:()=>a});var r=i(/*! tslib */"../../../../node_modules/tslib/tslib.es6.mjs"),n=i(/*! babylonjs/Materials/clipPlaneMaterialHelper */"babylonjs/Materials/effect"),o=(i(/*! ./water.fragment */"../../../dev/materials/src/water/water.fragment.ts"),i(/*! ./water.vertex */"../../../dev/materials/src/water/water.vertex.ts"),function(e){function t(){var t=e.call(this)||this;return t.BUMP=!1,t.REFLECTION=!1,t.CLIPPLANE=!1,t.CLIPPLANE2=!1,t.CLIPPLANE3=!1,t.CLIPPLANE4=!1,t.CLIPPLANE5=!1,t.CLIPPLANE6=!1,t.ALPHATEST=!1,t.DEPTHPREPASS=!1,t.POINTSIZE=!1,t.FOG=!1,t.NORMAL=!1,t.UV1=!1,t.UV2=!1,t.VERTEXCOLOR=!1,t.VERTEXALPHA=!1,t.NUM_BONE_INFLUENCERS=0,t.BonesPerMesh=0,t.INSTANCES=!1,t.INSTANCESCOLOR=!1,t.SPECULARTERM=!1,t.LOGARITHMICDEPTH=!1,t.USE_REVERSE_DEPTHBUFFER=!1,t.FRESNELSEPARATE=!1,t.BUMPSUPERIMPOSE=!1,t.BUMPAFFECTSREFLECTION=!1,t.USE_WORLD_COORDINATES=!1,t.IMAGEPROCESSING=!1,t.VIGNETTE=!1,t.VIGNETTEBLENDMODEMULTIPLY=!1,t.VIGNETTEBLENDMODEOPAQUE=!1,t.TONEMAPPING=!1,t.TONEMAPPING_ACES=!1,t.CONTRAST=!1,t.EXPOSURE=!1,t.COLORCURVES=!1,t.COLORGRADING=!1,t.COLORGRADING3D=!1,t.SAMPLER3DGREENDEPTH=!1,t.SAMPLER3DBGRMAP=!1,t.DITHER=!1,t.IMAGEPROCESSINGPOSTPROCESS=!1,t.SKIPFINALCOLORCLAMP=!1,t.rebuild(),t}return(0,r.__extends)(t,e),t}(n.MaterialDefines)),a=function(e){function t(t,i,r){void 0===r&&(r=new n.Vector2(512,512));var o=e.call(this,t,i)||this;return o.renderTargetSize=r,o.diffuseColor=new n.Color3(1,1,1),o.specularColor=new n.Color3(0,0,0),o.specularPower=64,o._disableLighting=!1,o._maxSimultaneousLights=4,o.windForce=6,o.windDirection=new n.Vector2(0,1),o.waveHeight=.4,o.bumpHeight=.4,o._bumpSuperimpose=!1,o._fresnelSeparate=!1,o._bumpAffectsReflection=!1,o.waterColor=new n.Color3(.1,.1,.6),o.colorBlendFactor=.2,o.waterColor2=new n.Color3(.1,.1,.6),o.colorBlendFactor2=.2,o.waveLength=.1,o.waveSpeed=1,o.waveCount=20,o.disableClipPlane=!1,o._useWorldCoordinatesForWaveDeformation=!1,o._renderTargets=new n.SmartArray(16),o._mesh=null,o._reflectionTransform=n.Matrix.Zero(),o._lastTime=0,o._lastDeltaTime=0,o._createRenderTargets(o.getScene(),r),o.getRenderTargetTextures=function(){return o._renderTargets.reset(),o._renderTargets.push(o._reflectionRTT),o._renderTargets.push(o._refractionRTT),o._renderTargets},o._imageProcessingConfiguration=o.getScene().imageProcessingConfiguration,o._imageProcessingConfiguration&&(o._imageProcessingObserver=o._imageProcessingConfiguration.onUpdateParameters.add((function(){o._markAllSubMeshesAsImageProcessingDirty()}))),o}return(0,r.__extends)(t,e),Object.defineProperty(t.prototype,"hasRenderTargetTextures",{get:function(){return!0},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"refractionTexture",{get:function(){return this._refractionRTT},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"reflectionTexture",{get:function(){return this._reflectionRTT},enumerable:!1,configurable:!0}),t.prototype.addToRenderList=function(e){this._refractionRTT&&this._refractionRTT.renderList&&this._refractionRTT.renderList.push(e),this._reflectionRTT&&this._reflectionRTT.renderList&&this._reflectionRTT.renderList.push(e)},t.prototype.removeFromRenderList=function(e){var t;this._refractionRTT&&this._refractionRTT.renderList&&(-1!==(t=this._refractionRTT.renderList.indexOf(e))&&this._refractionRTT.renderList.splice(t,1));this._reflectionRTT&&this._reflectionRTT.renderList&&(-1!==(t=this._reflectionRTT.renderList.indexOf(e))&&this._reflectionRTT.renderList.splice(t,1))},t.prototype.enableRenderTargets=function(e){var t=e?1:0;this._refractionRTT&&(this._refractionRTT.refreshRate=t),this._reflectionRTT&&(this._reflectionRTT.refreshRate=t)},t.prototype.getRenderList=function(){return this._refractionRTT?this._refractionRTT.renderList:[]},Object.defineProperty(t.prototype,"renderTargetsEnabled",{get:function(){return!(this._refractionRTT&&0===this._refractionRTT.refreshRate)},enumerable:!1,configurable:!0}),t.prototype.needAlphaBlending=function(){return this.alpha<1},t.prototype.needAlphaTesting=function(){return!1},t.prototype.getAlphaTestTexture=function(){return null},t.prototype.isReadyForSubMesh=function(e,t,i){var r=t._drawWrapper;if(this.isFrozen&&r.effect&&r._wasPreviouslyReady&&r._wasPreviouslyUsingInstances===i)return!0;t.materialDefines||(t.materialDefines=new o);var a=t.materialDefines,s=this.getScene();if(this._isReadyForSubMesh(t))return!0;var l=s.getEngine();if(a._areTexturesDirty&&(a._needUVs=!1,s.texturesEnabled)){if(this.bumpTexture&&n.MaterialFlags.BumpTextureEnabled){if(!this.bumpTexture.isReady())return!1;a._needUVs=!0,a.BUMP=!0}n.MaterialFlags.ReflectionTextureEnabled&&(a.REFLECTION=!0)}if(n.MaterialHelper.PrepareDefinesForFrameBoundValues(s,l,this,a,!!i),n.MaterialHelper.PrepareDefinesForMisc(e,s,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this._shouldTurnAlphaTestOn(e),a),a._areMiscDirty&&(a.FRESNELSEPARATE=this._fresnelSeparate,a.BUMPSUPERIMPOSE=this._bumpSuperimpose,a.BUMPAFFECTSREFLECTION=this._bumpAffectsReflection,a.USE_WORLD_COORDINATES=this._useWorldCoordinatesForWaveDeformation),a._needNormals=n.MaterialHelper.PrepareDefinesForLights(s,e,a,!0,this._maxSimultaneousLights,this._disableLighting),a._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(a),a.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,a.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(n.MaterialHelper.PrepareDefinesForAttributes(e,a,!0,!0),this._mesh=e,this._waitingRenderList){for(var f=0;f<this._waitingRenderList.length;f++)this.addToRenderList(s.getNodeById(this._waitingRenderList[f]));this._waitingRenderList=null}if(a.isDirty){a.markAsProcessed(),s.resetCachedMaterial();var u=new n.EffectFallbacks;a.FOG&&u.addFallback(1,"FOG"),a.LOGARITHMICDEPTH&&u.addFallback(0,"LOGARITHMICDEPTH"),n.MaterialHelper.HandleFallbacksForShadows(a,u,this.maxSimultaneousLights),a.NUM_BONE_INFLUENCERS>0&&u.addCPUSkinningFallback(0,e);var d=[n.VertexBuffer.PositionKind];a.NORMAL&&d.push(n.VertexBuffer.NormalKind),a.UV1&&d.push(n.VertexBuffer.UVKind),a.UV2&&d.push(n.VertexBuffer.UV2Kind),a.VERTEXCOLOR&&d.push(n.VertexBuffer.ColorKind),n.MaterialHelper.PrepareAttributesForBones(d,e,a,u),n.MaterialHelper.PrepareAttributesForInstances(d,a);var c=a.toString(),p=["world","view","viewProjection","vEyePosition","vLightsType","vDiffuseColor","vSpecularColor","vFogInfos","vFogColor","pointSize","vNormalInfos","mBones","normalMatrix","logarithmicDepthConstant","reflectionViewProjection","windDirection","waveLength","time","windForce","cameraPosition","bumpHeight","waveHeight","waterColor","waterColor2","colorBlendFactor","colorBlendFactor2","waveSpeed","waveCount"],h=["normalSampler","refractionSampler","reflectionSampler"],m=[];n.ImageProcessingConfiguration&&(n.ImageProcessingConfiguration.PrepareUniforms(p,a),n.ImageProcessingConfiguration.PrepareSamplers(h,a)),(0,n.addClipPlaneUniforms)(p),n.MaterialHelper.PrepareUniformsAndSamplersList({uniformsNames:p,uniformBuffersNames:m,samplers:h,defines:a,maxSimultaneousLights:this.maxSimultaneousLights}),t.setEffect(s.getEngine().createEffect("water",{attributes:d,uniformsNames:p,uniformBuffersNames:m,samplers:h,defines:c,fallbacks:u,onCompiled:this.onCompiled,onError:this.onError,indexParameters:{maxSimultaneousLights:this._maxSimultaneousLights}},l),a,this._materialContext)}return!(!t.effect||!t.effect.isReady())&&(a._renderId=s.getRenderId(),r._wasPreviouslyReady=!0,r._wasPreviouslyUsingInstances=!!i,!0)},t.prototype.bindForSubMesh=function(e,t,i){var r=this.getScene(),o=i.materialDefines;if(o){var a=i.effect;if(a&&this._mesh){this._activeEffect=a,this.bindOnlyWorldMatrix(e),this._activeEffect.setMatrix("viewProjection",r.getTransformMatrix()),n.MaterialHelper.BindBonesParameters(t,this._activeEffect),this._mustRebind(r,a,i)&&(this.bumpTexture&&n.MaterialFlags.BumpTextureEnabled&&(this._activeEffect.setTexture("normalSampler",this.bumpTexture),this._activeEffect.setFloat2("vNormalInfos",this.bumpTexture.coordinatesIndex,this.bumpTexture.level),this._activeEffect.setMatrix("normalMatrix",this.bumpTexture.getTextureMatrix())),(0,n.bindClipPlane)(a,this,r),this.pointsCloud&&this._activeEffect.setFloat("pointSize",this.pointSize),this._useLogarithmicDepth&&n.MaterialHelper.BindLogDepth(o,a,r),r.bindEyePosition(a)),this._activeEffect.setColor4("vDiffuseColor",this.diffuseColor,this.alpha*t.visibility),o.SPECULARTERM&&this._activeEffect.setColor4("vSpecularColor",this.specularColor,this.specularPower),r.lightsEnabled&&!this.disableLighting&&n.MaterialHelper.BindLights(r,t,this._activeEffect,o,this.maxSimultaneousLights),r.fogEnabled&&t.applyFog&&r.fogMode!==n.Scene.FOGMODE_NONE&&this._activeEffect.setMatrix("view",r.getViewMatrix()),n.MaterialHelper.BindFogParameters(r,t,this._activeEffect),n.MaterialHelper.BindLogDepth(o,this._activeEffect,r),n.MaterialFlags.ReflectionTextureEnabled&&(this._activeEffect.setTexture("refractionSampler",this._refractionRTT),this._activeEffect.setTexture("reflectionSampler",this._reflectionRTT));var s=this._reflectionTransform.multiply(r.getProjectionMatrix()),l=r.getEngine().getDeltaTime();l!==this._lastDeltaTime&&(this._lastDeltaTime=l,this._lastTime+=this._lastDeltaTime),this._activeEffect.setMatrix("reflectionViewProjection",s),this._activeEffect.setVector2("windDirection",this.windDirection),this._activeEffect.setFloat("waveLength",this.waveLength),this._activeEffect.setFloat("time",this._lastTime/1e5),this._activeEffect.setFloat("windForce",this.windForce),this._activeEffect.setFloat("waveHeight",this.waveHeight),this._activeEffect.setFloat("bumpHeight",this.bumpHeight),this._activeEffect.setColor4("waterColor",this.waterColor,1),this._activeEffect.setFloat("colorBlendFactor",this.colorBlendFactor),this._activeEffect.setColor4("waterColor2",this.waterColor2,1),this._activeEffect.setFloat("colorBlendFactor2",this.colorBlendFactor2),this._activeEffect.setFloat("waveSpeed",this.waveSpeed),this._activeEffect.setFloat("waveCount",this.waveCount),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect),this._afterBind(t,this._activeEffect,i)}}},t.prototype._createRenderTargets=function(e,t){var i,r=this;this._refractionRTT=new n.RenderTargetTexture(name+"_refraction",{width:t.x,height:t.y},e,!1,!0),this._refractionRTT.wrapU=n.Constants.TEXTURE_MIRROR_ADDRESSMODE,this._refractionRTT.wrapV=n.Constants.TEXTURE_MIRROR_ADDRESSMODE,this._refractionRTT.ignoreCameraViewport=!0,this._reflectionRTT=new n.RenderTargetTexture(name+"_reflection",{width:t.x,height:t.y},e,!1,!0),this._reflectionRTT.wrapU=n.Constants.TEXTURE_MIRROR_ADDRESSMODE,this._reflectionRTT.wrapV=n.Constants.TEXTURE_MIRROR_ADDRESSMODE,this._reflectionRTT.ignoreCameraViewport=!0;var o,a=null,s=n.Matrix.Zero();this._refractionRTT.onBeforeRender=function(){if(r._mesh&&(i=r._mesh.isVisible,r._mesh.isVisible=!1),!r.disableClipPlane){a=e.clipPlane;var t=r._mesh?r._mesh.absolutePosition.y:0;e.clipPlane=n.Plane.FromPositionAndNormal(new n.Vector3(0,t+.05,0),new n.Vector3(0,1,0))}},this._refractionRTT.onAfterRender=function(){r._mesh&&(r._mesh.isVisible=i),r.disableClipPlane||(e.clipPlane=a)},this._reflectionRTT.onBeforeRender=function(){if(r._mesh&&(i=r._mesh.isVisible,r._mesh.isVisible=!1),!r.disableClipPlane){a=e.clipPlane;var t=r._mesh?r._mesh.absolutePosition.y:0;e.clipPlane=n.Plane.FromPositionAndNormal(new n.Vector3(0,t-.05,0),new n.Vector3(0,-1,0)),n.Matrix.ReflectionToRef(e.clipPlane,s)}o=e.getViewMatrix(),s.multiplyToRef(o,r._reflectionTransform),e.setTransformMatrix(r._reflectionTransform,e.getProjectionMatrix()),e._mirroredCameraPosition=n.Vector3.TransformCoordinates(e.activeCamera.position,s)},this._reflectionRTT.onAfterRender=function(){r._mesh&&(r._mesh.isVisible=i),e.clipPlane=a,e.setTransformMatrix(o,e.getProjectionMatrix()),e._mirroredCameraPosition=null}},t.prototype.getAnimatables=function(){var e=[];return this.bumpTexture&&this.bumpTexture.animations&&this.bumpTexture.animations.length>0&&e.push(this.bumpTexture),this._reflectionRTT&&this._reflectionRTT.animations&&this._reflectionRTT.animations.length>0&&e.push(this._reflectionRTT),this._refractionRTT&&this._refractionRTT.animations&&this._refractionRTT.animations.length>0&&e.push(this._refractionRTT),e},t.prototype.getActiveTextures=function(){var t=e.prototype.getActiveTextures.call(this);return this._bumpTexture&&t.push(this._bumpTexture),t},t.prototype.hasTexture=function(t){return!!e.prototype.hasTexture.call(this,t)||this._bumpTexture===t},t.prototype.dispose=function(t){this.bumpTexture&&this.bumpTexture.dispose();var i=this.getScene().customRenderTargets.indexOf(this._refractionRTT);-1!=i&&this.getScene().customRenderTargets.splice(i,1),i=-1,-1!=(i=this.getScene().customRenderTargets.indexOf(this._reflectionRTT))&&this.getScene().customRenderTargets.splice(i,1),this._reflectionRTT&&this._reflectionRTT.dispose(),this._refractionRTT&&this._refractionRTT.dispose(),this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),e.prototype.dispose.call(this,t)},t.prototype.clone=function(e){var i=this;return n.SerializationHelper.Clone((function(){return new t(e,i.getScene())}),this)},t.prototype.serialize=function(){var t=e.prototype.serialize.call(this);if(t.customType="BABYLON.WaterMaterial",t.renderList=[],this._refractionRTT&&this._refractionRTT.renderList)for(var i=0;i<this._refractionRTT.renderList.length;i++)t.renderList.push(this._refractionRTT.renderList[i].id);return t},t.prototype.getClassName=function(){return"WaterMaterial"},t.Parse=function(e,i,r){var o=n.SerializationHelper.Parse((function(){return new t(e.name,i)}),e,i,r);return o._waitingRenderList=e.renderList,o},t.CreateDefaultMesh=function(e,t){return(0,n.CreateGround)(e,{width:512,height:512,subdivisions:32,updatable:!1},t)},(0,r.__decorate)([(0,n.serializeAsTexture)("bumpTexture")],t.prototype,"_bumpTexture",void 0),(0,r.__decorate)([(0,n.expandToProperty)("_markAllSubMeshesAsTexturesDirty")],t.prototype,"bumpTexture",void 0),(0,r.__decorate)([(0,n.serializeAsColor3)()],t.prototype,"diffuseColor",void 0),(0,r.__decorate)([(0,n.serializeAsColor3)()],t.prototype,"specularColor",void 0),(0,r.__decorate)([(0,n.serialize)()],t.prototype,"specularPower",void 0),(0,r.__decorate)([(0,n.serialize)("disableLighting")],t.prototype,"_disableLighting",void 0),(0,r.__decorate)([(0,n.expandToProperty)("_markAllSubMeshesAsLightsDirty")],t.prototype,"disableLighting",void 0),(0,r.__decorate)([(0,n.serialize)("maxSimultaneousLights")],t.prototype,"_maxSimultaneousLights",void 0),(0,r.__decorate)([(0,n.expandToProperty)("_markAllSubMeshesAsLightsDirty")],t.prototype,"maxSimultaneousLights",void 0),(0,r.__decorate)([(0,n.serialize)()],t.prototype,"windForce",void 0),(0,r.__decorate)([(0,n.serializeAsVector2)()],t.prototype,"windDirection",void 0),(0,r.__decorate)([(0,n.serialize)()],t.prototype,"waveHeight",void 0),(0,r.__decorate)([(0,n.serialize)()],t.prototype,"bumpHeight",void 0),(0,r.__decorate)([(0,n.serialize)("bumpSuperimpose")],t.prototype,"_bumpSuperimpose",void 0),(0,r.__decorate)([(0,n.expandToProperty)("_markAllSubMeshesAsMiscDirty")],t.prototype,"bumpSuperimpose",void 0),(0,r.__decorate)([(0,n.serialize)("fresnelSeparate")],t.prototype,"_fresnelSeparate",void 0),(0,r.__decorate)([(0,n.expandToProperty)("_markAllSubMeshesAsMiscDirty")],t.prototype,"fresnelSeparate",void 0),(0,r.__decorate)([(0,n.serialize)("bumpAffectsReflection")],t.prototype,"_bumpAffectsReflection",void 0),(0,r.__decorate)([(0,n.expandToProperty)("_markAllSubMeshesAsMiscDirty")],t.prototype,"bumpAffectsReflection",void 0),(0,r.__decorate)([(0,n.serializeAsColor3)()],t.prototype,"waterColor",void 0),(0,r.__decorate)([(0,n.serialize)()],t.prototype,"colorBlendFactor",void 0),(0,r.__decorate)([(0,n.serializeAsColor3)()],t.prototype,"waterColor2",void 0),(0,r.__decorate)([(0,n.serialize)()],t.prototype,"colorBlendFactor2",void 0),(0,r.__decorate)([(0,n.serialize)()],t.prototype,"waveLength",void 0),(0,r.__decorate)([(0,n.serialize)()],t.prototype,"waveSpeed",void 0),(0,r.__decorate)([(0,n.serialize)()],t.prototype,"waveCount",void 0),(0,r.__decorate)([(0,n.serialize)()],t.prototype,"disableClipPlane",void 0),(0,r.__decorate)([(0,n.serialize)("useWorldCoordinatesForWaveDeformation")],t.prototype,"_useWorldCoordinatesForWaveDeformation",void 0),(0,r.__decorate)([(0,n.expandToProperty)("_markAllSubMeshesAsMiscDirty")],t.prototype,"useWorldCoordinatesForWaveDeformation",void 0),t}(n.PushMaterial);(0,n.RegisterClass)("BABYLON.WaterMaterial",a)},"../../../lts/materials/src/legacy/legacy.ts":
/*!***************************************************!*\
  !*** ../../../lts/materials/src/legacy/legacy.ts ***!
  \***************************************************/(e,t,i)=>{i.r(t),i.d(t,{CellMaterial:()=>r.CellMaterial,CustomMaterial:()=>r.CustomMaterial,CustomShaderStructure:()=>r.CustomShaderStructure,FireMaterial:()=>r.FireMaterial,FurMaterial:()=>r.FurMaterial,GradientMaterial:()=>r.GradientMaterial,GridMaterial:()=>r.GridMaterial,LavaMaterial:()=>r.LavaMaterial,MixMaterial:()=>r.MixMaterial,NormalMaterial:()=>r.NormalMaterial,PBRCustomMaterial:()=>r.PBRCustomMaterial,ShaderAlbedoParts:()=>r.ShaderAlbedoParts,ShaderAlebdoParts:()=>r.ShaderAlebdoParts,ShaderSpecialParts:()=>r.ShaderSpecialParts,ShadowOnlyMaterial:()=>r.ShadowOnlyMaterial,SimpleMaterial:()=>r.SimpleMaterial,SkyMaterial:()=>r.SkyMaterial,TerrainMaterial:()=>r.TerrainMaterial,TriPlanarMaterial:()=>r.TriPlanarMaterial,WaterMaterial:()=>r.WaterMaterial});var r=i(/*! materials/index */"../../../dev/materials/src/index.ts"),n=void 0!==i.g?i.g:"undefined"!=typeof window?window:void 0;if(void 0!==n)for(var o in n.BABYLON=n.BABYLON||{},r)n.BABYLON[o]=r[o]},"babylonjs/Materials/effect":
/*!****************************************************************************************************!*\
  !*** external {"root":"BABYLON","commonjs":"babylonjs","commonjs2":"babylonjs","amd":"babylonjs"} ***!
  \****************************************************************************************************/t=>{t.exports=e},"../../../../node_modules/tslib/tslib.es6.mjs":
/*!****************************************************!*\
  !*** ../../../../node_modules/tslib/tslib.es6.mjs ***!
  \****************************************************/(e,t,i)=>{i.r(t),i.d(t,{__addDisposableResource:()=>N,__assign:()=>o,__asyncDelegator:()=>y,__asyncGenerator:()=>C,__asyncValues:()=>M,__await:()=>P,__awaiter:()=>h,__classPrivateFieldGet:()=>F,__classPrivateFieldIn:()=>D,__classPrivateFieldSet:()=>O,__createBinding:()=>v,__decorate:()=>s,__disposeResources:()=>w,__esDecorate:()=>f,__exportStar:()=>_,__extends:()=>n,__generator:()=>m,__importDefault:()=>L,__importStar:()=>I,__makeTemplateObject:()=>b,__metadata:()=>p,__param:()=>l,__propKey:()=>d,__read:()=>x,__rest:()=>a,__runInitializers:()=>u,__setFunctionName:()=>c,__spread:()=>T,__spreadArray:()=>E,__spreadArrays:()=>S,__values:()=>g,default:()=>V});var r=function(e,t){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])},r(e,t)};function n(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function i(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)}var o=function(){return o=Object.assign||function(e){for(var t,i=1,r=arguments.length;i<r;i++)for(var n in t=arguments[i])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e},o.apply(this,arguments)};function a(e,t){var i={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(i[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var n=0;for(r=Object.getOwnPropertySymbols(e);n<r.length;n++)t.indexOf(r[n])<0&&Object.prototype.propertyIsEnumerable.call(e,r[n])&&(i[r[n]]=e[r[n]])}return i}function s(e,t,i,r){var n,o=arguments.length,a=o<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,i):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,i,r);else for(var s=e.length-1;s>=0;s--)(n=e[s])&&(a=(o<3?n(a):o>3?n(t,i,a):n(t,i))||a);return o>3&&a&&Object.defineProperty(t,i,a),a}function l(e,t){return function(i,r){t(i,r,e)}}function f(e,t,i,r,n,o){function a(e){if(void 0!==e&&"function"!=typeof e)throw new TypeError("Function expected");return e}for(var s,l=r.kind,f="getter"===l?"get":"setter"===l?"set":"value",u=!t&&e?r.static?e:e.prototype:null,d=t||(u?Object.getOwnPropertyDescriptor(u,r.name):{}),c=!1,p=i.length-1;p>=0;p--){var h={};for(var m in r)h[m]="access"===m?{}:r[m];for(var m in r.access)h.access[m]=r.access[m];h.addInitializer=function(e){if(c)throw new TypeError("Cannot add initializers after decoration has completed");o.push(a(e||null))};var v=(0,i[p])("accessor"===l?{get:d.get,set:d.set}:d[f],h);if("accessor"===l){if(void 0===v)continue;if(null===v||"object"!=typeof v)throw new TypeError("Object expected");(s=a(v.get))&&(d.get=s),(s=a(v.set))&&(d.set=s),(s=a(v.init))&&n.unshift(s)}else(s=a(v))&&("field"===l?n.unshift(s):d[f]=s)}u&&Object.defineProperty(u,r.name,d),c=!0}function u(e,t,i){for(var r=arguments.length>2,n=0;n<t.length;n++)i=r?t[n].call(e,i):t[n].call(e);return r?i:void 0}function d(e){return"symbol"==typeof e?e:"".concat(e)}function c(e,t,i){return"symbol"==typeof t&&(t=t.description?"[".concat(t.description,"]"):""),Object.defineProperty(e,"name",{configurable:!0,value:i?"".concat(i," ",t):t})}function p(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)}function h(e,t,i,r){return new(i||(i=Promise))((function(n,o){function a(e){try{l(r.next(e))}catch(e){o(e)}}function s(e){try{l(r.throw(e))}catch(e){o(e)}}function l(e){var t;e.done?n(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(a,s)}l((r=r.apply(e,t||[])).next())}))}function m(e,t){var i,r,n,o,a={label:0,sent:function(){if(1&n[0])throw n[1];return n[1]},trys:[],ops:[]};return o={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function s(s){return function(l){return function(s){if(i)throw new TypeError("Generator is already executing.");for(;o&&(o=0,s[0]&&(a=0)),a;)try{if(i=1,r&&(n=2&s[0]?r.return:s[0]?r.throw||((n=r.return)&&n.call(r),0):r.next)&&!(n=n.call(r,s[1])).done)return n;switch(r=0,n&&(s=[2&s[0],n.value]),s[0]){case 0:case 1:n=s;break;case 4:return a.label++,{value:s[1],done:!1};case 5:a.label++,r=s[1],s=[0];continue;case 7:s=a.ops.pop(),a.trys.pop();continue;default:if(!(n=a.trys,(n=n.length>0&&n[n.length-1])||6!==s[0]&&2!==s[0])){a=0;continue}if(3===s[0]&&(!n||s[1]>n[0]&&s[1]<n[3])){a.label=s[1];break}if(6===s[0]&&a.label<n[1]){a.label=n[1],n=s;break}if(n&&a.label<n[2]){a.label=n[2],a.ops.push(s);break}n[2]&&a.ops.pop(),a.trys.pop();continue}s=t.call(e,a)}catch(e){s=[6,e],r=0}finally{i=n=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,l])}}}var v=Object.create?function(e,t,i,r){void 0===r&&(r=i);var n=Object.getOwnPropertyDescriptor(t,i);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[i]}}),Object.defineProperty(e,r,n)}:function(e,t,i,r){void 0===r&&(r=i),e[r]=t[i]};function _(e,t){for(var i in e)"default"===i||Object.prototype.hasOwnProperty.call(t,i)||v(t,e,i)}function g(e){var t="function"==typeof Symbol&&Symbol.iterator,i=t&&e[t],r=0;if(i)return i.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")}function x(e,t){var i="function"==typeof Symbol&&e[Symbol.iterator];if(!i)return e;var r,n,o=i.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(r=o.next()).done;)a.push(r.value)}catch(e){n={error:e}}finally{try{r&&!r.done&&(i=o.return)&&i.call(o)}finally{if(n)throw n.error}}return a}function T(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(x(arguments[t]));return e}function S(){for(var e=0,t=0,i=arguments.length;t<i;t++)e+=arguments[t].length;var r=Array(e),n=0;for(t=0;t<i;t++)for(var o=arguments[t],a=0,s=o.length;a<s;a++,n++)r[n]=o[a];return r}function E(e,t,i){if(i||2===arguments.length)for(var r,n=0,o=t.length;n<o;n++)!r&&n in t||(r||(r=Array.prototype.slice.call(t,0,n)),r[n]=t[n]);return e.concat(r||Array.prototype.slice.call(t))}function P(e){return this instanceof P?(this.v=e,this):new P(e)}function C(e,t,i){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var r,n=i.apply(e,t||[]),o=[];return r={},a("next"),a("throw"),a("return"),r[Symbol.asyncIterator]=function(){return this},r;function a(e){n[e]&&(r[e]=function(t){return new Promise((function(i,r){o.push([e,t,i,r])>1||s(e,t)}))})}function s(e,t){try{(i=n[e](t)).value instanceof P?Promise.resolve(i.value.v).then(l,f):u(o[0][2],i)}catch(e){u(o[0][3],e)}var i}function l(e){s("next",e)}function f(e){s("throw",e)}function u(e,t){e(t),o.shift(),o.length&&s(o[0][0],o[0][1])}}function y(e){var t,i;return t={},r("next"),r("throw",(function(e){throw e})),r("return"),t[Symbol.iterator]=function(){return this},t;function r(r,n){t[r]=e[r]?function(t){return(i=!i)?{value:P(e[r](t)),done:!1}:n?n(t):t}:n}}function M(e){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var t,i=e[Symbol.asyncIterator];return i?i.call(e):(e=g(e),t={},r("next"),r("throw"),r("return"),t[Symbol.asyncIterator]=function(){return this},t);function r(i){t[i]=e[i]&&function(t){return new Promise((function(r,n){(function(e,t,i,r){Promise.resolve(r).then((function(t){e({value:t,done:i})}),t)})(r,n,(t=e[i](t)).done,t.value)}))}}}function b(e,t){return Object.defineProperty?Object.defineProperty(e,"raw",{value:t}):e.raw=t,e}var A=Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t};function I(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var i in e)"default"!==i&&Object.prototype.hasOwnProperty.call(e,i)&&v(t,e,i);return A(t,e),t}function L(e){return e&&e.__esModule?e:{default:e}}function F(e,t,i,r){if("a"===i&&!r)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!r:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===i?r:"a"===i?r.call(e):r?r.value:t.get(e)}function O(e,t,i,r,n){if("m"===r)throw new TypeError("Private method is not writable");if("a"===r&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===r?n.call(e,i):n?n.value=i:t.set(e,i),i}function D(e,t){if(null===t||"object"!=typeof t&&"function"!=typeof t)throw new TypeError("Cannot use 'in' operator on non-object");return"function"==typeof e?t===e:e.has(t)}function N(e,t,i){if(null!=t){if("object"!=typeof t&&"function"!=typeof t)throw new TypeError("Object expected.");var r;if(i){if(!Symbol.asyncDispose)throw new TypeError("Symbol.asyncDispose is not defined.");r=t[Symbol.asyncDispose]}if(void 0===r){if(!Symbol.dispose)throw new TypeError("Symbol.dispose is not defined.");r=t[Symbol.dispose]}if("function"!=typeof r)throw new TypeError("Object not disposable.");e.stack.push({value:t,dispose:r,async:i})}else i&&e.stack.push({async:!0});return t}var R="function"==typeof SuppressedError?SuppressedError:function(e,t,i){var r=new Error(i);return r.name="SuppressedError",r.error=e,r.suppressed=t,r};function w(e){function t(t){e.error=e.hasError?new R(t,e.error,"An error was suppressed during disposal."):t,e.hasError=!0}return function i(){for(;e.stack.length;){var r=e.stack.pop();try{var n=r.dispose&&r.dispose.call(r.value);if(r.async)return Promise.resolve(n).then(i,(function(e){return t(e),i()}))}catch(e){t(e)}}if(e.hasError)throw e.error}()}const V={__extends:n,__assign:o,__rest:a,__decorate:s,__param:l,__metadata:p,__awaiter:h,__generator:m,__createBinding:v,__exportStar:_,__values:g,__read:x,__spread:T,__spreadArrays:S,__spreadArray:E,__await:P,__asyncGenerator:C,__asyncDelegator:y,__asyncValues:M,__makeTemplateObject:b,__importStar:I,__importDefault:L,__classPrivateFieldGet:F,__classPrivateFieldSet:O,__classPrivateFieldIn:D,__addDisposableResource:N,__disposeResources:w}}},i={};function r(e){var n=i[e];if(void 0!==n)return n.exports;var o=i[e]={exports:{}};return t[e](o,o.exports,r),o.exports}r.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return r.d(t,{a:t}),t},r.d=(e,t)=>{for(var i in t)r.o(t,i)&&!r.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},r.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var n={};return(()=>{
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
r.r(n),r.d(n,{default:()=>t,materials:()=>e});var e=r(/*! @lts/materials/legacy/legacy */"../../../lts/materials/src/legacy/legacy.ts");const t=e})(),n=n.default})()));