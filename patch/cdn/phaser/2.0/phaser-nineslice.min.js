/*!
 * phaser-nineslice - version 2.0.1
 * NineSlice plugin for Phaser.io!
 *
 * Azerion
 * Build at 15-03-2019
 * Released under MIT License
 */
var PhaserNineSlice,__extends=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])};return function(t,i){function r(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(r.prototype=i.prototype,new r)}}();!function(e){var t=function(e){function t(t,i,r,o,n,a,h,s){var c=e.call(this,t,i,r,o,n)||this;return c.baseTexture=c.texture.baseTexture,c.baseFrame=c.texture.frame,null===n||s?s||(s=t.cache.getNineSlice(o)):s=t.cache.getNineSlice(n),void 0===s||(c.topSize=s.top,s.left?c.leftSize=s.left:c.leftSize=c.topSize,s.right?c.rightSize=s.right:c.rightSize=c.leftSize,s.bottom?c.bottomSize=s.bottom:c.bottomSize=c.topSize,c.loadTexture(new Phaser.RenderTexture(c.game,c.localWidth,c.localHeight)),c.resize(a,h)),c}return __extends(t,e),t.prototype.renderTexture=function(){this.texture.resize(this.localWidth,this.localHeight,!0);var e=[0,this.leftSize,this.baseFrame.width-this.rightSize,this.baseFrame.width],t=[0,this.topSize,this.baseFrame.height-this.bottomSize,this.baseFrame.height],i=[0,this.leftSize,this.localWidth-this.rightSize,this.localWidth],r=[0,this.topSize,this.localHeight-this.bottomSize,this.localHeight];this.texture.clear();for(var o=0;o<3;o++)for(var n=0;n<3;n++){var a=this.createTexturePart(e[n],t[o],e[n+1]-e[n],t[o+1]-t[o]);a.width=i[n+1]-i[n],a.height=r[o+1]-r[o],this.texture.renderXY(a,i[n],r[o])}},t.prototype.resize=function(e,t){this.localWidth=e,this.localHeight=t,this.renderTexture()},t.prototype.destroy=function(){for(var t=[],i=0;i<arguments.length;i++)t[i]=arguments[i];e.prototype.destroy.call(this,t[0]),this.texture.destroy(!0),this.texture=null,this.baseTexture=null,this.baseFrame=null},t.prototype.createTexturePart=function(e,t,i,r){var o=new PIXI.Rectangle(this.baseFrame.x+this.texture.frame.x+e,this.baseFrame.y+this.texture.frame.y+t,Math.max(i,1),Math.max(r,1));return new Phaser.Sprite(this.game,0,0,new PIXI.Texture(this.baseTexture,o))},t}(Phaser.Sprite);e.NineSlice=t}(PhaserNineSlice||(PhaserNineSlice={})),function(e){var t=function(t){function i(e,i){var r=t.call(this,e,i)||this;return r.addNineSliceCache(),r.addNineSliceFactory(),r.addNineSliceLoader(),r}return __extends(i,t),i.prototype.addNineSliceLoader=function(){Phaser.Loader.prototype.nineSlice=function(e,t,i,r,o,n){var a={top:i};r&&(a.left=r),o&&(a.right=o),n&&(a.bottom=n),this.addToFileList("image",e,t),this.game.cache.addNineSlice(e,a)}},i.prototype.addNineSliceFactory=function(){Phaser.GameObjectFactory.prototype.nineSlice=function(t,i,r,o,n,a,h){void 0===h&&(h=this.world);var s=new e.NineSlice(this.game,t,i,r,o,n,a);return h.add(s)},Phaser.GameObjectCreator.prototype.nineSlice=function(t,i,r,o,n,a){return new e.NineSlice(this.game,t,i,r,o,n,a)}},i.prototype.addNineSliceCache=function(){Phaser.Cache.prototype.nineSlice={},Phaser.Cache.prototype.addNineSlice=function(e,t){this.nineSlice[e]=t},Phaser.Cache.prototype.getNineSlice=function(e){return this.nineSlice[e]}},i}(Phaser.Plugin);e.Plugin=t}(PhaserNineSlice||(PhaserNineSlice={}));