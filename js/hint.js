var HintType={None:"None",RowsMustBeUnique:"No two rows are the same.",ColsMustBeUnique:"No two columns are the same.",RowMustBeBalanced:"Rows have an equal number of each color.",ColMustBeBalanced:"Columns have an equal number of each color.",MaxTwoRed:"Three red tiles aren't allowed next to eachother.",MaxTwoBlue:"Three blue tiles aren't allowed next to eachother.",SinglePossibleRowCombo:"Only one combination is possible here.",SinglePossibleColCombo:"Only one combination is possible here.",Error:"This one doesn't seem right.",Errors:"These don't seem right."};function Hint(e){var o=!1,t=!1,l={type:HintType.None,tile:null,tile2:null,doubleRowOrCol:[]};function n(e){var o=e;$("#hintMsg").html("<span>"+o+"</span>"),$("html").addClass("showHint"),t=!0}function i(){$("html").removeClass("showHint"),t=!1}this.doubleColFound=[],this.doubleRowFound=[],this.clear=function(){this.doubleColFound=[],this.doubleRowFound=[],i(),e&&e.unmark(),o=!1,l={type:HintType.None,tile:null,tile2:null,doubleRowOrCol:[]}},this.mark=function(e,t,n,i){return!!o&&(l.tile=e,l.tile2=n||null,l.type=t,l.doubleRowOrCol=i,!0)},this.next=function(){var t=e.wrongTiles;if(t.length)1==t.length?(t[0].mark(),n(HintType.Error)):($(t).each((function(){this.mark()})),n(HintType.Errors));else if(o=!0,e.solve(!1,!0),l.tile)switch(n(l.type),l.type){case HintType.RowMustBeBalanced:e.markRow(l.tile.y);break;case HintType.ColMustBeBalanced:e.markCol(l.tile.x);break;case HintType.RowsMustBeUnique:e.markRow(l.tile.y),e.markRow(l.doubleRowOrCol[0]!=l.tile.y?l.doubleRowOrCol[0]:l.doubleRowOrCol[1]);break;case HintType.ColsMustBeUnique:e.markCol(l.tile.x),e.markCol(l.doubleRowOrCol[0]!=l.tile.x?l.doubleRowOrCol[0]:l.doubleRowOrCol[1]);break;default:l.tile2&&l.tile2.mark(),l.tile.mark();break}},this.show=n,this.hide=i,this.info=l,this.__defineGetter__("active",(function(){return o})),this.__defineSetter__("active",(function(e){o=e})),this.__defineGetter__("visible",(function(){return t}))}